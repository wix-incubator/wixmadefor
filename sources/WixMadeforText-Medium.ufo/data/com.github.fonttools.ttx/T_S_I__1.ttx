<?xml version="1.0" encoding="UTF-8"?>
<ttFont sfntVersion="\x00\x01\x00\x00" ttLibVersion="3.40">

  <TSI1>

    <glyphProgram name=".notdef">
/* VTT 6.01C compiler */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 4
MDAP[R], 1
MDRP[m&gt;RBl], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name=".null">
/* VTT 6.01C compiler */

    </glyphProgram>

    <glyphProgram name="A">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 8
MDRP[m&lt;RGr], 4
MIAP[R], 6, 2
SRP2[], 1
IP[], 2
MDAP[R], 2
MIRP[m&gt;RBl], 8, 72
SRP1[], 6
IP[], 10
RUTG[]
MDAP[R], 10
DLTP1[(10 @0 -8)]
DLTP1[(10 @8 7)(10 @9 7)]
DLTP2[(10 @1 4)]
DLTP2[(10 @2 3)]
DLTP2[(10 @3 4)]
DLTP2[(10 @10 5)(10 @11 5)]
DLTP2[(10 @12 7)(10 @13 7)(10 @14 7)]
DLTP2[(10 @15 8)]
DLTP3[(10 @5 4)]
DLTP3[(10 @6 5)(10 @7 5)(10 @8 5)]
DLTP3[(10 @9 8)(10 @10 8)(10 @11 8)]
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="AE">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 2
MIRP[m&gt;RBl], 3, 72
MIAP[R], 11, 8
MIRP[m&gt;RBl], 9, 72
SRP1[], 1
IP[], 5
MDAP[R], 5
MIRP[m&gt;RBl], 7, 72
SRP0[], 11
MDRP[m&lt;RGr], 15
SRP1[], 1
IP[], 13
MDAP[R], 13
MIRP[m&gt;RBl], 16, 73
SRP1[], 1
IP[], 18
RUTG[]
MDAP[R], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Aacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 170, 0, 0
OFFSET[R], 301, 360, 0
CALL[],2,6,12,79
CALL[],63,13,11,5,0,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Abreve">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 170, 0, 0
OFFSET[R], 430, 360, 0
CALL[],2,6,11,79
CALL[],0,14,22,5,0,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Abreveacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 170, 0, 0
OFFSET[R], 541, 360, 0
CALL[],2,6,11,79
CALL[],3,6,15,79
CALL[],1,18,13,5,0,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="Abrevedotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 170, 0, 0
OFFSET[R], 430, 360, 0
OFFSET[R], 474, 360, 0
/* No vertical hints due to overlapping parts */
CALL[],2,6,12,79
CALL[],0,14,22,5,0,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="Abrevegrave">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 170, 0, 0
OFFSET[R], 543, 360, 0
CALL[],2,6,11,79
CALL[],3,6,15,79
CALL[],0,18,26,5,0,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="Abrevehookabove">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 170, 0, 0
OFFSET[R], 545, 360, 0
CALL[],2,6,11,79
CALL[],3,6,26,79
CALL[],0,29,37,5,0,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="Abrevetilde">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 170, 0, 0
OFFSET[R], 547, 360, 0
CALL[],2,6,26,79
CALL[],3,6,35,79
CALL[],0,12,24,5,0,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="Acircumflex">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 170, 0, 0
OFFSET[R], 359, 360, 0
CALL[],2,6,11,79
CALL[],0,15,11,5,0,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Acircumflexacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 170, 0, 0
OFFSET[R], 503, 360, 0
CALL[],3,6,15,79
SHC[2],2
CALL[],86,15,13,5,0,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="Acircumflexdotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 170, 0, 0
OFFSET[R], 359, 360, 0
OFFSET[R], 474, 360, 0
/* No vertical hints due to overlapping parts */
CALL[],2,6,14,79
CALL[],0,15,11,5,0,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="Acircumflexgrave">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 170, 0, 0
OFFSET[R], 505, 360, 0
CALL[],3,6,15,79
SHC[2],2
CALL[],42,15,14,5,0,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="Acircumflexhookabove">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 170, 0, 0
OFFSET[R], 507, 360, 0
CALL[],3,6,26,79
SHC[2],2
CALL[],48,26,23,5,0,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="Acircumflextilde">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 170, 0, 0
OFFSET[R], 509, 360, 0
CALL[],3,6,35,79
SHC[2],2
CALL[],0,12,25,5,0,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="Acyr">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 170, 0, 0

    </glyphProgram>

    <glyphProgram name="Adieresis">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 170, 0, 0
OFFSET[R], 426, 360, 0
CALL[],2,6,11,79
CALL[],3,6,23,79
CALL[],0,25,19,5,0,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="Adotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 170, 0, 0
OFFSET[R], 474, 360, 0
/* No vertical hints due to overlapping parts */
CALL[],0,13,19,5,0,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Agrave">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 170, 0, 0
OFFSET[R], 341, 360, 0
CALL[],2,6,11,79
CALL[],-64,12,14,5,0,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Ahookabove">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 170, 0, 0
OFFSET[R], 476, 360, 0
CALL[],2,6,11,79
CALL[],2,19,23,5,0,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Amacron">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 170, 0, 0
OFFSET[R], 396, 360, 0
CALL[],2,6,11,79
CALL[],0,12,11,5,0,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Aogonek">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 170, 0, 0
OFFSET[R], 270, 563, 0
/* No vertical hints due to overlapping parts */
CALL[],227,17,11,5,0,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Aring">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 170, 0, 0
OFFSET[R], 467, 360, 0
CALL[],2,6,11,79
CALL[],3,6,23,79
CALL[],0,13,19,5,0,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="Atilde">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 170, 0, 0
OFFSET[R], 363, 360, 0
CALL[],2,6,14,79
CALL[],-1,25,12,5,0,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="B">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MIRP[m&gt;RBl], 26, 73
MIAP[R], 1, 2
MIRP[m&gt;RBl], 17, 73
SRP2[], 26
IP[], 19
MDAP[R], 19
SRP2[], 17
IP[], 6
MIRP[m&gt;RBl], 33, 73
IP[], 9
RTHG[]
MDAP[R], 9
SRP1[], 26
IP[], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Be">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MIRP[m&gt;RBl], 17, 72
MDAP[R], 1
MIRP[m&gt;RBl], 4, 72
SRP1[], 0
IP[], 5
MDAP[R], 5
DLTP1[(5 @0 8)]
MIRP[m&gt;RBl], 15, 72
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="C">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 4, 9
SHP[1], 1
MIRP[m&gt;RBl], 28, 74
SHP[2], 0
MIAP[R], 14, 3
SHP[1], 17
MIRP[m&gt;RBl], 20, 74
SHP[2], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="CR">
/* VTT 6.01C compiler */

    </glyphProgram>

    <glyphProgram name="Cacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 172, 0, 0
OFFSET[R], 301, 409, 0
CALL[],1,13,32,79
CALL[],104,33,31,8,1,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Ccaron">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 172, 0, 0
OFFSET[R], 391, 409, 0
CALL[],1,13,36,79
CALL[],40,31,35,8,1,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Ccedilla">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 172, 0, 0
OFFSET[R], 263, 411, 0
/* No vertical hints due to overlapping parts */
CALL[],43,31,48,8,1,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Cdotaccent">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 172, 0, 0
OFFSET[R], 451, 409, 0
CALL[],1,13,31,79
CALL[],41,33,39,8,1,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Che">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 5, 2
MIAP[R], 13, 2
MIAP[R], 16, 8
SRP2[], 5
IP[], 0
MDAP[R], 0
SHP[1], 17
MIRP[m&gt;RBl], 9, 74
SHP[2], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="D">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MIRP[m&gt;RBl], 11, 72
MIAP[R], 1, 2
MIRP[m&gt;RBl], 20, 72
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Dcaron">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 173, 0, 0
OFFSET[R], 391, 336, 0
CALL[],2,1,27,79
CALL[],-59,22,26,0,5,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Dcroat">
/* Composite glyph autohinted */

OFFSET[R], 243, 0, 0

    </glyphProgram>

    <glyphProgram name="De">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 6, 2
MIRP[m&gt;RBl], 21, 72
MIAP[R], 11, 163
MIAP[R], 12, 8
MIAP[R], 13, 8
MIRP[M&gt;RBl], 2, 72
MDRP[m&lt;RGr], 8
MDRP[m&lt;RGr], 18
MIAP[R], 14, 163
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="De.loclBGR">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 3, 2
MIAP[R], 8, 163
MIAP[R], 10, 8
MIRP[M&gt;RBl], 2, 72
MDRP[m&lt;RGr], 5
MDRP[m&lt;RGr], 12
SRP2[], 3
IP[], 14
MIAP[R], 11, 163
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Dje">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MIAP[R], 3, 2
MIRP[M&gt;RBl], 1, 72
MDRP[m&lt;RGr], 6
SRP1[], 3
SRP2[], 0
IP[], 9
MDAP[R], 9
SHP[1], 7
MIRP[m&gt;RBl], 23, 74
SHP[2], 26
MIAP[R], 16, 8
MIRP[m&gt;RBl], 17, 72
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Dze">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 188, 0, 0

    </glyphProgram>

    <glyphProgram name="Dzhe">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 2, 2
MIAP[R], 5, 2
MIAP[R], 10, 163
MIAP[R], 11, 8
MIRP[m&gt;RBl], 3, 72
MDRP[m&lt;RGr], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="E">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 8
MIRP[m&gt;RBl], 10, 72
MIAP[R], 2, 2
MIRP[m&gt;RBl], 4, 72
SRP2[], 10
IP[], 6
MDAP[R], 6
MIRP[m&gt;RBl], 8, 72
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Eacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 174, 0, 0
OFFSET[R], 301, 329, 0
CALL[],1,2,13,79
CALL[],63,14,12,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Ecaron">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 174, 0, 0
OFFSET[R], 391, 329, 0
CALL[],1,2,17,79
CALL[],0,12,16,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Ecircumflex">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 174, 0, 0
OFFSET[R], 359, 329, 0
CALL[],1,2,12,79
CALL[],0,16,12,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Ecircumflexacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 174, 0, 0
OFFSET[R], 503, 329, 0
CALL[],2,2,16,79
SHC[2],1
CALL[],87,16,14,1,0,80
SHC[2],1
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Ecircumflexdotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 174, 0, 0
OFFSET[R], 359, 329, 0
OFFSET[R], 474, 329, 0
/* No vertical hints due to overlapping parts */
CALL[],1,2,15,79
CALL[],0,16,12,1,0,80
SHC[2],1
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Ecircumflexgrave">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 174, 0, 0
OFFSET[R], 505, 329, 0
CALL[],2,2,16,79
SHC[2],1
CALL[],43,16,15,1,0,80
SHC[2],1
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Ecircumflexhookabove">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 174, 0, 0
OFFSET[R], 507, 329, 0
CALL[],2,2,27,79
SHC[2],1
CALL[],48,27,24,1,0,80
SHC[2],1
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Ecircumflextilde">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 174, 0, 0
OFFSET[R], 509, 329, 0
CALL[],2,2,36,79
SHC[2],1
CALL[],1,13,26,1,0,80
SHC[2],1
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Ecyr">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 9
SHP[2], 3
MIRP[m&gt;RBl], 7, 74
SHP[2], 4
MIAP[R], 24, 3
SHP[1], 21
MIRP[m&gt;RBl], 17, 74
SHP[2], 20
SRP1[], 0
IP[], 12
MDAP[R], 12
MIRP[m&gt;RBl], 14, 72
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Edieresis">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 174, 0, 0
OFFSET[R], 426, 329, 0
CALL[],1,2,12,79
CALL[],2,2,24,79
CALL[],0,26,20,1,0,80
SHC[2],1
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Edotaccent">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 174, 0, 0
OFFSET[R], 451, 329, 0
CALL[],1,2,12,79
CALL[],0,14,20,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Edotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 174, 0, 0
OFFSET[R], 474, 329, 0
/* No vertical hints due to overlapping parts */
CALL[],0,14,20,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Ef">
/* VTT 6.01C compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IP[], 7
IP[], 16
MDAP[R], 7
MDAP[R], 16
SRP1[], 7
SHP[1], 10
SRP0[], 7
MIRP[m&gt;RBl], 28, 72
SHP[2], 21
SRP1[], 16
SHP[1], 1
SRP0[], 16
MIRP[m&gt;RBl], 22, 72
SHP[2], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Ef.loclBGR">
/* VTT 6.01C compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 8
IP[], 7
IP[], 1
MDAP[R], 7
MDAP[R], 1
SRP1[], 7
SHP[1], 10
SRP0[], 7
MIRP[m&gt;RBl], 21, 72
SHP[2], 26
SRP1[], 1
SHP[1], 16
SRP0[], 1
MIRP[m&gt;RBl], 20, 72
SHP[2], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Egrave">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 174, 0, 0
OFFSET[R], 341, 329, 0
CALL[],1,2,12,79
CALL[],-63,13,15,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Ehookabove">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 174, 0, 0
OFFSET[R], 476, 329, 0
CALL[],1,2,12,79
CALL[],2,20,24,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="El">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MIRP[m&gt;RBl], 1, 72
MIAP[R], 6, 2
MIRP[m&gt;RBl], 11, 72
MIAP[R], 9, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="El.loclBGR">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 2
MIAP[R], 4, 8
MIAP[R], 6, 8
SRP2[], 1
IP[], 5
RUTG[]
MDAP[R], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Em">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 182, 0, 0

    </glyphProgram>

    <glyphProgram name="Emacron">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 174, 0, 0
OFFSET[R], 396, 329, 0
CALL[],1,2,12,79
CALL[],0,13,12,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="En">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 177, 0, 0

    </glyphProgram>

    <glyphProgram name="Eng">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
SHP[2], 7
SHP[2], 17
MIAP[R], 2, 2
MDRP[m&lt;RGr], 5
SRP2[], 0
IP[], 18
IP[], 4
RDTG[]
MDAP[R], 18
MDAP[R], 4
RTG[]
MDAP[R], 10
SHP[1], 12
MIRP[m&gt;RBl], 15, 74
SHP[2], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Eogonek">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 174, 0, 0
OFFSET[R], 270, 449, 0
/* No vertical hints due to overlapping parts */
CALL[],144,18,12,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Er">
OFFSET[R], 185, 0, 0

    </glyphProgram>

    <glyphProgram name="Es">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 172, 0, 0

    </glyphProgram>

    <glyphProgram name="Eth">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MIRP[m&gt;RBl], 15, 72
MIAP[R], 5, 2
MIRP[m&gt;RBl], 24, 72
SRP2[], 15
IP[], 4
MDAP[R], 4
SDB[], 64
DLTP1[(4 @0 8)(4 @1 8)]
MDRP[m&lt;RGr], 26
MIRP[M&gt;RBl], 29, 73
MDRP[m&lt;RGr], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Etilde">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 174, 0, 0
OFFSET[R], 363, 329, 0
CALL[],1,2,15,79
CALL[],0,26,13,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Euro">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 11, 13
SHP[1], 8
MIRP[m&gt;RBl], 4, 103
SHP[2], 7
MIAP[R], 29, 5
SHP[1], 32
SRP2[], 11
IP[], 0
MDAP[R], 0
SDB[], 8
DLTP1[(0 @0 8)(0 @1 8)(0 @6 8)(0 @10 8)]
DLTP1[(0 @15 -8)]
DLTP2[(0 @11 -8)]
DLTP3[(0 @8 -8)]
SDB[], 56
DLTP1[(0 @0 8)(0 @4 8)(0 @15 8)]
MDRP[m&lt;RGr], 15
MIRP[M&gt;RBl], 46, 102
MDRP[m&lt;RGr], 18
MDRP[M&gt;RWh], 39
SDB[], 8
DLTP1[(39 @0 -8)(39 @1 -8)]
MDRP[m&lt;RGr], 25
MIRP[M&gt;RBl], 40, 102
MDRP[m&lt;RGr], 22
SRP0[], 29
MIRP[m&gt;RBl], 35, 103
SHP[2], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="F">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MIAP[R], 2, 2
MIRP[m&gt;RBl], 4, 72
SRP1[], 0
IP[], 8
MDAP[R], 8
MIRP[m&gt;RBl], 6, 72
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Fita">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 9
MIRP[m&gt;RBl], 29, 74
MIAP[R], 10, 3
MIRP[m&gt;RBl], 20, 74
SRP1[], 0
IP[], 34
MDAP[R], 34
MIRP[m&gt;RBl], 25, 72
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="G">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MIAP[R], 5, 9
SHP[1], 2
MIRP[m&gt;RBl], 29, 74
MIAP[R], 15, 3
SHP[1], 18
MIRP[m&gt;RBl], 21, 74
SHP[2], 19
SRP2[], 29
IP[], 35
MDAP[R], 35
MIRP[m&gt;RBl], 33, 73
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Gbreve">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 176, 0, 0
OFFSET[R], 430, 410, 0
CALL[],1,14,37,79
CALL[],24,40,48,9,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Gcommabelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 176, 0, 0
OFFSET[R], 266, 407, 0
/* No vertical hints due to overlapping parts */
CALL[],17,38,49,9,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Gdotaccent">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 176, 0, 0
OFFSET[R], 451, 410, 0
CALL[],1,14,37,79
CALL[],24,39,45,9,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Germandbls">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 18, 8
MIAP[R], 23, 2
MIRP[m&gt;RBl], 13, 73
SHP[2], 25
SRP1[], 18
IP[], 20
MIAP[R], 34, 9
SHP[1], 0
MIRP[m&gt;RBl], 3, 74
SHP[2], 1
SRP1[], 23
IP[], 26
MDAP[R], 26
SHP[1], 12
MIRP[m&gt;RBl], 9, 150
SHP[2], 11
SRP1[], 3
IP[], 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Ghe">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 2
MIRP[m&gt;RBl], 4, 72
MIAP[R], 5, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Gheup">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 2
MDRP[m&gt;RWh], 3
MIRP[m&gt;RBl], 6, 72
MIAP[R], 7, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Gje">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 591, 0, 0
OFFSET[R], 301, 318, 0
CALL[],1,1,7,79
CALL[],69,8,6,0,2,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="H">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MDRP[m&lt;RGr], 8
MIAP[R], 2, 2
MDRP[m&lt;RGr], 6
SRP2[], 0
IP[], 10
MDAP[R], 10
DLTP1[(10 @8 8)]
DLTP2[(10 @4 -8)(10 @5 -8)(10 @14 -8)]
DLTP3[(10 @1 -8)(10 @11 -8)]
MIRP[m&gt;RBl], 4, 72
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Ha">
OFFSET[R], 193, 0, 0

    </glyphProgram>

    <glyphProgram name="Hard">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MIRP[m&gt;RBl], 17, 72
MIAP[R], 3, 2
MIRP[m&gt;RBl], 1, 72
SRP2[], 0
IP[], 5
MDAP[R], 5
MIRP[m&gt;RBl], 16, 72
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Hbar">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MDRP[m&lt;RGr], 16
MIAP[R], 6, 2
MDRP[m&lt;RGr], 10
SRP2[], 0
IP[], 18
MDAP[R], 18
SDB[], 8
DLTP1[(18 @0 -8)(18 @1 -8)]
DLTP1[(18 @9 8)]
DLTP2[(18 @5 -8)(18 @6 -8)(18 @15 -8)]
DLTP3[(18 @2 -8)(18 @12 -8)]
MIRP[M&gt;RBl], 20, 72
MDRP[M&gt;RBl], 2
DLTP1[(2 @6 -8)]
MDRP[m&lt;RGr], 15
MDRP[m&lt;RGr], 23
MIRP[M&gt;RBl], 5, 73
MDRP[m&lt;RGr], 8
MDRP[m&lt;RGr], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Hdotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 177, 0, 0
OFFSET[R], 474, 378, 0
/* No vertical hints due to overlapping parts */
CALL[],1,14,20,1,7,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="I">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MIAP[R], 2, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="IJ">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 2, 2
MDRP[m&lt;RGr], 4
MIAP[R], 8, 9
MIRP[m&gt;RBl], 14, 74
SRP1[], 2
IP[], 12
MDAP[R], 12
SRP2[], 2
IP[], 5
RDTG[]
MDRP[m&gt;RWh], 0
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="IJacute">
/* Composite glyph autohinted */

OFFSET[R], 237, 0, 0
OFFSET[R], 301, 140, 0
OFFSET[R], 301, 581, 0
CALL[],2,2,21,79
CALL[],3,18,25,79
CALL[],76,21,23,1,4,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="Iacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 178, 0, 0
OFFSET[R], 301, 150, 0
CALL[],1,2,5,79
CALL[],63,6,4,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Ibrevecyr">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 596, 0, 0
OFFSET[R], 710, 382, 206
CALL[],1,1,10,79
CALL[],4,13,20,0,5,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Icircumflex">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 178, 0, 0
OFFSET[R], 359, 150, 0
CALL[],1,2,4,79
CALL[],0,8,4,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Icyr">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 2
MIAP[R], 4, 2
MIAP[R], 7, 8
MIAP[R], 9, 8
SRP2[], 1
IP[], 8
IP[], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Idieresis">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 178, 0, 0
OFFSET[R], 426, 150, 0
CALL[],1,2,4,79
CALL[],2,2,16,79
CALL[],0,18,12,1,0,80
SHC[2],1
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Idotaccent">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 178, 0, 0
OFFSET[R], 451, 150, 0
CALL[],1,2,4,79
CALL[],0,6,12,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Idotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 178, 0, 0
OFFSET[R], 474, 150, 0
/* No vertical hints due to overlapping parts */
CALL[],0,6,12,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Ie">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 174, 0, 0

    </glyphProgram>

    <glyphProgram name="Iegrave">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 174, 0, 0
OFFSET[R], 341, 329, 0
CALL[],1,2,12,79
CALL[],-63,13,15,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Ieukrain">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 9
SHP[2], 32
MIRP[m&gt;RBl], 28, 74
SHP[2], 31
MIAP[R], 10, 3
SHP[1], 13
MIRP[m&gt;RBl], 17, 74
SHP[2], 14
SRP1[], 0
IP[], 24
MDAP[R], 24
MIRP[m&gt;RBl], 22, 72
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Igrave">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 178, 0, 0
OFFSET[R], 341, 150, 0
CALL[],1,2,4,79
CALL[],-64,5,7,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Igravecyr">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 596, 0, 0
OFFSET[R], 341, 382, 0
CALL[],1,1,10,79
CALL[],-59,11,13,0,5,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Ihookabove">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 178, 0, 0
OFFSET[R], 476, 150, 0
CALL[],1,2,4,79
CALL[],2,12,16,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Imacron">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 178, 0, 0
OFFSET[R], 396, 150, 0
CALL[],1,2,4,79
CALL[],0,5,4,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Io">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 174, 0, 0
OFFSET[R], 426, 329, 0
CALL[],1,2,12,79
CALL[],2,2,24,79
CALL[],0,26,20,1,0,80
SHC[2],1
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Iogonek">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 178, 0, 0
OFFSET[R], 270, 92, 0
/* No vertical hints due to overlapping parts */
CALL[],-34,10,4,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Itilde">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 178, 0, 0
OFFSET[R], 363, 150, 0
CALL[],1,2,7,79
CALL[],-1,18,5,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Iukrain">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 178, 0, 0

    </glyphProgram>

    <glyphProgram name="Izhitsa">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MIAP[R], 2, 2
IP[], 3
RDTG[]
MDAP[R], 3
RTG[]
MIAP[R], 8, 2
MIRP[m&gt;RBl], 9, 72
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="J">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 4, 9
MIRP[m&gt;RBl], 10, 74
MIAP[R], 14, 2
IP[], 8
MDAP[R], 8
SRP2[], 14
IP[], 1
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Je">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 179, 0, 0

    </glyphProgram>

    <glyphProgram name="K">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MDRP[m&lt;RGr], 9
MIAP[R], 3, 2
MDRP[m&lt;RGr], 5
SRP1[], 9
SLOOP[], 3
IP[], 4, 7, 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Ka">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 180, 0, 0

    </glyphProgram>

    <glyphProgram name="Kcommabelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 180, 0, 0
OFFSET[R], 266, 355, 0
/* No vertical hints due to overlapping parts */
CALL[],-37,12,23,1,8,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Kje">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 180, 0, 0
OFFSET[R], 301, 354, 0
CALL[],1,2,12,79
CALL[],29,13,11,1,8,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="L">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 8
MIRP[m&gt;RBl], 4, 72
MIAP[R], 2, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Lacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 181, 0, 0
OFFSET[R], 301, 150, 0
CALL[],1,2,7,79
CALL[],-105,8,6,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Lcaron">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 181, 0, 0
OFFSET[R], 393, 374, 0
/* No vertical hints due to overlapping parts */
CALL[],58,7,18,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Lcommabelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 181, 0, 0
OFFSET[R], 266, 319, 0
/* No vertical hints due to overlapping parts */
CALL[],-4,7,18,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Ldotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 181, 0, 0
OFFSET[R], 474, 319, 0
/* No vertical hints due to overlapping parts */
CALL[],0,8,14,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Lje">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 6, 2
MIRP[m&gt;RBl], 20, 72
MIAP[R], 18, 8
MIRP[m&gt;RBl], 27, 72
SRP2[], 6
IP[], 8
MDAP[R], 8
MIRP[m&gt;RBl], 26, 72
MIAP[R], 24, 8
MIRP[m&gt;RBl], 2, 72
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Lslash">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 8
MIRP[m&gt;RBl], 12, 72
MIAP[R], 6, 2
SRP2[], 1
IP[], 3
IP[], 9
MDAP[R], 3
MDAP[R], 9
SRP0[], 3
MIRP[m&gt;RBl], 4, 86
SRP1[], 9
IP[], 8
IP[], 5
SRP0[], 9
MIRP[m&gt;RBl], 10, 86
SRP1[], 3
IP[], 2
IP[], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="M">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 3, 8
MDRP[m&lt;RGr], 10
MDRP[m&lt;RWh], 0
MIAP[R], 5, 2
MDRP[m&lt;RGr], 8
SRP2[], 0
IP[], 2
IP[], 7
RDTG[]
MDAP[R], 7
RUTG[]
MDAP[R], 2
SDB[], 8
DLTP1[(7 @0 7)(7 @1 7)]
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="N">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MDRP[m&lt;RGr], 7
MIAP[R], 2, 2
MDRP[m&lt;RGr], 5
SRP2[], 7
IP[], 9
IP[], 4
RDTG[]
MDAP[R], 4
RUTG[]
MDAP[R], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Nacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 183, 0, 0
OFFSET[R], 301, 386, 0
CALL[],1,2,11,79
CALL[],68,12,10,1,6,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Ncaron">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 183, 0, 0
OFFSET[R], 391, 386, 0
CALL[],1,2,15,79
CALL[],4,10,14,1,6,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Ncommabelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 183, 0, 0
OFFSET[R], 266, 369, 0
/* No vertical hints due to overlapping parts */
CALL[],-16,11,22,1,6,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Nje">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 2, 2
MIAP[R], 5, 2
MIAP[R], 17, 8
MIRP[m&gt;RBl], 23, 72
SRP2[], 5
IP[], 18
MDAP[R], 18
DLTP1[(18 @8 8)]
MDRP[m&lt;RBl], 22
MIRP[M&gt;RBl], 4, 72
MDRP[m&lt;RGr], 7
MIAP[R], 20, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Ntilde">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 183, 0, 0
OFFSET[R], 363, 386, 0
CALL[],1,2,13,79
CALL[],4,24,11,1,6,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="O">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 9
MIRP[m&gt;RBl], 20, 74
MIAP[R], 10, 3
MIRP[m&gt;RBl], 28, 74
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="OE">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 9
SHP[2], 26
MIRP[m&gt;RBl], 29, 74
MIAP[R], 10, 3
SHP[1], 13
MIRP[m&gt;RBl], 37, 74
MIAP[R], 14, 2
MIRP[m&gt;RBl], 16, 72
MIAP[R], 24, 8
MIRP[m&gt;RBl], 22, 72
SRP1[], 14
IP[], 18
MDAP[R], 18
MIRP[m&gt;RBl], 20, 72
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Oacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 184, 0, 0
OFFSET[R], 301, 414, 0
CALL[],2,9,37,79
CALL[],63,38,36,4,14,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Ocircumflex">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 184, 0, 0
OFFSET[R], 359, 414, 0
CALL[],2,9,36,79
CALL[],0,40,36,4,14,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Ocircumflexacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 184, 0, 0
OFFSET[R], 503, 414, 0
CALL[],3,9,40,79
SHC[2],2
CALL[],87,40,38,4,14,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="Ocircumflexdotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 184, 0, 0
OFFSET[R], 359, 414, 0
OFFSET[R], 474, 414, 0
/* No vertical hints due to overlapping parts */
CALL[],2,10,40,79
CALL[],0,40,36,4,14,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="Ocircumflexgrave">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 184, 0, 0
OFFSET[R], 505, 414, 0
CALL[],3,9,40,79
SHC[2],2
CALL[],43,40,39,4,14,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="Ocircumflexhookabove">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 184, 0, 0
OFFSET[R], 507, 414, 0
CALL[],3,9,51,79
SHC[2],2
CALL[],48,51,48,4,14,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="Ocircumflextilde">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 184, 0, 0
OFFSET[R], 509, 414, 0
CALL[],3,9,60,79
SHC[2],2
CALL[],1,37,50,4,14,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="Ocyr">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 184, 0, 0

    </glyphProgram>

    <glyphProgram name="Odieresis">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 184, 0, 0
OFFSET[R], 426, 414, 0
CALL[],2,9,36,79
CALL[],3,9,48,79
CALL[],0,50,44,4,14,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="Odotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 184, 0, 0
OFFSET[R], 474, 414, 0
/* No vertical hints due to overlapping parts */
CALL[],0,38,44,4,14,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Ograve">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 184, 0, 0
OFFSET[R], 341, 414, 0
CALL[],2,9,36,79
CALL[],-63,37,39,4,14,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Ohookabove">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 184, 0, 0
OFFSET[R], 476, 414, 0
CALL[],2,9,36,79
CALL[],2,44,48,4,14,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Ohorn">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 9
MIRP[m&gt;RBl], 33, 74
MIAP[R], 10, 3
SHP[1], 13
SHP[1], 25
MIRP[m&gt;RBl], 41, 74
MDAP[R], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Ohornacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 564, 0, 0
OFFSET[R], 301, 414, 0
/* No vertical hints due to overlapping parts */
CALL[],2,10,51,79
CALL[],40,51,49,4,21,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Ohorndotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 564, 0, 0
OFFSET[R], 474, 414, 0
/* No vertical hints due to overlapping parts */
CALL[],-23,51,57,4,21,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Ohorngrave">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 564, 0, 0
OFFSET[R], 341, 414, 0
/* No vertical hints due to overlapping parts */
CALL[],2,10,49,79
CALL[],-87,50,52,4,21,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Ohornhookabove">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 564, 0, 0
OFFSET[R], 476, 414, 0
/* No vertical hints due to overlapping parts */
CALL[],2,10,49,79
CALL[],-21,57,61,4,21,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Ohorntilde">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 564, 0, 0
OFFSET[R], 363, 414, 0
/* No vertical hints due to overlapping parts */
CALL[],2,10,53,79
CALL[],-24,63,50,4,21,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Ohungarumlaut">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 184, 0, 0
OFFSET[R], 306, 414, 0
CALL[],2,9,37,79
CALL[],3,9,41,79
CALL[],78,38,40,4,14,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="Oslash">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 10, 3
MDRP[m&lt;RWh], 14
SHP[2], 15
MIRP[m&gt;RBl], 35, 74
MIAP[R], 24, 9
MDRP[m&lt;RWh], 0
SHP[2], 1
SRP2[], 35
IP[], 27
IP[], 46
MIRP[m&gt;RBl], 39, 74
SRP1[], 35
IP[], 19
IP[], 5
SRP1[], 10
IP[], 13
IP[], 31
SRP1[], 13
SRP2[], 46
IP[], 16
IP[], 32
SRP1[], 31
SRP2[], 27
IP[], 47
IP[], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Otilde">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 184, 0, 0
OFFSET[R], 363, 414, 0
CALL[],2,9,39,79
CALL[],0,50,37,4,14,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="P">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MIAP[R], 2, 2
MIRP[m&gt;RBl], 13, 72
SRP1[], 0
IP[], 11
MDAP[R], 11
MIRP[m&gt;RBl], 15, 72
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Pe">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 2
MIRP[m&gt;RBl], 6, 72
MIAP[R], 4, 8
MIAP[R], 7, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Q">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 9
MDRP[m&gt;RWh], 20
SHP[2], 19
MIRP[M&gt;RBl], 24, 74
MDRP[m&gt;RGr], 28
SHP[2], 27
MIAP[R], 10, 3
SRP2[], 24
IP[], 29
MIRP[m&gt;RBl], 36, 74
SRP1[], 24
IP[], 5
SRP1[], 5
SHP[1], 15
SRP1[], 0
IP[], 21
SRP1[], 29
SRP2[], 21
IP[], 26
IP[], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="R">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MDRP[m&lt;RGr], 12
MIAP[R], 2, 2
MIRP[m&gt;RBl], 15, 72
SRP1[], 0
IP[], 13
MDAP[R], 13
SHP[1], 10
MIRP[m&gt;RBl], 17, 72
SRP1[], 15
IP[], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Racute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 187, 0, 0
OFFSET[R], 301, 322, 0
CALL[],2,2,25,79
CALL[],3,26,24,1,11,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Rcaron">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 187, 0, 0
OFFSET[R], 391, 322, 0
CALL[],2,2,29,79
CALL[],-60,24,28,1,11,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="S">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 16, 3
SHP[1], 18
MIRP[m&gt;RBl], 22, 74
SHP[2], 19
MIAP[R], 35, 9
SHP[1], 0
MIRP[m&gt;RBl], 3, 74
SHP[2], 1
SRP1[], 16
IP[], 28
SRP1[], 22
SRP2[], 28
IP[], 12
SRP2[], 35
IP[], 9
SRP1[], 3
SRP2[], 9
IP[], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Sacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 188, 0, 0
OFFSET[R], 301, 331, 0
CALL[],1,15,38,79
CALL[],67,39,37,0,30,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Scaron">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 188, 0, 0
OFFSET[R], 391, 331, 0
CALL[],1,15,42,79
CALL[],4,37,41,0,30,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Scedilla">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 188, 0, 0
OFFSET[R], 263, 338, 0
/* No vertical hints due to overlapping parts */
CALL[],12,37,54,0,30,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Scommabelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 188, 0, 0
OFFSET[R], 266, 338, 0
/* No vertical hints due to overlapping parts */
CALL[],7,38,49,0,30,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Sha">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MIRP[M&gt;RBl], 4, 72
MDRP[m&lt;RGr], 7
MIAP[R], 2, 2
MIAP[R], 5, 2
MIAP[R], 9, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Shcha">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 163
MIAP[R], 2, 8
MIRP[M&gt;RBl], 6, 72
MDRP[M&lt;RGr], 10
MDRP[m&lt;RGr], 14
MIAP[R], 4, 2
MIAP[R], 7, 2
MIAP[R], 11, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Soft">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MIRP[m&gt;RBl], 15, 72
MIAP[R], 1, 2
SRP2[], 0
IP[], 3
MDAP[R], 3
MIRP[m&gt;RBl], 14, 72
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="T">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MIAP[R], 4, 2
MIRP[M&gt;RBl], 2, 72
MDRP[m&lt;RGr], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Tbar">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MIAP[R], 8, 2
MIRP[M&gt;RBl], 6, 72
MDRP[m&lt;RGr], 11
SRP2[], 0
IP[], 15
MDAP[R], 15
MDRP[m&lt;RGr], 2
MIRP[M&gt;RBl], 5, 73
MDRP[m&lt;RGr], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Tcaron">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 189, 0, 0
OFFSET[R], 391, 307, 0
CALL[],1,4,13,79
CALL[],3,8,12,3,5,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Tcedilla">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 189, 0, 0
OFFSET[R], 263, 306, 0
/* No vertical hints due to overlapping parts */
CALL[],3,8,25,3,5,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Tcommabelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 189, 0, 0
OFFSET[R], 266, 306, 0
/* No vertical hints due to overlapping parts */
CALL[],-1,9,20,3,5,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Te">
OFFSET[R], 189, 0, 0

    </glyphProgram>

    <glyphProgram name="Thorn">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MIAP[R], 2, 2
IP[], 4
MDAP[R], 4
DLTP1[(4 @2 8)(4 @8 8)(4 @11 8)(4 @15 8)]
DLTP2[(4 @6 8)(4 @7 8)]
DLTP3[(4 @4 8)(4 @10 8)]
SDB[], 57
DLTP1[(4 @0 8)(4 @1 8)(4 @7 8)(4 @8 8)
      (4 @9 8)(4 @15 8)]
MIRP[M&gt;RBl], 15, 72
MDRP[M&gt;RGr], 13
MIRP[m&gt;RBl], 17, 72
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Tse">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 163
MIAP[R], 1, 8
MIRP[M&gt;RBl], 9, 72
MDRP[m&lt;RGr], 6
MIAP[R], 4, 2
MIAP[R], 7, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Tshe">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 3, 2
MIRP[M&gt;RBl], 1, 72
MDRP[m&lt;RGr], 6
MIAP[R], 14, 8
MIAP[R], 21, 8
SRP2[], 3
IP[], 9
MDAP[R], 9
SHP[1], 7
MIRP[m&gt;RBl], 18, 74
SHP[2], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="U">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 2
MDRP[m&lt;RGr], 8
MIAP[R], 4, 9
MIRP[m&gt;RBl], 13, 74
SRP1[], 8
IP[], 1
SRP1[], 1
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Uacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 190, 0, 0
OFFSET[R], 301, 365, 0
CALL[],1,0,19,79
CALL[],64,20,18,6,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Ubrevecyr">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 606, 0, 0
OFFSET[R], 710, 323, 206
CALL[],1,6,16,79
CALL[],0,19,26,6,10,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Ucircumflex">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 190, 0, 0
OFFSET[R], 359, 365, 0
CALL[],1,0,18,79
CALL[],0,22,18,6,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Ucyr">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MIRP[m&gt;RBl], 1, 72
MIAP[R], 7, 2
SRP2[], 0
IP[], 8
IP[], 5
MIAP[R], 9, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Udieresis">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 190, 0, 0
OFFSET[R], 426, 365, 0
CALL[],1,0,18,79
CALL[],2,0,30,79
CALL[],0,32,26,6,0,80
SHC[2],1
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Udotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 190, 0, 0
OFFSET[R], 474, 365, 0
/* No vertical hints due to overlapping parts */
CALL[],1,20,26,6,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Ugrave">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 190, 0, 0
OFFSET[R], 341, 365, 0
CALL[],1,0,18,79
CALL[],-63,19,21,6,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Uhookabove">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 190, 0, 0
OFFSET[R], 476, 365, 0
CALL[],1,0,18,79
CALL[],3,26,30,6,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Uhorn">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 9
MIRP[m&gt;RBl], 9, 74
MIAP[R], 5, 2
MIAP[R], 13, 2
MIRP[m&gt;RBl], 21, 72
MDAP[R], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Uhornacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 565, 0, 0
OFFSET[R], 301, 365, 0
/* No vertical hints due to overlapping parts */
CALL[],1,5,27,79
CALL[],-18,27,25,2,18,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Uhorndotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 565, 0, 0
OFFSET[R], 474, 365, 0
/* No vertical hints due to overlapping parts */
CALL[],-81,27,33,2,18,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Uhorngrave">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 565, 0, 0
OFFSET[R], 341, 365, 0
/* No vertical hints due to overlapping parts */
CALL[],1,5,25,79
CALL[],-145,26,28,2,18,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Uhornhookabove">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 565, 0, 0
OFFSET[R], 476, 365, 0
/* No vertical hints due to overlapping parts */
CALL[],1,5,25,79
CALL[],-79,33,37,2,18,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Uhorntilde">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 565, 0, 0
OFFSET[R], 363, 365, 0
/* No vertical hints due to overlapping parts */
CALL[],1,5,29,79
CALL[],-82,39,26,2,18,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Uhungarumlaut">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 190, 0, 0
OFFSET[R], 306, 365, 0
CALL[],1,0,19,79
CALL[],2,0,23,79
CALL[],79,20,22,6,0,80
SHC[2],1
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Umacron">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 190, 0, 0
OFFSET[R], 396, 365, 0
CALL[],1,0,18,79
CALL[],0,19,18,6,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Uogonek">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 190, 0, 0
OFFSET[R], 272, 397, 0
/* No vertical hints due to overlapping parts */
CALL[],58,24,29,6,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Uring">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 190, 0, 0
OFFSET[R], 467, 365, 0
CALL[],1,0,18,79
CALL[],2,0,30,79
CALL[],0,20,26,6,0,80
SHC[2],1
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Utilde">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 190, 0, 0
OFFSET[R], 363, 365, 0
CALL[],1,0,21,79
CALL[],0,32,19,6,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="V">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MIAP[R], 2, 2
MDRP[m&lt;RGr], 5
SRP2[], 0
IP[], 4
RDTG[]
MDAP[R], 4
SDB[], 8
DLTP1[(4 @0 7)]
DLTP1[(4 @1 8)]
DLTP1[(4 @10 -4)]
DLTP2[(4 @2 -4)(4 @3 -4)(4 @4 -4)]
DLTP3[(4 @0 -4)(4 @10 -4)]
DLTP3[(4 @12 -8)]
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Ve">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 171, 0, 0

    </glyphProgram>

    <glyphProgram name="W">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 3, 8
MDRP[m&lt;RGr], 0
MIAP[R], 5, 2
MDRP[m&lt;RGr], 11
MDRP[m&lt;RGr], 8
SRP1[], 3
IP[], 2
IP[], 10
RDTG[]
MDAP[R], 10
RUTG[]
MDAP[R], 2
SRP1[], 10
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Wacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 192, 0, 0
OFFSET[R], 301, 505, 0
CALL[],1,5,14,79
CALL[],63,15,13,5,12,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Wcircumflex">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 192, 0, 0
OFFSET[R], 359, 505, 0
CALL[],1,5,13,79
CALL[],0,17,13,5,12,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Wdieresis">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 192, 0, 0
OFFSET[R], 426, 505, 0
CALL[],1,5,13,79
CALL[],2,5,25,79
CALL[],0,27,21,5,12,80
SHC[2],1
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Wgrave">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 192, 0, 0
OFFSET[R], 341, 505, 0
CALL[],1,5,13,79
CALL[],-63,14,16,5,12,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="X">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MDRP[m&lt;RGr], 10
MIAP[R], 3, 2
MDRP[m&lt;RGr], 6
SRP2[], 10
IP[], 8
IP[], 2
RTHG[]
MDAP[R], 8
MDAP[R], 2
SRP1[], 8
IP[], 11
DLTP2[(11 @10 4)(11 @11 4)(11 @12 4)]
SRP1[], 2
SRP2[], 3
IP[], 5
DLTP2[(5 @10 -3)(5 @11 -3)]
DLTP2[(5 @12 -4)]
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Y">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MIAP[R], 3, 2
MDRP[m&lt;RGr], 6
SRP2[], 0
IP[], 5
RDTG[]
MDAP[R], 5
IP[], 2
SRP1[], 2
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Ya">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 9, 2
MIRP[m&gt;RBl], 17, 72
MIAP[R], 11, 8
IP[], 13
MDAP[R], 13
SHP[1], 1
MIRP[m&gt;RBl], 16, 72
MIAP[R], 14, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Yacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 194, 0, 0
OFFSET[R], 301, 343, 0
CALL[],1,3,10,79
CALL[],67,11,9,3,7,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Yat">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MIRP[m&gt;RBl], 23, 72
MIAP[R], 5, 2
SRP2[], 0
IP[], 4
IP[], 11
MDAP[R], 4
MDAP[R], 11
SDB[], 8
DLTP1[(11 @0 -8)(11 @1 -8)]
SRP0[], 4
MDRP[m&lt;RGr], 7
MIRP[M&gt;RBl], 1, 72
MDRP[m&lt;RGr], 10
SRP0[], 11
MIRP[m&gt;RBl], 22, 72
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Ycircumflex">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 194, 0, 0
OFFSET[R], 359, 343, 0
CALL[],1,3,9,79
CALL[],3,13,9,3,7,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Ydieresis">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 194, 0, 0
OFFSET[R], 426, 343, 0
CALL[],1,3,9,79
CALL[],2,3,21,79
CALL[],3,23,17,3,7,80
SHC[2],1
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Ydotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 194, 0, 0
OFFSET[R], 474, 343, 0
/* No vertical hints due to overlapping parts */
CALL[],4,11,17,3,7,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Yeru">
OFFSET[R], 615, 0, 0
OFFSET[R], 178, 604, 0

    </glyphProgram>

    <glyphProgram name="Ygrave">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 194, 0, 0
OFFSET[R], 341, 343, 0
CALL[],1,3,9,79
CALL[],-60,10,12,3,7,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Yhookabove">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 194, 0, 0
OFFSET[R], 476, 343, 0
CALL[],1,3,9,79
CALL[],6,17,21,3,7,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Yi">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 178, 0, 0
OFFSET[R], 426, 150, 0
CALL[],1,2,4,79
CALL[],2,2,16,79
CALL[],0,18,12,1,0,80
SHC[2],1
SHC[2],2

    </glyphProgram>

    <glyphProgram name="Ytilde">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 194, 0, 0
OFFSET[R], 363, 343, 0
CALL[],1,3,12,79
CALL[],3,23,10,3,7,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Yu">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 2
MIAP[R], 8, 3
MIRP[m&gt;RBl], 33, 74
MIAP[R], 18, 9
MIRP[m&gt;RBl], 25, 74
MIAP[R], 24, 8
SRP2[], 1
IP[], 23
MDAP[R], 23
DLTP1[(23 @8 8)]
MIRP[m&gt;RBl], 4, 72
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Z">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MIRP[m&gt;RBl], 8, 72
SHP[2], 2
MIAP[R], 5, 2
MIRP[m&gt;RBl], 3, 72
SHP[2], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Zacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 195, 0, 0
OFFSET[R], 301, 300, 0
CALL[],1,5,11,79
CALL[],63,12,10,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Zcaron">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 195, 0, 0
OFFSET[R], 391, 300, 0
CALL[],1,5,15,79
CALL[],0,10,14,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Zdotaccent">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 195, 0, 0
OFFSET[R], 451, 300, 0
CALL[],1,5,10,79
CALL[],0,12,18,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="Ze">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 9
SHP[2], 3
MIRP[m&gt;RBl], 7, 74
SHP[2], 4
MIAP[R], 29, 3
SHP[1], 26
MIRP[m&gt;RBl], 22, 74
SHP[2], 25
SRP1[], 0
IP[], 13
MDAP[R], 13
MIRP[m&gt;RBl], 16, 72
IP[], 36
RTDG[]
MDAP[R], 36
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Zhe">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 3, 2
MIAP[R], 6, 2
MIAP[R], 8, 2
MIAP[R], 12, 8
MIAP[R], 15, 8
SRP2[], 6
SLOOP[], 6
IP[], 4, 7, 1, 10, 13, 16
MIAP[R], 17, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="a">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 23
MIRP[m&gt;RBl], 26, 87
MIAP[R], 16, 7
SHP[1], 14
DLTP1[(14 @1 1)(14 @2 1)(14 @3 1)]
IP[], 7
MDAP[R], 7
CALL[], 7, -64, 27, 30, 72
DLTP2[(7 @8 -8)(7 @9 -8)]
SHP[1], 20
MIRP[m&gt;RBl], 30, 86
SRP1[], 26
IP[], 4
SRP0[], 16
MIRP[m&gt;RBl], 11, 87
DLTP1[(11 @1 1)(11 @2 1)(11 @3 1)]
SHP[2], 13
CALL[], 13, 8, 8, 11, 72
DLTP1[(13 @3 2)]
MIAP[R], 21, 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="aacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 300, 264, 0
CALL[],2,15,38,79
CALL[],56,39,37,3,19,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="abreve">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 429, 264, 0
CALL[],2,15,37,79
CALL[],3,40,48,3,19,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="abreveacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 540, 264, 0
CALL[],3,15,41,79
SHC[2],2
CALL[],6,44,39,3,19,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="abrevedotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 429, 264, 0
OFFSET[R], 473, 264, 0
/* No vertical hints due to overlapping parts */
CALL[],2,37,50,79
CALL[],3,40,48,3,19,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="abrevegrave">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 542, 264, 0
CALL[],3,15,41,79
SHC[2],2
CALL[],0,38,52,3,19,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="abrevehookabove">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 544, 264, 0
CALL[],3,15,53,79
SHC[2],2
CALL[],4,56,64,3,19,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="abrevetilde">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 546, 264, 0
CALL[],3,15,60,79
SHC[2],2
CALL[],3,38,71,3,19,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="acircumflex">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 358, 264, 0
CALL[],2,15,37,79
CALL[],3,41,37,3,19,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="acircumflexacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 502, 264, 0
CALL[],3,15,41,79
SHC[2],2
CALL[],86,41,39,3,19,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="acircumflexdotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 358, 264, 0
OFFSET[R], 473, 264, 0
/* No vertical hints due to overlapping parts */
CALL[],2,16,41,79
CALL[],3,41,37,3,19,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="acircumflexgrave">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 504, 264, 0
CALL[],3,15,41,79
SHC[2],2
CALL[],39,41,40,3,19,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="acircumflexhookabove">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 506, 264, 0
CALL[],3,15,53,79
SHC[2],2
CALL[],52,53,50,3,19,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="acircumflextilde">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 508, 264, 0
CALL[],3,15,60,79
SHC[2],2
CALL[],5,60,63,3,19,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="acute">
/* Composite glyph autohinted */

OFFSET[R], 300, 239, 0

    </glyphProgram>

    <glyphProgram name="acutecomb">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 147
SMD[], 128
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="acutecomb.asc">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 147
SMD[], 128
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="acutecomb.cap">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 154
SMD[], 128
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="acutecomb.narrow">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 147
SMD[], 128
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="acyr">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0

    </glyphProgram>

    <glyphProgram name="adieresis">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 425, 264, 0
CALL[],2,15,37,79
CALL[],3,15,49,79
CALL[],4,51,45,3,19,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="adotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 473, 264, 0
/* No vertical hints due to overlapping parts */
CALL[],3,39,45,3,19,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="ae">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 4, 11
SHP[1], 1
DLTP1[(1 @0 -1)(1 @1 -1)]
SHP[1], 7
MIRP[m&gt;RBl], 41, 87
DLTP1[(41 @0 -1)(41 @1 -1)]
SHP[2], 0
SDB[], 8
DLTP1[(0 @0 -2)]
DLTP1[(0 @1 -1)]
DLTP1[(0 @2 -2)]
DLTP1[(0 @11 -1)(0 @12 -1)]
MIAP[R], 10, 11
MIRP[m&gt;RBl], 50, 87
MIAP[R], 26, 7
SHP[1], 24
DLTP1[(24 @2 1)(24 @3 1)(24 @4 1)]
SHP[1], 29
MIRP[m&gt;RBl], 21, 87
DLTP1[(21 @2 1)(21 @4 1)]
SHP[2], 23
DLTP1[(23 @0 1)(23 @1 1)(23 @2 1)]
DLTP1[(23 @3 2)(23 @4 2)]
MIAP[R], 32, 7
MIRP[m&gt;RBl], 43, 87
SRP2[], 41
IP[], 46
MDAP[R], 46
DLTP3[(46 @3 -8)(46 @6 -8)(46 @7 -8)]
SDB[], 56
DLTP1[(46 @0 -8)(46 @1 -8)(46 @4 -8)(46 @5 -8)]
MDRP[M&lt;RBl], 17
MIRP[m&gt;RBl], 55, 86
SRP1[], 50
IP[], 14
SRP0[], 46
MIRP[m&gt;RBl], 37, 86
IP[], 36
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="agrave">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 340, 264, 0
CALL[],2,15,37,79
CALL[],-49,38,40,3,19,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="ahookabove">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 475, 264, 0
CALL[],2,15,37,79
CALL[],6,45,49,3,19,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="amacron">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 395, 264, 0
CALL[],2,15,37,79
CALL[],4,38,37,3,19,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="ampersand">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 9
MIAP[R], 5, 9
MIRP[m&gt;RBl], 45, 87
MIAP[R], 19, 3
IP[], 34
IP[], 27
SRP2[], 1
IP[], 28
MDAP[R], 28
SRP0[], 19
MIRP[m&gt;RBl], 39, 87
SRP1[], 5
IP[], 49
IP[], 2
SRP1[], 45
SRP2[], 49
IP[], 9
SRP1[], 34
IP[], 12
IP[], 26
SRP1[], 2
SRP2[], 27
IP[], 48
IP[], 30
SRP1[], 39
SRP2[], 34
IP[], 23
IP[], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="aogonek">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 269, 370, 0
/* No vertical hints due to overlapping parts */
CALL[],134,43,37,3,19,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="aring">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 466, 264, 0
/* No vertical hints due to negative contours in the composite parts */
CALL[],3,42,37,3,19,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="arrowdown">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 3, 2
MDAP[R], 8
SRP2[], 3
IP[], 1
IP[], 2
MDAP[R], 1
RDTG[]
MDAP[R], 2
DLTP1[(2 @11 -2)]
DLTP1[(2 @12 -4)(2 @13 -4)]
SRP2[], 1
IP[], 0
DLTP1[(0 @12 4)(0 @13 4)]
SRP0[], 1
RTG[]
MDRP[m&lt;RGr], 6
SRP1[], 0
SHP[1], 7
SRP1[], 2
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="arrowleft">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MIAP[R], 4, 6
IP[], 8
MDAP[R], 8
MDRP[m&gt;RBl], 5
DLTP1[(5 @12 -8)(5 @13 -8)(5 @14 -8)]
IP[], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="arrowright">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 10
MIAP[R], 7, 6
SRP2[], 1
IP[], 2
MDAP[R], 2
MDRP[m&gt;RBl], 5
DLTP1[(5 @12 -8)(5 @13 -8)(5 @14 -8)]
IP[], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="arrowup">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 2, 16
MIAP[R], 7, 10
SRP2[], 2
IP[], 8
IP[], 0
MDAP[R], 0
RUTG[]
MDAP[R], 8
DLTP1[(8 @11 4)(8 @12 4)]
SRP2[], 0
IP[], 1
DLTP1[(1 @11 -4)(1 @12 -4)(1 @13 -4)]
SHP[1], 5
SRP1[], 1
SHP[1], 3
SRP0[], 0
RTG[]
MDRP[m&lt;RGr], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="asciicircum">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 4
SRP2[], 7
IP[], 2
IP[], 4
MDAP[R], 2
RUTG[]
MDAP[R], 4
CALL[], 4, -56, 8, 14, 72
SRP0[], 2
RTG[]
MDRP[m&lt;RGr], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="asciitilde">
/* VTT 6.01C compiler */
SVTCA[Y]
MDAP[R], 17
MDRP[m&lt;RGr], 0
MIRP[m&gt;RBl], 10, 103
MDRP[M&gt;RGr], 23
MIRP[M&gt;RBl], 4, 74
MDRP[m&lt;RGr], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="asterisk">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 38, 16
SRP2[], 65
IP[], 0
MDAP[R], 0
SRP2[], 38
SLOOP[], 4
IP[], 5, 19, 32, 27
MDRP[m&lt;RGr], 10
SRP1[], 19
SHP[1], 57
SRP1[], 32
SHP[1], 44
SRP1[], 27
SHP[1], 49
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="at">
/* VTT 6.01C compiler */
SVTCA[Y]
MDAP[R], 8
SHP[1], 11
MDRP[m&lt;RGr], 12
MIRP[m&gt;RBl], 75, 150
MDRP[M&gt;RGr], 51
DLTP1[(51 @5 -8)(51 @9 -8)]
SDB[], 58
DLTP1[(51 @0 -8)]
MIRP[m&gt;RBl], 24, 87
SRP1[], 78
SRP2[], 8
IP[], 0
MDAP[R], 0
SHP[1], 62
MIRP[m&gt;RBl], 68, 150
MDRP[M&gt;RGr], 41
SHP[2], 38
MIRP[m&gt;RBl], 34, 87
SHP[2], 37
SRP0[], 0
MDRP[M&lt;RGr], 59
MIRP[m&gt;RBl], 17, 115
SRP1[], 24
IP[], 56
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="at.case">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 143, 0, 89

    </glyphProgram>

    <glyphProgram name="atilde">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 196, 0, 0
OFFSET[R], 362, 264, 0
CALL[],2,15,40,79
CALL[],3,49,38,3,19,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="b">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MIAP[R], 2, 0
MIAP[R], 7, 7
SHP[1], 4
MIRP[m&gt;RBl], 30, 87
MIAP[R], 15, 11
SHP[1], 18
MIRP[m&gt;RBl], 23, 87
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="backslash">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MIAP[R], 1, 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="backslash.case">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 133, 0, 0

    </glyphProgram>

    <glyphProgram name="bar">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 18
MIAP[R], 2, 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="be">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 24, 87
MIAP[R], 7, 0
MIRP[m&gt;RBl], 8, 85
SRP2[], 0
IP[], 16
MDAP[R], 16
SHP[1], 13
MIRP[m&gt;RBl], 30, 87
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="be.loclMKDSRB">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 29, 87
MIAP[R], 12, 0
IP[], 7
SRP1[], 7
SHP[1], 20
MIRP[m&gt;RBl], 13, 85
SRP1[], 0
IP[], 36
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="braceleft">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 18
MIRP[m&gt;RBl], 0, 115
MIAP[R], 16, 16
MIRP[m&gt;RBl], 18, 115
SRP2[], 32
IP[], 8
MDAP[R], 8
DLTP1[(8 @7 8)(8 @8 8)(8 @15 8)]
DLTP2[(8 @0 8)(8 @2 8)]
DLTP2[(8 @4 -8)]
DLTP2[(8 @14 8)(8 @15 8)]
DLTP3[(8 @1 8)(8 @14 8)]
SDB[], 63
DLTP1[(8 @0 8)(8 @2 8)]
SRP2[], 0
IP[], 27
IP[], 4
MIRP[m&gt;RBl], 10, 115
SRP1[], 18
IP[], 23
IP[], 14
SRP1[], 8
IP[], 25
RTHG[]
MDAP[R], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="braceleft.case">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 136, 0, 56

    </glyphProgram>

    <glyphProgram name="braceright">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 15, 16
MIRP[m&gt;RBl], 13, 115
MIAP[R], 30, 18
MIRP[m&gt;RBl], 0, 115
SRP1[], 15
SRP2[], 32
IP[], 23
MDAP[R], 23
DLTP1[(23 @7 8)(23 @8 8)(23 @15 8)]
DLTP2[(23 @0 8)(23 @2 8)]
DLTP2[(23 @4 -8)]
DLTP2[(23 @14 8)(23 @15 8)]
DLTP3[(23 @1 8)(23 @14 8)]
SDB[], 63
DLTP1[(23 @0 8)(23 @2 8)]
SRP2[], 0
IP[], 5
IP[], 28
MIRP[m&gt;RBl], 21, 115
IP[], 7
RTHG[]
MDAP[R], 7
SRP1[], 13
IP[], 9
IP[], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="braceright.case">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 137, 0, 56

    </glyphProgram>

    <glyphProgram name="bracketleft">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 18
MIRP[m&gt;RBl], 6, 115
MIAP[R], 2, 16
MIRP[m&gt;RBl], 4, 115
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="bracketleft.case">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 134, 0, 56

    </glyphProgram>

    <glyphProgram name="bracketright">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 18
MIRP[m&gt;RBl], 1, 115
MIAP[R], 5, 16
MIRP[m&gt;RBl], 3, 115
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="bracketright.case">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 135, 0, 56

    </glyphProgram>

    <glyphProgram name="breve">
/* Composite glyph autohinted */

OFFSET[R], 429, 304, 0

    </glyphProgram>

    <glyphProgram name="breveacutecomb">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 4, 147
MIRP[M&gt;RBl], 11, 162
MDRP[M&gt;RWh], 8
MDRP[M&lt;RWh], 0
SMD[], 128
MDRP[m&gt;RBl], 1
SDB[], 8
DLTP1[(1 @0 -8)]
MDRP[m&lt;RGr], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="breveacutecomb.cap">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 4, 150
MIRP[M&gt;RBl], 11, 162
MDRP[M&gt;RWh], 8
MDRP[M&lt;RWh], 0
SMD[], 128
MDRP[m&gt;RBl], 1
SDB[], 8
DLTP1[(1 @0 -8)(1 @1 -8)]
MDRP[m&lt;RGr], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="brevecomb">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 147
MIRP[M&gt;RBl], 7, 162
MDRP[M&gt;RGr], 3
MDRP[m&lt;RGr], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="brevecomb.cap">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 155
MIRP[M&gt;RBl], 7, 162
MDRP[M&gt;RGr], 3
MDRP[m&lt;RGr], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="brevecomb.cyrl">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 147
MIRP[M&gt;RBl], 7, 134
MDRP[M&gt;RWh], 4
MDRP[m&lt;RGr], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="brevecomb.cyrl.cap">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 147
MIRP[M&gt;RBl], 7, 134
MDRP[M&gt;RWh], 4
MDRP[m&lt;RGr], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="brevegravecomb">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 4, 147
MIRP[M&gt;RBl], 11, 162
MDRP[M&gt;RWh], 8
MDRP[M&lt;RWh], 0
SMD[], 128
MDRP[m&gt;RBl], 1
SDB[], 8
DLTP1[(1 @0 -8)]
MDRP[m&lt;RGr], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="brevegravecomb.cap">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 4, 150
MIRP[M&gt;RBl], 11, 162
MDRP[M&gt;RWh], 8
MDRP[M&lt;RWh], 0
SMD[], 128
MDRP[m&gt;RBl], 1
SDB[], 8
DLTP1[(1 @0 -8)(1 @1 -8)]
MDRP[m&lt;RGr], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="brevehookabovecomb">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 16, 147
MIRP[M&gt;RBl], 23, 162
SDB[], 8
DLTP1[(23 @0 -8)]
MDRP[M&gt;RWh], 20
MDRP[m&lt;RGr], 26
SRP2[], 23
IP[], 0
MDAP[R], 0
MIRP[M&gt;RBl], 1, 136
MDRP[M&gt;RWh], 5
SHP[2], 7
MIRP[m&gt;RBl], 10, 145
DLTP1[(10 @0 -8)(10 @1 -8)]
SHP[2], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="brevehookabovecomb.cap">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 15, 150
MIRP[M&gt;RBl], 22, 162
SDB[], 8
DLTP1[(22 @0 -8)(22 @1 -8)]
MDRP[M&gt;RWh], 19
MDRP[m&lt;RGr], 25
SRP2[], 22
IP[], 0
MDAP[R], 0
MIRP[M&gt;RBl], 1, 136
MDRP[M&gt;RWh], 5
SHP[2], 7
MIRP[m&gt;RBl], 10, 145
CALL[], 10, -64, 8, 12, 72
SHP[2], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="brevetildecomb">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 23, 147
MIRP[M&gt;RBl], 30, 162
MDRP[M&gt;RWh], 27
MDRP[M&lt;RGr], 33
MDRP[M&gt;RWh], 16
SDB[], 8
DLTP1[(16 @0 -8)(16 @1 -8)]
MDRP[m&lt;RWh], 0
MIRP[m&gt;RBl], 10, 145
MDRP[M&lt;RGr], 21
MIRP[M&gt;RBl], 4, 145
MDRP[m&lt;RWh], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="brevetildecomb.cap">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 24, 150
MIRP[M&gt;RBl], 31, 162
SDB[], 8
DLTP1[(31 @0 -8)(31 @1 -8)]
MDRP[M&gt;RWh], 28
MDRP[M&lt;RGr], 34
MDRP[M&gt;RWh], 16
CALL[], 16, -64, 8, 12, 72
MDRP[m&lt;RGr], 0
MIRP[m&gt;RBl], 10, 162
MDRP[M&gt;RGr], 22
MIRP[M&gt;RBl], 4, 162
MDRP[m&lt;RGr], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="brokenbar">
/* VTT 6.01C compiler */
SVTCA[Y]
MDAP[R], 2
MIAP[R], 5, 18
SRP2[], 2
IP[], 1
IP[], 6
MDAP[R], 1
MDAP[R], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="bullet">
/* VTT 6.01C compiler */
SVTCA[Y]
MDAP[R], 12
MDRP[m&gt;RBl], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="bullet.case">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 138, 0, 83

    </glyphProgram>

    <glyphProgram name="c">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 4, 11
SHP[1], 1
MIRP[m&gt;RBl], 23, 87
SHP[2], 0
MIAP[R], 12, 7
SHP[1], 14
MIRP[m&gt;RBl], 17, 87
SHP[2], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="cacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 198, 0, 0
OFFSET[R], 300, 304, 0
CALL[],1,11,27,79
CALL[],78,28,26,7,14,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="caron">
/* Composite glyph autohinted */

OFFSET[R], 390, 305, 0

    </glyphProgram>

    <glyphProgram name="caroncomb">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 5, 147
SMD[], 128
MDRP[M&gt;RBl], 0
MDRP[m&lt;RGr], 3
SRP2[], 5
IP[], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="caroncomb.cap">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 5, 155
SMD[], 128
MDRP[M&gt;RBl], 0
MDRP[m&lt;RGr], 3
SRP2[], 5
IP[], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ccaron">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 198, 0, 0
OFFSET[R], 390, 304, 0
CALL[],1,11,31,79
CALL[],25,26,30,7,14,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="ccedilla">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 198, 0, 0
OFFSET[R], 262, 305, 0
/* No vertical hints due to overlapping parts */
CALL[],13,26,42,7,14,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="cdotaccent">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 198, 0, 0
OFFSET[R], 450, 304, 0
CALL[],1,11,26,79
CALL[],25,28,34,7,14,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="cedilla">
/* Composite glyph autohinted */

OFFSET[R], 262, 304, 0

    </glyphProgram>

    <glyphProgram name="cedillacomb">
/* VTT 6.01C compiler */
SVTCA[Y]
SRP0[], 24
MDRP[m&lt;rBl], 12
MDRP[M&gt;RBl], 14
CALL[], 14, 64, 8, 11, 72
SMD[], 128
MDRP[M&gt;RGr], 3
SHP[2], 1
SMD[], 64
MIRP[m&gt;RBl], 20, 145
SHP[2], 0
SRP0[], 14
MIRP[m&gt;RBl], 9, 152
SRP1[], 3
IP[], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="cedillacomb.cap">
/* VTT 6.01C compiler */
SVTCA[Y]
SRP0[], 24
MDRP[m&lt;rBl], 13
MDRP[M&gt;RBl], 15
CALL[], 15, 64, 8, 11, 72
SMD[], 128
MDRP[M&gt;RGr], 4
SHP[2], 1
SMD[], 64
MIRP[m&gt;RBl], 21, 145
SHP[2], 0
SRP0[], 15
MIRP[m&gt;RBl], 10, 152
SRP1[], 4
IP[], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="cent">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 13, 7
SHP[1], 10
MDRP[m&gt;RBl], 11
DLTP1[(11 @3 8)(11 @4 8)(11 @5 8)]
SHP[1], 15
MIRP[m&gt;RBl], 19, 87
SHP[2], 16
SHP[2], 30
MIAP[R], 25, 11
MDRP[m&gt;RBl], 0
DLTP1[(0 @3 -8)(0 @4 -8)(0 @5 -8)]
SHP[1], 2
SHP[1], 23
MIRP[m&gt;RBl], 20, 87
SHP[2], 22
SHP[2], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="che">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 5, 6
MIAP[R], 12, 6
MIAP[R], 15, 10
SRP2[], 5
IP[], 0
MDAP[R], 0
SHP[1], 16
MIRP[m&gt;RBl], 9, 87
SHP[2], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="che.loclBGR">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 5, 6
MIAP[R], 13, 6
MIAP[R], 16, 10
SRP2[], 5
IP[], 0
MDAP[R], 0
MIRP[m&gt;RBl], 9, 87
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="circumflex">
/* Composite glyph autohinted */

OFFSET[R], 358, 305, 0

    </glyphProgram>

    <glyphProgram name="circumflexacutecomb">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 10, 147
MDRP[m&lt;RGr], 8
MDRP[M&gt;RBl], 9
MIRP[m&gt;RBl], 6, 143
DLTP2[(6 @0 8)(6 @1 8)]
SRP1[], 8
IP[], 0
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="circumflexacutecomb.cap">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 10, 150
MDRP[m&lt;RGr], 8
MDRP[M&gt;RBl], 9
MIRP[m&gt;RBl], 6, 143
DLTP2[(6 @0 8)(6 @1 8)]
SRP1[], 8
IP[], 0
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="circumflexcomb">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 147
MDRP[m&lt;RGr], 3
SMD[], 128
MDRP[m&gt;RBl], 5
IP[], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="circumflexcomb.cap">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 155
MDRP[m&lt;RGr], 3
SMD[], 128
MDRP[m&gt;RBl], 5
IP[], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="circumflexcomb.narrow">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 147
MDRP[m&lt;RGr], 3
SMD[], 128
MDRP[m&gt;RBl], 5
IP[], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="circumflexgravecomb">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 10, 147
MDRP[m&lt;RGr], 8
MDRP[M&gt;RBl], 9
MIRP[m&gt;RBl], 6, 143
DLTP2[(6 @0 8)(6 @1 8)]
SRP1[], 8
IP[], 0
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="circumflexgravecomb.cap">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 10, 150
MDRP[m&lt;RGr], 8
MDRP[M&gt;RBl], 9
MIRP[m&gt;RBl], 6, 143
DLTP2[(6 @0 8)(6 @1 8)]
SRP1[], 8
IP[], 0
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="circumflexhookabovecomb">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 22, 147
MDRP[m&lt;RGr], 20
MDRP[M&gt;RBl], 21
MIRP[m&gt;RBl], 18, 143
DLTP2[(18 @0 8)(18 @1 8)]
SRP1[], 20
IP[], 1
MDAP[R], 1
MIRP[m&gt;RBl], 0, 136
MDRP[M&gt;RWh], 6
SDB[], 8
DLTP1[(6 @0 -8)]
SHP[2], 8
MIRP[m&gt;RBl], 11, 145
SHP[2], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="circumflexhookabovecomb.cap">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 21, 150
MDRP[m&lt;RGr], 19
MDRP[M&gt;RBl], 20
MIRP[m&gt;RBl], 17, 143
DLTP2[(17 @0 8)(17 @1 8)]
SRP1[], 19
IP[], 1
MDAP[R], 1
MIRP[m&gt;RBl], 0, 136
MDRP[M&gt;RWh], 5
SHP[2], 7
MIRP[m&gt;RBl], 10, 145
SHP[2], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="circumflextildecomb">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 29, 147
MDRP[m&lt;RGr], 27
MDRP[M&gt;RBl], 28
MIRP[M&gt;RBl], 25, 143
SDB[], 8
DLTP1[(25 @0 -8)]
DLTP2[(25 @1 8)(25 @2 8)]
MDRP[M&gt;RWh], 16
DLTP1[(16 @0 -8)(16 @1 -8)]
MDRP[m&lt;RWh], 0
MIRP[m&gt;RBl], 10, 145
MDRP[M&gt;RGr], 21
MIRP[M&gt;RBl], 4, 145
MDRP[m&lt;RWh], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="circumflextildecomb.cap">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 30, 150
MDRP[m&lt;RGr], 28
MDRP[M&gt;RBl], 29
DLTP1[(29 @0 -8)]
MIRP[M&gt;RBl], 26, 136
SDB[], 8
DLTP1[(26 @0 -8)(26 @2 -8)(26 @3 -8)(26 @4 -8)]
DLTP2[(26 @1 8)(26 @2 8)]
MDRP[M&gt;RWh], 17
CALL[], 17, -64, 8, 12, 72
MDRP[m&lt;RGr], 0
MIRP[m&gt;RBl], 10, 162
MDRP[M&gt;RGr], 21
MIRP[M&gt;RBl], 4, 162
DLTP1[(4 @0 -8)(4 @1 -8)]
MDRP[m&lt;RGr], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="colon">
/* Composite glyph autohinted */

USEMYMETRICS[]
OFFSET[R], 4, 0, 370
OFFSET[R], 4, 0, 0

SVTCA[Y]
MIAP[R],6,6
SHC[1],0

CALL[], 0, 14, 20, 2, 8, 80
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="comma">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 3, 11
MDRP[m&gt;RBl], 0
MIRP[m&gt;RBl], 9, 117
IP[], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="commaaboverightcomb">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 10, 3
MIRP[M&gt;RBl], 4, 146
MDRP[m&gt;RBl], 0
SRP2[], 10
IP[], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="commaaboverightcomb.short">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 10, 17
MIRP[M&gt;RBl], 4, 146
MDRP[m&gt;RBl], 0
SRP2[], 10
IP[], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="commabelow">
/* Composite glyph autohinted */

OFFSET[R], 265, 305, 0

    </glyphProgram>

    <glyphProgram name="commabelowcomb">
/* VTT 6.01C compiler */
SVTCA[Y]
SRP0[], 17
MDRP[M&gt;RWh], 10
MIRP[M&gt;RBl], 4, 146
MDRP[m&gt;RBl], 0
SRP2[], 10
IP[], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="commabelowcomb.cap">
/* VTT 6.01C compiler */
SVTCA[Y]
SRP0[], 17
MDRP[M&gt;RWh], 10
MIRP[M&gt;RBl], 4, 146
MDRP[m&gt;RBl], 0
SRP2[], 10
IP[], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="commaturnedabovecomb">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 10, 158
MIRP[M&gt;RBl], 4, 146
MDRP[m&gt;RBl], 0
SRP2[], 10
IP[], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="copyright">
/* VTT 6.01C compiler */
SVTCA[Y]
MDAP[R], 52
SDB[], 8
DLTP1[(52 @0 -8)]
SHP[1], 55
SMD[], 128
MDRP[M&gt;RGr], 10
SMD[], 64
MIRP[m&gt;RBl], 30, 151
SRP0[], 52
MIRP[m&gt;RBl], 59, 151
SHP[2], 56
SRP2[], 68
IP[], 44
MDAP[R], 44
SHP[1], 41
SMD[], 128
MDRP[M&gt;RGr], 0
SMD[], 64
MIRP[m&gt;RBl], 20, 151
SRP0[], 44
MIRP[m&gt;RBl], 65, 151
SHP[2], 40
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="currency">
/* VTT 6.01C compiler */
SVTCA[Y]
MDAP[R], 17
SHP[1], 12
SHP[1], 15
SHP[1], 19
SHP[1], 22
MIRP[m&gt;RBl], 41, 103
MDRP[M&gt;RWh], 14
SHP[2], 13
MDRP[m&lt;RGr], 20
SHP[2], 21
SRP1[], 49
SRP2[], 17
IP[], 0
MDAP[R], 0
SHP[1], 3
SHP[1], 6
SHP[1], 27
SHP[1], 30
MIRP[m&gt;RBl], 33, 103
MDRP[M&gt;RWh], 4
SHP[2], 5
MDRP[m&lt;RGr], 29
SHP[2], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="d">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MIAP[R], 4, 11
SHP[1], 1
MIRP[m&gt;RBl], 23, 87
MIAP[R], 12, 7
SHP[1], 15
MIRP[m&gt;RBl], 30, 87
MIAP[R], 16, 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dagger">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 18
DLTP3[(0 @8 -8)(0 @9 -8)]
MIAP[R], 5, 6
MDRP[m&lt;RGr], 8
MIRP[M&gt;RBl], 11, 85
MDRP[m&lt;RGr], 2
MIAP[R], 6, 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="daggerdbl">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 18
DLTP3[(0 @8 -8)(0 @9 -8)]
MIAP[R], 9, 6
MDRP[M&lt;RGr], 12
MIRP[M&gt;RBl], 6, 85
MDRP[m&lt;RGr], 15
MIAP[R], 10, 16
SRP1[], 20
SRP2[], 9
IP[], 2
MDAP[R], 2
MDRP[m&lt;RGr], 19
MIRP[M&gt;RBl], 16, 85
MDRP[m&lt;RGr], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dcaron">
/* Composite glyph autohinted */

OFFSET[R], 199, 0, 0
OFFSET[R], 393, 665, 0

SVTCA[Y]
MIAP[R],44,1
SHC[1],2

    </glyphProgram>

    <glyphProgram name="dcroat">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MIAP[R], 5, 11
SHP[1], 2
MIRP[m&gt;RBl], 31, 87
MIAP[R], 13, 6
CALL[], 13, -64, 8, 11, 72
DLTP1[(13 @4 -8)]
SHP[1], 16
MIRP[m&gt;RBl], 38, 87
MDRP[M&gt;RWh], 17
MDRP[m&lt;RGr], 26
MIRP[M&gt;RBl], 20, 102
MDRP[m&lt;RGr], 23
MIAP[R], 21, 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="de">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 6, 6
MIRP[m&gt;RBl], 20, 85
MIAP[R], 11, 165
MIAP[R], 13, 10
MIRP[M&gt;RBl], 2, 85
MDRP[m&lt;RGr], 8
MDRP[m&lt;RGr], 17
MIAP[R], 14, 165
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="de.loclBGR">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 202, 0, 0

    </glyphProgram>

    <glyphProgram name="degree">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 8, 5
MIRP[m&gt;RBl], 22, 138
SRP2[], 28
IP[], 0
MDAP[R], 0
MIRP[m&gt;RBl], 16, 138
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dieresis">
/* Composite glyph autohinted */

OFFSET[R], 425, 304, 0

    </glyphProgram>

    <glyphProgram name="dieresiscomb">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 120
MDRP[m&lt;RGr], 12
MIRP[M&gt;RBl], 6, 124
MDRP[m&lt;RGr], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dieresiscomb.cap">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 155
MDRP[m&lt;RGr], 12
MIRP[M&gt;RBl], 6, 124
MDRP[m&lt;RGr], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dieresiscomb.narrow">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 159
MDRP[m&lt;RGr], 12
MIRP[M&gt;RBl], 6, 124
MDRP[m&lt;RGr], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="divide">
/* VTT 6.01C compiler */
SVTCA[Y]
MDAP[R], 12
SDB[], 8
DLTP1[(12 @0 -8)]
DLTP1[(12 @3 8)]
DLTP1[(12 @13 -8)]
MIRP[M&gt;RBl], 14, 148
RDTG[]
MDRP[M&gt;RWh], 0
RTG[]
MIRP[m&gt;RBl], 6, 124
RDTG[]
SRP0[], 12
MDRP[M&gt;RWh], 22
RTG[]
MIRP[m&gt;RBl], 16, 124
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dje">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 5, 0
MIAP[R], 13, 6
CALL[], 13, -64, 8, 11, 72
DLTP1[(13 @4 -8)]
SHP[1], 11
MIRP[m&gt;RBl], 24, 87
SRP2[], 5
IP[], 1
MDAP[R], 1
MDRP[m&lt;RGr], 10
MIRP[M&gt;RBl], 4, 102
MDRP[m&lt;RGr], 7
MIAP[R], 18, 15
SHP[1], 19
MIAP[R], 28, 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dollar">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 11, 4
MDRP[m&gt;RBl], 12
DLTP1[(12 @3 8)(12 @4 8)]
SHP[1], 14
SHP[1], 16
MIRP[m&gt;RBl], 37, 103
SHP[2], 17
SHP[2], 19
MIAP[R], 27, 12
SHP[1], 0
MDRP[m&gt;RBl], 28
DLTP1[(28 @3 -8)(28 @4 -8)]
SHP[1], 30
SRP2[], 37
IP[], 43
SRP1[], 43
SHP[1], 4
MIRP[m&gt;RBl], 44, 103
SHP[2], 1
SHP[2], 3
SRP1[], 43
IP[], 23
SRP1[], 11
IP[], 36
SRP1[], 36
SHP[1], 20
SRP2[], 37
IP[], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dong">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 16, 4
MDRP[M&gt;RBl], 15
CALL[], 15, 64, 25, 28, 72
DLTP3[(15 @0 8)(15 @1 8)(15 @2 8)]
MDRP[m&lt;RGr], 18
MIRP[M&gt;RBl], 12, 101
CALL[], 12, 64, 21, 24, 72
MDRP[m&lt;RGr], 21
MIAP[R], 40, 12
MIRP[M&gt;RBl], 42, 101
MDRP[M&gt;RWh], 23
MDRP[M&lt;RGr], 0
SHP[2], 24
MIRP[m&gt;RBl], 30, 103
SHP[2], 33
SRP1[], 16
IP[], 8
MDAP[R], 8
MIRP[m&gt;RBl], 37, 103
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dotaccent">
/* Composite glyph autohinted */

OFFSET[R], 450, 305, 0

    </glyphProgram>

    <glyphProgram name="dotaccentcomb">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 120
MIRP[m&gt;RBl], 6, 124
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dotaccentcomb.cap">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 155
MIRP[m&gt;RBl], 6, 124
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dotbelowcomb">
/* VTT 6.01C compiler */
SVTCA[Y]
SRP0[], 13
MDRP[M&gt;RWh], 6
MIRP[m&gt;RBl], 0, 124
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dotbelowcomb.cap">
/* VTT 6.01C compiler */
SVTCA[Y]
SRP0[], 13
MDRP[M&gt;RWh], 6
MIRP[m&gt;RBl], 0, 124
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dotlessi">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MIAP[R], 2, 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dotlessj">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 14
MIRP[m&gt;RBl], 1, 85
MIAP[R], 6, 6
IP[], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dze">
OFFSET[R], 214, 0, 0

    </glyphProgram>

    <glyphProgram name="dzhe">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 2, 6
MIAP[R], 5, 6
MIAP[R], 10, 165
MIAP[R], 11, 10
MIRP[m&gt;RBl], 3, 85
MDRP[m&lt;RGr], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="e">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 4, 11
SHP[1], 1
DLTP1[(1 @1 -1)]
MIRP[m&gt;RBl], 21, 87
DLTP1[(21 @1 -1)]
SHP[2], 0
SDB[], 8
DLTP1[(0 @0 -2)(0 @1 -2)(0 @2 -2)]
DLTP1[(0 @11 -1)(0 @12 -1)]
MIAP[R], 12, 7
MIRP[m&gt;RBl], 23, 87
SRP1[], 4
IP[], 17
MDAP[R], 17
DLTP3[(17 @4 8)(17 @5 8)(17 @8 8)(17 @15 8)]
SDB[], 63
DLTP1[(17 @0 -8)(17 @3 -8)]
MIRP[m&gt;RBl], 26, 86
IP[], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 200, 0, 0
OFFSET[R], 300, 292, 0
CALL[],2,11,31,79
CALL[],56,32,30,7,15,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="ecaron">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 200, 0, 0
OFFSET[R], 390, 292, 0
CALL[],2,11,35,79
CALL[],3,30,34,7,15,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="ecircumflex">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 200, 0, 0
OFFSET[R], 358, 292, 0
CALL[],2,11,30,79
CALL[],3,34,30,7,15,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="ecircumflexacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 200, 0, 0
OFFSET[R], 502, 292, 0
CALL[],3,11,34,79
SHC[2],2
CALL[],86,34,32,7,15,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="ecircumflexdotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 200, 0, 0
OFFSET[R], 358, 292, 0
OFFSET[R], 473, 292, 0
/* No vertical hints due to overlapping parts */
CALL[],2,12,34,79
CALL[],3,34,30,7,15,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="ecircumflexgrave">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 200, 0, 0
OFFSET[R], 504, 292, 0
CALL[],3,11,34,79
SHC[2],2
CALL[],39,34,33,7,15,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="ecircumflexhookabove">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 200, 0, 0
OFFSET[R], 506, 292, 0
CALL[],3,11,46,79
SHC[2],2
CALL[],52,46,43,7,15,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="ecircumflextilde">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 200, 0, 0
OFFSET[R], 508, 292, 0
CALL[],3,11,53,79
SHC[2],2
CALL[],5,53,56,7,15,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="ecyr">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 3
MIRP[m&gt;RBl], 6, 87
SHP[2], 4
MIAP[R], 21, 7
SHP[1], 19
MIRP[m&gt;RBl], 15, 87
SHP[2], 18
SRP1[], 0
IP[], 10
MDAP[R], 10
MIRP[m&gt;RBl], 12, 85
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="edieresis">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 200, 0, 0
OFFSET[R], 425, 292, 0
CALL[],2,11,30,79
CALL[],3,11,42,79
CALL[],4,44,38,7,15,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="edotaccent">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 200, 0, 0
OFFSET[R], 450, 292, 0
CALL[],2,11,30,79
CALL[],3,32,38,7,15,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="edotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 200, 0, 0
OFFSET[R], 473, 292, 0
/* No vertical hints due to overlapping parts */
CALL[],3,32,38,7,15,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="ef">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 15
MIAP[R], 1, 11
MDRP[m&lt;RGr], 16
MIRP[M&gt;RBl], 20, 87
MDRP[m&lt;RGr], 26
MIAP[R], 7, 7
MDRP[m&lt;RGr], 10
MIRP[M&gt;RBl], 21, 87
MDRP[m&lt;RGr], 25
MIAP[R], 8, 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="egrave">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 200, 0, 0
OFFSET[R], 340, 292, 0
CALL[],2,11,30,79
CALL[],-49,31,33,7,15,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="ehookabove">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 200, 0, 0
OFFSET[R], 475, 292, 0
CALL[],2,11,30,79
CALL[],6,38,42,7,15,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="eight">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 13
MIRP[m&gt;RBl], 40, 103
MIAP[R], 14, 5
IP[], 28
MDAP[R], 28
MIRP[m&gt;RBl], 48, 85
SRP1[], 40
IP[], 4
SRP1[], 4
SHP[1], 24
SRP1[], 28
IP[], 7
RTHG[]
MDAP[R], 7
SHP[1], 21
RTG[]
SRP0[], 14
MIRP[m&gt;RBl], 34, 103
SRP1[], 28
IP[], 10
SRP1[], 10
SHP[1], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eight.dnom">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 130
MIRP[m&gt;RBl], 36, 136
MIAP[R], 12, 129
MIRP[m&gt;RBl], 30, 136
SRP2[], 0
IP[], 42
MDAP[R], 42
DLTP1[(42 @15 8)]
SRP2[], 36
IP[], 3
SRP1[], 3
SHP[1], 21
MIRP[m&gt;RBl], 24, 137
IP[], 6
RTHG[]
MDAP[R], 6
SHP[1], 18
SRP1[], 30
IP[], 9
SRP1[], 9
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eight.numr">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 49, 0, 304

    </glyphProgram>

    <glyphProgram name="eightinferior">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 49, 0, -100

    </glyphProgram>

    <glyphProgram name="eightsuperior">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 49, 0, 404

    </glyphProgram>

    <glyphProgram name="el">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MIRP[m&gt;RBl], 1, 85
MIAP[R], 6, 6
MIRP[m&gt;RBl], 11, 85
MIAP[R], 9, 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="el.loclBGR">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 6
MIAP[R], 4, 10
MIAP[R], 6, 10
SRP2[], 1
IP[], 5
RUTG[]
MDAP[R], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ellipsis">
/* Composite glyph autohinted */

OFFSET[R], 4, 37, 0
OFFSET[R], 4, 371, 0
OFFSET[R], 4, 704, 0

    </glyphProgram>

    <glyphProgram name="em">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 2, 6
MIAP[R], 4, 6
MIAP[R], 7, 10
MIAP[R], 12, 10
SRP2[], 2
IP[], 10
MDAP[R], 10
IP[], 11
IP[], 3
SRP1[], 11
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="emacron">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 200, 0, 0
OFFSET[R], 395, 292, 0
CALL[],2,11,30,79
CALL[],4,31,30,7,15,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="emdash">
/* VTT 6.01C compiler */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 2, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="emdash.case">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 129, 0, 85

    </glyphProgram>

    <glyphProgram name="emquad">
/* VTT 6.01C compiler */

    </glyphProgram>

    <glyphProgram name="emspace">
/* VTT 6.01C compiler */

    </glyphProgram>

    <glyphProgram name="en">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 2, 6
MIAP[R], 5, 6
MIAP[R], 8, 10
MIAP[R], 11, 10
SRP2[], 2
IP[], 10
MDAP[R], 10
DLTP2[(10 @4 -8)(10 @8 -8)(10 @9 -8)]
MIRP[m&gt;RBl], 4, 85
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="endash">
/* VTT 6.01C compiler */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 2, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="endash.case">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 128, 0, 85

    </glyphProgram>

    <glyphProgram name="eng">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 14
MIRP[m&gt;RBl], 1, 85
MIAP[R], 14, 10
MIAP[R], 16, 6
MIAP[R], 21, 7
SHP[1], 18
MIRP[m&gt;RBl], 9, 87
SRP1[], 1
IP[], 24
IP[], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="enquad">
/* VTT 6.01C compiler */

    </glyphProgram>

    <glyphProgram name="enspace">
/* VTT 6.01C compiler */

    </glyphProgram>

    <glyphProgram name="eogonek">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 200, 0, 0
OFFSET[R], 271, 360, 0
/* No vertical hints due to overlapping parts */
CALL[],105,36,41,7,15,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="equal">
/* VTT 6.01C compiler */
SVTCA[Y]
MDAP[R], 0
DLTP1[(0 @2 -8)(0 @4 -8)]
DLTP2[(0 @5 -8)(0 @12 -8)]
MIRP[m&gt;RBl], 2, 148
MDRP[M&gt;RWh], 6
MIRP[m&gt;RBl], 4, 148
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="er">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 211, 0, 0

    </glyphProgram>

    <glyphProgram name="es">
OFFSET[R], 198, 0, 0

    </glyphProgram>

    <glyphProgram name="eth">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 8, 11
MIRP[m&gt;RBl], 31, 87
MDAP[R], 27
SRP2[], 8
IP[], 16
MDAP[R], 16
SDB[], 8
DLTP1[(16 @0 -8)(16 @1 -8)(16 @4 -8)]
SHP[1], 19
MDRP[M&lt;RWh], 22
MIRP[m&gt;RBl], 23, 145
SRP0[], 16
MIRP[m&gt;RBl], 39, 87
SRP1[], 31
IP[], 4
SRP0[], 27
MDRP[M&lt;RWh], 30
MIRP[m&gt;RBl], 0, 145
SRP1[], 22
IP[], 21
IP[], 1
SRP1[], 23
SRP2[], 30
IP[], 24
IP[], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="etilde">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 200, 0, 0
OFFSET[R], 362, 292, 0
CALL[],2,11,33,79
CALL[],3,42,31,7,15,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="exclam">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 21, 11
MIRP[m&gt;RGr], 11, 149
MIRP[M&gt;RBl], 27, 117
MDRP[m&gt;RWh], 0
DLTP3[(0 @0 -8)]
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="exclamdown">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 6
MIRP[m&gt;RGr], 23, 149
MIRP[M&gt;RBl], 6, 117
MDRP[m&gt;RWh], 12
DLTP3[(12 @0 8)]
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="exclamdown.case">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 3
MIRP[m&gt;RGr], 23, 149
MIRP[M&gt;RBl], 6, 117
MDRP[m&gt;RWh], 12
DLTP3[(12 @0 8)]
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="f">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MIAP[R], 5, 6
MDRP[m&lt;RGr], 15
MIRP[M&gt;RBl], 18, 85
MDRP[m&lt;RGr], 2
MIAP[R], 8, 0
MIRP[m&gt;RBl], 10, 85
SRP1[], 5
IP[], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="figuredash">
/* Composite glyph autohinted */

OFFSET[R], 128, 66, 85

    </glyphProgram>

    <glyphProgram name="figurespace">
/* VTT 6.01C compiler */

    </glyphProgram>

    <glyphProgram name="fita">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 23, 87
MIAP[R], 8, 7
MIRP[m&gt;RBl], 16, 87
SRP1[], 0
IP[], 27
MDAP[R], 27
MIRP[m&gt;RBl], 20, 85
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="five">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 16, 4
MIRP[m&gt;RBl], 18, 101
MIAP[R], 31, 13
SHP[1], 0
MIRP[m&gt;RBl], 4, 103
SHP[2], 1
SRP1[], 16
IP[], 23
MDAP[R], 23
SHP[1], 20
MIRP[m&gt;RBl], 11, 103
SDB[], 8
DLTP1[(11 @0 1)(11 @1 1)]
SHP[2], 14
DLTP1[(14 @0 1)]
DLTP1[(14 @1 2)]
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="five.dnom">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 15, 126
MIRP[m&gt;RBl], 17, 134
MIAP[R], 28, 130
SHP[1], 0
DLTP1[(0 @2 -1)(0 @3 -1)]
DLTP1[(0 @4 -2)]
MIRP[m&gt;RBl], 4, 136
CALL[], 4, -8, 9, 13, 72
SHP[2], 1
DLTP1[(1 @1 -1)(1 @2 -1)(1 @3 -1)]
DLTP1[(1 @4 -2)]
SRP1[], 15
IP[], 21
MDAP[R], 21
SHP[1], 19
MIRP[m&gt;RBl], 10, 136
CALL[], 10, 8, 9, 13, 72
DLTP1[(10 @14 5)]
SHP[2], 13
DLTP1[(13 @1 1)(13 @2 1)(13 @3 1)]
DLTP1[(13 @4 2)]
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="five.numr">
/* Composite glyph autohinted */

OFFSET[R], 46, 0, 304

SVTCA[Y]
MIAP[R],15,128
SHC[1],0

    </glyphProgram>

    <glyphProgram name="fiveinferior">
/* Composite glyph autohinted */

OFFSET[R], 46, 0, -100

    </glyphProgram>

    <glyphProgram name="fivesuperior">
/* Composite glyph autohinted */

OFFSET[R], 46, 0, 404

    </glyphProgram>

    <glyphProgram name="four">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 12
MIAP[R], 5, 4
IP[], 2
MDAP[R], 2
MDRP[m&lt;RGr], 10
MIRP[m&gt;RBl], 7, 101
SRP1[], 5
IP[], 11
RUTG[]
MDAP[R], 11
SRP0[], 7
RTG[]
MDRP[m&lt;RGr], 12
SHP[2], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="four.dnom">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 127
MIAP[R], 5, 126
IP[], 2
MDAP[R], 2
MDRP[m&lt;RGr], 10
MIRP[m&gt;RBl], 7, 134
SRP1[], 5
IP[], 11
RUTG[]
MDAP[R], 11
SRP0[], 7
RTG[]
MDRP[m&lt;RGr], 12
SHP[2], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="four.numr">
/* Composite glyph autohinted */

OFFSET[R], 45, 0, 304

SVTCA[Y]
MIAP[R],5,128
SHC[1],0
SHC[1],1

    </glyphProgram>

    <glyphProgram name="fourinferior">
/* Composite glyph autohinted */

OFFSET[R], 45, 0, -100

    </glyphProgram>

    <glyphProgram name="foursuperior">
/* Composite glyph autohinted */

OFFSET[R], 45, 0, 404

    </glyphProgram>

    <glyphProgram name="fourthemspace">
/* VTT 6.01C compiler */

    </glyphProgram>

    <glyphProgram name="fraction">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 127
MIAP[R], 2, 128
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="g">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 4, 15
SHP[1], 7
MIRP[m&gt;RBl], 10, 87
SHP[2], 8
MIAP[R], 17, 10
SHP[1], 0
SHP[1], 14
MIRP[m&gt;RBl], 34, 87
MIAP[R], 25, 7
SHP[1], 28
MIRP[m&gt;RBl], 42, 87
MIAP[R], 29, 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="gbreve">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 202, 0, 0
OFFSET[R], 429, 290, 0
CALL[],2,24,46,79
CALL[],-12,49,57,20,0,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="gcommaabove">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 202, 0, 0
OFFSET[R], 267, 290, 0
CALL[],2,24,55,79
CALL[],-9,58,47,20,0,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="gdotaccent">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 202, 0, 0
OFFSET[R], 450, 290, 0
CALL[],2,24,46,79
CALL[],-12,48,54,20,0,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="germandbls">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MIAP[R], 6, 1
MIRP[m&gt;RBl], 43, 87
SRP1[], 0
IP[], 2
MIAP[R], 20, 11
SHP[1], 23
MIRP[m&gt;RBl], 27, 87
SHP[2], 24
SRP1[], 6
IP[], 36
MDAP[R], 36
SRP2[], 43
IP[], 10
MIRP[m&gt;RBl], 34, 85
IP[], 13
RTHG[]
MDAP[R], 13
SRP1[], 27
IP[], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ghe">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 6
MIRP[m&gt;RBl], 4, 85
MIAP[R], 5, 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ghe.loclBGR">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 33
MIRP[m&gt;RBl], 29, 87
SHP[2], 32
MIAP[R], 17, 7
SHP[1], 15
IP[], 6
MIRP[m&gt;RBl], 12, 87
SHP[2], 14
SRP1[], 0
IP[], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="gheup">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 6
MDRP[m&gt;RWh], 3
MIRP[m&gt;RBl], 6, 85
MIAP[R], 7, 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="gje">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 622, 0, 0
OFFSET[R], 300, 247, 0
CALL[],1,1,7,79
CALL[],51,8,6,0,2,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="grave">
/* Composite glyph autohinted */

OFFSET[R], 340, 370, 0

    </glyphProgram>

    <glyphProgram name="gravecomb">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 147
SMD[], 128
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="gravecomb.cap">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 155
SMD[], 128
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="gravecomb.narrow">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 147
SMD[], 128
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="greater">
/* VTT 6.01C compiler */
SVTCA[Y]
MDAP[R], 5
SDB[], 8
DLTP1[(5 @0 -8)(5 @1 -8)(5 @5 -8)]
DLTP1[(5 @6 8)]
DLTP1[(5 @9 -8)]
SHP[1], 4
SRP2[], 7
IP[], 1
MDAP[R], 1
SHP[1], 2
SRP1[], 2
SRP2[], 4
IP[], 3
RTHG[]
MDAP[R], 3
SHP[1], 0
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="guillemotleft">
/* Composite glyph autohinted */

OFFSET[R], 139, 0, 0
OFFSET[R], 139, 203, 0

    </glyphProgram>

    <glyphProgram name="guillemotleft.case">
/* Composite glyph autohinted */

OFFSET[R], 139, 0, 109
OFFSET[R], 139, 203, 109

    </glyphProgram>

    <glyphProgram name="guillemotright">
/* Composite glyph autohinted */

OFFSET[R], 140, 0, 0
OFFSET[R], 140, 203, 0

    </glyphProgram>

    <glyphProgram name="guillemotright.case">
/* Composite glyph autohinted */

OFFSET[R], 140, 0, 109
OFFSET[R], 140, 203, 109

    </glyphProgram>

    <glyphProgram name="guilsinglleft">
/* VTT 6.01C compiler */
SVTCA[Y]
MDAP[R], 2
SRP2[], 6
IP[], 0
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="guilsinglleft.case">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 139, 0, 109

    </glyphProgram>

    <glyphProgram name="guilsinglright">
/* VTT 6.01C compiler */
SVTCA[Y]
MDAP[R], 0
SRP2[], 6
IP[], 2
MDAP[R], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="guilsinglright.case">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 140, 0, 109

    </glyphProgram>

    <glyphProgram name="h">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MDRP[m&lt;RGr], 9
MIAP[R], 11, 0
MIAP[R], 16, 7
SHP[1], 13
MIRP[m&gt;RBl], 5, 87
SRP1[], 0
IP[], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ha">
OFFSET[R], 219, 0, 0

    </glyphProgram>

    <glyphProgram name="hairspace">
/* VTT 6.01C compiler */

    </glyphProgram>

    <glyphProgram name="hard">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MIRP[m&gt;RBl], 16, 85
MIAP[R], 3, 6
MIRP[m&gt;RBl], 1, 85
SRP2[], 0
IP[], 15
MDAP[R], 15
MIRP[m&gt;RBl], 6, 85
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hard.loclBGR">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 19, 87
MIAP[R], 6, 6
MIRP[m&gt;RBl], 4, 85
SRP2[], 0
IP[], 11
MDAP[R], 11
SHP[1], 8
MIRP[m&gt;RBl], 25, 87
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hbar">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MDRP[m&lt;RGr], 9
MIAP[R], 15, 0
MIAP[R], 24, 6
CALL[], 24, -64, 8, 11, 72
DLTP1[(24 @4 -8)]
SHP[1], 21
MIRP[m&gt;RBl], 5, 87
SRP1[], 0
IP[], 27
MDRP[M&gt;RWh], 20
MDRP[m&lt;RGr], 11
MIRP[M&gt;RBl], 14, 102
MDRP[m&lt;RGr], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hdotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 203, 0, 0
OFFSET[R], 473, 301, 0
/* No vertical hints due to overlapping parts */
CALL[],0,22,28,10,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="hook">
OFFSET[R], 475, 154, 0

    </glyphProgram>

    <glyphProgram name="hookabovecomb">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 147
MIRP[M&gt;RBl], 1, 143
MDRP[M&gt;RWh], 5
MIRP[m&gt;RBl], 10, 145
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hookabovecomb.cap">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 154
MIRP[M&gt;RBl], 1, 136
MDRP[M&gt;RWh], 5
MIRP[m&gt;RBl], 10, 145
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="horizontalbar">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 129, 0, 0

    </glyphProgram>

    <glyphProgram name="horncomb">
/* VTT 6.01C compiler */
SVTCA[Y]
MDAP[R], 0
MIRP[M&gt;RBl], 2, 143
MDRP[m&gt;RWh], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="horncomb.cap">
/* VTT 6.01C compiler */
SVTCA[Y]
MDAP[R], 0
MIRP[M&gt;RBl], 2, 143
MDRP[m&gt;RWh], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hryvnia">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 21, 3
SHP[1], 18
DLTP1[(18 @1 3)(18 @2 3)]
MIRP[m&gt;RBl], 15, 74
SHP[2], 17
DLTP1[(17 @1 3)(17 @2 3)]
MIAP[R], 50, 9
SHP[1], 48
DLTP1[(48 @1 -3)]
MIRP[m&gt;RBl], 45, 74
SHP[2], 47
DLTP1[(47 @1 -4)]
SRP2[], 21
IP[], 55
MDAP[R], 55
SDB[], 8
DLTP1[(55 @0 8)(55 @1 8)(55 @6 8)(55 @9 8)
      (55 @10 8)]
DLTP1[(55 @15 -8)]
DLTP2[(55 @7 -8)(55 @8 -8)]
MDRP[m&lt;RGr], 39
MIRP[M&gt;RBl], 2, 72
MDRP[m&lt;RGr], 36
MDRP[M&gt;RBl], 29
CALL[], 29, -64, 19, 22, 72
DLTP1[(29 @0 -8)(29 @1 -8)]
MDRP[m&lt;RGr], 6
MIRP[M&gt;RBl], 26, 72
DLTP1[(26 @0 -8)(26 @1 -8)]
MDRP[m&lt;RGr], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hungarumlaut">
/* Composite glyph autohinted */

OFFSET[R], 305, 216, 0

    </glyphProgram>

    <glyphProgram name="hungarumlautcomb">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 147
MDRP[m&lt;RGr], 5
SMD[], 128
MDRP[M&gt;RBl], 0
MDRP[m&lt;RGr], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hungarumlautcomb.cap">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 154
MDRP[m&lt;RGr], 5
SMD[], 128
MDRP[M&gt;RBl], 0
MDRP[m&lt;RGr], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hyphen">
/* VTT 6.01C compiler */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 2, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hyphen.case">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 125, 0, 85

    </glyphProgram>

    <glyphProgram name="hyphentwo">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 125, 0, 0

    </glyphProgram>

    <glyphProgram name="hyphentwo.case">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 125, 0, 85

    </glyphProgram>

    <glyphProgram name="i">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 3, 121
MIRP[m&gt;RBl], 9, 125
MIAP[R], 12, 10
MIAP[R], 14, 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="iacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 235, 0, 0
OFFSET[R], 303, 129, 0
CALL[],1,2,5,79
CALL[],41,6,4,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="ibrevecyr">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 627, 0, 0
OFFSET[R], 709, 307, 0
CALL[],1,1,10,79
CALL[],7,13,21,0,5,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="ibrevecyr.loclBGR">
OFFSET[R], 216, 0, 0
OFFSET[R], 709, 286, 0

CALL[],1,9,20,79

    </glyphProgram>

    <glyphProgram name="icircumflex">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 235, 0, 0
OFFSET[R], 360, 129, 0
CALL[],1,2,4,79
CALL[],0,8,4,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="icyr">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 2, 6
MIAP[R], 4, 6
MIAP[R], 7, 10
MIAP[R], 9, 10
SRP2[], 2
IP[], 8
IP[], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="icyr.loclBGR">
OFFSET[R], 216, 0, 0

    </glyphProgram>

    <glyphProgram name="idieresis">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 235, 0, 0
OFFSET[R], 427, 129, 0
CALL[],1,2,4,79
CALL[],2,2,16,79
CALL[],0,18,12,1,0,80
SHC[2],1
SHC[2],2

    </glyphProgram>

    <glyphProgram name="idotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 204, 0, 0
OFFSET[R], 473, 129, 0
/* No vertical hints due to overlapping parts */
CALL[],0,18,24,5,0,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="ie">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 200, 0, 0

    </glyphProgram>

    <glyphProgram name="iegrave">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 200, 0, 0
OFFSET[R], 340, 292, 0
CALL[],2,11,30,79
CALL[],-49,31,33,7,15,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="ieukrain">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 26
MIRP[m&gt;RBl], 23, 87
SHP[2], 25
MIAP[R], 8, 7
SHP[1], 10
MIRP[m&gt;RBl], 14, 87
SHP[2], 11
SRP1[], 0
IP[], 20
MDAP[R], 20
MIRP[m&gt;RBl], 18, 85
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="igrave">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 235, 0, 0
OFFSET[R], 342, 129, 0
CALL[],1,2,4,79
CALL[],-41,5,7,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="igravecyr">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 627, 0, 0
OFFSET[R], 340, 307, 0
CALL[],1,1,10,79
CALL[],-45,11,13,0,5,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="igravecyr.loclBGR">
OFFSET[R], 216, 0, 0
OFFSET[R], 340, 286, 0

CALL[],1,9,20,79

    </glyphProgram>

    <glyphProgram name="ihookabove">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 235, 0, 0
OFFSET[R], 475, 129, 0
CALL[],1,2,4,79
CALL[],2,12,16,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="ij">
/* Composite glyph autohinted */

OFFSET[R], 204, 0, 0
OFFSET[R], 205, 258, 0

    </glyphProgram>

    <glyphProgram name="ijacute">
/* Composite glyph autohinted */

OFFSET[R], 236, 258, 0
OFFSET[R], 235, 0, 0
OFFSET[R], 300, 129, 0
OFFSET[R], 300, 388, 0

CALL[],2,6,16,79
CALL[],3,6,20,79

    </glyphProgram>

    <glyphProgram name="imacron">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 235, 0, 0
OFFSET[R], 397, 129, 0
CALL[],1,2,4,79
CALL[],0,5,4,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="io">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 200, 0, 0
OFFSET[R], 425, 292, 0
CALL[],2,11,30,79
CALL[],3,11,42,79
CALL[],4,44,38,7,15,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="iogonek">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 204, 0, 0
OFFSET[R], 269, 69, 0
/* No vertical hints due to overlapping parts */
CALL[],-34,22,16,5,0,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="itilde">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 235, 0, 0
OFFSET[R], 364, 129, 0
CALL[],1,2,7,79
CALL[],0,16,5,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="iukrain">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 204, 0, 0

    </glyphProgram>

    <glyphProgram name="izhitsa">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MIAP[R], 2, 6
IP[], 3
RDTG[]
MDAP[R], 3
RTG[]
MIAP[R], 8, 6
MIRP[m&gt;RBl], 9, 85
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="j">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 3, 121
MIRP[m&gt;RBl], 9, 125
MIAP[R], 12, 14
MIRP[m&gt;RBl], 13, 85
MIAP[R], 18, 6
IP[], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="je">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 205, 0, 0

    </glyphProgram>

    <glyphProgram name="k">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MDRP[m&lt;RGr], 9
MIAP[R], 2, 0
MIAP[R], 5, 6
SRP2[], 0
SLOOP[], 3
IP[], 10, 7, 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ka">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 6
MIAP[R], 4, 6
MIAP[R], 8, 10
MIAP[R], 10, 10
SRP2[], 1
SLOOP[], 3
IP[], 3, 6, 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ka.loclBGR">
OFFSET[R], 206, 0, 0

    </glyphProgram>

    <glyphProgram name="kcommabelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 206, 0, 0
OFFSET[R], 265, 300, 0
/* No vertical hints due to overlapping parts */
CALL[],-19,12,23,1,8,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="kgreenlandic">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MDRP[m&lt;RGr], 9
MIAP[R], 5, 6
MDRP[m&lt;RGr], 2
SRP2[], 0
SLOOP[], 3
IP[], 10, 7, 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="kje">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 628, 0, 0
OFFSET[R], 300, 274, 0
CALL[],1,1,12,79
CALL[],25,13,11,0,7,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="l">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MIAP[R], 2, 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="lacute">
/* Composite glyph autohinted */

OFFSET[R], 207, -3, 0
OFFSET[R], 302, 126, 222

SVTCA[Y]
MIAP[R],5,161
SHC[1],1

CALL[],1,2,5,79

    </glyphProgram>

    <glyphProgram name="lcaron">
/* Composite glyph autohinted */

OFFSET[R], 207, -3, 0
OFFSET[R], 393, 287, 0

SVTCA[Y]
MIAP[R],14,1
SHC[1],1

    </glyphProgram>

    <glyphProgram name="lcommabelow">
/* Composite glyph autohinted */

OFFSET[R], 207, -3, 0
OFFSET[R], 265, 126, 0

    </glyphProgram>

    <glyphProgram name="ldotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 207, 0, 0
OFFSET[R], 473, 129, 0
/* No vertical hints due to overlapping parts */
CALL[],0,6,12,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="less">
/* VTT 6.01C compiler */
SVTCA[Y]
MDAP[R], 1
SDB[], 8
DLTP1[(1 @0 -8)(1 @1 -8)(1 @5 -8)]
DLTP1[(1 @6 8)]
DLTP1[(1 @9 -8)]
SHP[1], 2
SRP2[], 7
IP[], 5
MDAP[R], 5
SHP[1], 4
SRP1[], 4
SRP2[], 2
IP[], 3
RTHG[]
MDAP[R], 3
SHP[1], 0
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="liraturkish">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 12
MIRP[m&gt;RBl], 19, 101
MIAP[R], 9, 4
SRP2[], 0
IP[], 12
IP[], 2
MDAP[R], 12
MDAP[R], 2
SDB[], 8
DLTP1[(2 @0 -8)(2 @1 -8)(2 @4 -8)(2 @5 -8)]
SRP0[], 12
MIRP[M&gt;RBl], 13, 115
MDRP[M&gt;RWh], 16
CALL[], 16, -64, 12, 17, 72
MIRP[m&gt;RBl], 17, 115
SRP1[], 2
IP[], 1
IP[], 18
SRP0[], 2
MIRP[M&gt;RBl], 3, 115
SRP1[], 16
IP[], 4
IP[], 15
MDRP[M&gt;RWh], 6
DLTP1[(6 @8 8)(6 @9 8)]
SRP1[], 13
IP[], 5
IP[], 14
MIRP[m&gt;RBl], 7, 115
SRP1[], 12
IP[], 11
IP[], 8
SRP1[], 9
SRP2[], 19
IP[], 24
MDAP[R], 24
MDRP[m&lt;RBl], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="lje">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MIRP[m&gt;RBl], 1, 85
MIAP[R], 6, 6
MIRP[m&gt;RBl], 19, 85
MIAP[R], 17, 10
MIRP[m&gt;RBl], 26, 85
SRP2[], 6
IP[], 8
MDAP[R], 8
MIRP[m&gt;RBl], 24, 85
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="logicalnot">
/* VTT 6.01C compiler */
SVTCA[Y]
MDAP[R], 2
SDB[], 8
DLTP1[(2 @0 -8)]
DLTP1[(2 @3 8)]
DLTP1[(2 @13 -8)]
MDRP[m&gt;RBl], 0
MIRP[m&gt;RBl], 4, 148
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="lslash">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MIAP[R], 6, 0
IP[], 9
IP[], 3
MDAP[R], 9
MDAP[R], 3
SRP0[], 9
MIRP[m&gt;RBl], 10, 134
SRP1[], 3
IP[], 2
IP[], 11
SRP0[], 3
MIRP[m&gt;RBl], 4, 134
SRP1[], 9
IP[], 8
IP[], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="m">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MDRP[m&lt;RGr], 9
MDRP[m&lt;RGr], 18
MIAP[R], 20, 6
MIAP[R], 25, 7
MIRP[m&gt;RBl], 14, 87
SHP[1], 22
SHP[1], 27
MIAP[R], 30, 7
MIRP[m&gt;RBl], 5, 87
SRP1[], 0
IP[], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="macron">
/* Composite glyph autohinted */

OFFSET[R], 395, 304, 0

    </glyphProgram>

    <glyphProgram name="macroncomb">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 159
MIRP[m&gt;RBl], 2, 143
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="macroncomb.cap">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 156
MIRP[m&gt;RBl], 2, 143
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="macroncomb.narrow">
/* VTT 6.01C compiler */
SVTCA[Y]
MDAP[R], 0
MIRP[m&gt;RBl], 2, 143
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="micro">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 6
MIAP[R], 10, 6
MIAP[R], 13, 10
MIAP[R], 17, 11
MIRP[m&gt;RBl], 6, 87
SHP[1], 14
MIAP[R], 20, 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="minus">
/* VTT 6.01C compiler */
SVTCA[Y]
MDAP[R], 0
SDB[], 8
DLTP1[(0 @0 -8)]
DLTP1[(0 @3 8)]
DLTP1[(0 @13 -8)]
MIRP[m&gt;RBl], 2, 148
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="multiply">
/* VTT 6.01C compiler */
SVTCA[Y]
MDAP[R], 4
MDRP[m&lt;RGr], 6
SRP2[], 12
IP[], 0
MDAP[R], 0
SRP2[], 4
SLOOP[], 5
IP[], 1, 11, 2, 5, 3
MDRP[m&lt;RGr], 10
SRP1[], 1
SHP[1], 9
SRP1[], 2
SHP[1], 8
SRP1[], 3
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="n">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MDRP[m&lt;RGr], 10
MIAP[R], 12, 6
MIAP[R], 17, 7
SHP[1], 14
MIRP[m&gt;RBl], 5, 87
SRP1[], 0
IP[], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="nacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 209, 0, 0
OFFSET[R], 300, 321, 0
CALL[],1,16,22,79
CALL[],73,23,21,11,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="nbhyphen">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 125, 0, 0

    </glyphProgram>

    <glyphProgram name="nbhyphen.case">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 125, 0, 85

    </glyphProgram>

    <glyphProgram name="nbspace">
/* VTT 6.01C compiler */

    </glyphProgram>

    <glyphProgram name="ncaron">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 209, 0, 0
OFFSET[R], 390, 321, 0
CALL[],1,16,26,79
CALL[],20,21,25,11,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="ncommabelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 209, 0, 0
OFFSET[R], 265, 301, 0
/* No vertical hints due to overlapping parts */
CALL[],-3,22,33,11,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="nine">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 5
MIRP[m&gt;RBl], 22, 103
MIAP[R], 7, 12
IP[], 14
MDAP[R], 14
SHP[1], 11
MIRP[m&gt;RBl], 30, 103
SRP1[], 22
IP[], 18
IP[], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="nine.dnom">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 129
MIRP[m&gt;RBl], 19, 136
MIAP[R], 6, 127
IP[], 11
MDAP[R], 11
SHP[1], 9
MIRP[m&gt;RBl], 25, 137
SRP1[], 19
IP[], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="nine.numr">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 50, 0, 304

    </glyphProgram>

    <glyphProgram name="nineinferior">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 50, 0, -100

    </glyphProgram>

    <glyphProgram name="ninesuperior">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 50, 0, 404

    </glyphProgram>

    <glyphProgram name="nje">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 2, 6
MIAP[R], 5, 6
MIAP[R], 16, 10
MIRP[m&gt;RBl], 22, 85
MIAP[R], 19, 10
SRP2[], 2
IP[], 7
IP[], 18
MDAP[R], 7
MDAP[R], 18
DLTP2[(18 @4 -8)(18 @5 -8)(18 @8 -8)(18 @9 -8)]
SRP0[], 7
MIRP[m&gt;RBl], 21, 85
SRP0[], 18
MIRP[m&gt;RBl], 3, 85
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ntilde">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 209, 0, 0
OFFSET[R], 362, 321, 0
CALL[],1,16,24,79
CALL[],20,33,22,11,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="numbersign">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 12
MDRP[m&lt;RGr], 24
MIAP[R], 10, 4
MDRP[m&lt;RGr], 14
SRP2[], 0
IP[], 9
MDAP[R], 9
SDB[], 8
DLTP1[(9 @0 8)(9 @1 8)(9 @2 8)(9 @6 8)
      (9 @11 8)(9 @12 8)(9 @13 8)]
DLTP2[(9 @1 8)(9 @8 8)(9 @12 8)(9 @13 8)]
DLTP3[(9 @6 8)(9 @7 8)(9 @8 8)(9 @12 8)]
SDB[], 59
DLTP1[(9 @0 8)(9 @4 8)]
MDRP[m&lt;RGr], 12
MDRP[m&lt;RGr], 16
MIRP[M&gt;RBl], 6, 102
MDRP[m&lt;RGr], 19
MDRP[m&lt;RGr], 31
MDRP[M&gt;RGr], 2
MDRP[m&lt;RGr], 23
MDRP[m&lt;RGr], 27
MIRP[M&gt;RBl], 5, 102
MDRP[m&lt;RGr], 20
MDRP[m&lt;RGr], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="numero">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 18, 2
MIAP[R], 20, 2
MIAP[R], 23, 8
MIAP[R], 25, 8
SRP2[], 18
IP[], 24
IP[], 19
MIAP[R], 8, 2
MIRP[M&gt;RBl], 32, 86
MDRP[M&gt;RGr], 0
MIRP[m&gt;RBl], 26, 86
MDRP[M&gt;RWh], 39
MIRP[m&gt;RBl], 38, 86
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="o">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 16, 87
MIAP[R], 8, 7
MIRP[m&gt;RBl], 22, 87
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="oacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OFFSET[R], 300, 303, 0
CALL[],2,7,29,79
CALL[],52,30,28,3,11,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="ocircumflex">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OFFSET[R], 358, 303, 0
CALL[],2,7,28,79
CALL[],-1,32,28,3,11,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="ocircumflexacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OFFSET[R], 502, 303, 0
CALL[],3,7,32,79
SHC[2],2
CALL[],82,32,30,3,11,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="ocircumflexdotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OFFSET[R], 358, 303, 0
OFFSET[R], 473, 303, 0
/* No vertical hints due to overlapping parts */
CALL[],2,8,32,79
CALL[],-1,32,28,3,11,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="ocircumflexgrave">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OFFSET[R], 504, 303, 0
CALL[],3,7,32,79
SHC[2],2
CALL[],35,32,31,3,11,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="ocircumflexhookabove">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OFFSET[R], 506, 303, 0
CALL[],3,7,44,79
SHC[2],2
CALL[],47,44,41,3,11,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="ocircumflextilde">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OFFSET[R], 508, 303, 0
CALL[],3,7,51,79
SHC[2],2
CALL[],1,51,54,3,11,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="ocyr">
OFFSET[R], 210, 0, 0

    </glyphProgram>

    <glyphProgram name="odieresis">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OFFSET[R], 425, 303, 0
CALL[],2,7,28,79
CALL[],3,7,40,79
CALL[],0,42,36,3,11,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="odotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OFFSET[R], 473, 303, 0
/* No vertical hints due to overlapping parts */
CALL[],-1,30,36,3,11,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="oe">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 4, 7
SHP[1], 7
MIRP[m&gt;RBl], 53, 87
MIAP[R], 10, 7
MIRP[m&gt;RBl], 35, 87
MIAP[R], 25, 11
SHP[1], 22
DLTP1[(22 @0 -1)(22 @1 -1)]
SHP[1], 28
IP[], 15
MDAP[R], 15
DLTP3[(15 @3 8)(15 @4 8)(15 @7 8)(15 @14 8)]
SDB[], 63
DLTP1[(15 @0 -8)(15 @3 -8)]
MIRP[m&gt;RBl], 38, 86
IP[], 14
SRP0[], 25
MIRP[m&gt;RBl], 19, 87
SDB[], 9
DLTP1[(19 @0 -1)(19 @1 -1)]
SHP[2], 21
SDB[], 8
DLTP1[(21 @0 -2)]
DLTP1[(21 @1 -1)]
DLTP1[(21 @2 -2)]
DLTP1[(21 @11 -1)(21 @12 -1)]
MIAP[R], 31, 11
MIRP[m&gt;RBl], 46, 87
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ogonek">
/* Composite glyph autohinted */

OFFSET[R], 269, 304, 0

    </glyphProgram>

    <glyphProgram name="ogonekcomb">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 11, 10
MDRP[m&lt;rBl], 10
MDRP[M&gt;RWh], 17
MIRP[m&gt;RBl], 4, 138
SRP2[], 11
IP[], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ogonekcomb.cap">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 10, 8
MDRP[m&lt;rBl], 9
MDRP[M&gt;RWh], 16
MIRP[m&gt;RBl], 4, 138
SRP2[], 10
IP[], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ogonekcomb.round">
/* VTT 6.01C compiler */
SVTCA[Y]
SRP0[], 21
MDRP[m&lt;rGr], 11
SDB[], 8
DLTP1[(11 @0 1)(11 @1 1)(11 @2 1)]
CALL[], 11, 16, 11, 17, 72
CALL[], 11, 24, 18, 24, 72
CALL[], 11, 32, 25, 29, 72
CALL[], 11, 40, 30, 38, 72
CALL[], 11, 48, 39, 49, 72
SHP[2], 10
MDRP[M&gt;RGr], 17
MIRP[m&gt;RBl], 4, 138
SRP2[], 21
IP[], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ogonekcomb.round.cap">
/* VTT 6.01C compiler */
SVTCA[Y]
SRP0[], 21
MDRP[m&lt;rGr], 11
SDB[], 8
DLTP1[(11 @0 1)(11 @1 1)(11 @2 1)]
CALL[], 11, 16, 11, 18, 72
CALL[], 11, 24, 19, 24, 72
CALL[], 11, 32, 25, 29, 72
CALL[], 11, 40, 30, 38, 72
CALL[], 11, 48, 39, 49, 72
SHP[2], 10
MDRP[M&gt;RGr], 17
MIRP[m&gt;RBl], 4, 138
SRP2[], 20
IP[], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ograve">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OFFSET[R], 340, 303, 0
CALL[],2,7,28,79
CALL[],-54,29,31,3,11,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="ohookabove">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OFFSET[R], 475, 303, 0
CALL[],2,7,28,79
CALL[],1,36,40,3,11,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="ohorn">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 29, 87
MIAP[R], 8, 7
SHP[1], 11
MIRP[m&gt;RBl], 36, 87
SHP[2], 23
MIAP[R], 18, 121
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ohornacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 300, 303, 0
/* No vertical hints due to overlapping parts */
CALL[],2,8,45,79
CALL[],30,45,43,3,19,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="ohorndotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 473, 303, 0
/* No vertical hints due to overlapping parts */
CALL[],-22,45,51,3,19,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="ohorngrave">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 340, 303, 0
/* No vertical hints due to overlapping parts */
CALL[],2,8,43,79
CALL[],-75,44,46,3,19,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="ohornhookabove">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 475, 303, 0
/* No vertical hints due to overlapping parts */
CALL[],2,8,43,79
CALL[],-20,51,55,3,19,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="ohorntilde">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0
OFFSET[R], 362, 303, 0
/* No vertical hints due to overlapping parts */
CALL[],2,8,47,79
CALL[],-22,55,44,3,19,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="ohungarumlaut">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OFFSET[R], 305, 303, 0
CALL[],2,7,29,79
CALL[],3,7,33,79
CALL[],65,30,32,3,11,80
SHC[2],2
SHC[2],3

    </glyphProgram>

    <glyphProgram name="one">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 4
SHP[2], 4
MDRP[M&gt;RBl], 6
MDRP[m&gt;RBl], 5
MIAP[R], 2, 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="one.dnom">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 126
MDRP[M&gt;RBl], 6
SHP[2], 4
MDRP[m&gt;RBl], 5
MIAP[R], 2, 127
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="one.numr">
/* Composite glyph autohinted */

OFFSET[R], 42, 0, 304

SVTCA[Y]
MIAP[R],0,128
SHC[1],0

    </glyphProgram>

    <glyphProgram name="onehalf">
/* Composite glyph autohinted */

OFFSET[R], 81, 343, 0
OFFSET[R], 43, 551, 0
OFFSET[R], 42, 0, 304

SVTCA[Y]
MIAP[R],29,128
SHC[1],2

    </glyphProgram>

    <glyphProgram name="oneinferior">
/* Composite glyph autohinted */

OFFSET[R], 42, 0, -100

    </glyphProgram>

    <glyphProgram name="onequarter">
/* Composite glyph autohinted */

OFFSET[R], 81, 357, 0
OFFSET[R], 45, 516, 0
OFFSET[R], 42, 0, 304

SVTCA[Y]
MIAP[R],18,128
SHC[1],3

    </glyphProgram>

    <glyphProgram name="onesuperior">
/* Composite glyph autohinted */

OFFSET[R], 42, 0, 404

    </glyphProgram>

    <glyphProgram name="ordfeminine">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 17, 128
SHP[1], 14
MIRP[m&gt;RBl], 10, 136
SHP[2], 13
SRP2[], 37
IP[], 0
MDAP[R], 0
SDB[], 8
DLTP1[(0 @0 -8)(0 @1 -8)]
MDRP[m&lt;RGr], 21
SHP[1], 23
MIRP[m&gt;RBl], 26, 136
SRP1[], 17
IP[], 6
MDAP[R], 6
DLTP1[(6 @0 -8)(6 @1 -8)(6 @2 -8)(6 @15 -8)]
DLTP3[(6 @0 -8)(6 @1 -8)(6 @2 -8)]
SHP[1], 20
MIRP[m&gt;RBl], 30, 152
SRP1[], 26
IP[], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ordmasculine">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 8, 128
MIRP[m&gt;RBl], 22, 138
SRP2[], 28
IP[], 0
MDAP[R], 0
SDB[], 8
DLTP1[(0 @0 -8)(0 @1 -8)]
MIRP[m&gt;RBl], 16, 138
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="oslash">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 9, 7
MDRP[m&lt;RWh], 13
SHP[2], 14
MIRP[m&gt;RBl], 31, 87
MIAP[R], 22, 11
MDRP[m&lt;RWh], 0
SHP[2], 1
SRP2[], 31
IP[], 25
IP[], 40
MIRP[m&gt;RBl], 34, 87
SRP1[], 31
IP[], 5
SRP1[], 5
SHP[1], 18
SRP1[], 9
IP[], 12
IP[], 28
SRP1[], 12
SRP2[], 40
IP[], 15
IP[], 29
SRP1[], 28
SRP2[], 25
IP[], 41
IP[], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="otilde">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 210, 0, 0
OFFSET[R], 362, 303, 0
CALL[],2,7,31,79
CALL[],-1,40,29,3,11,80
SHC[2],2

    </glyphProgram>

    <glyphProgram name="p">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 14
MIAP[R], 2, 6
MIAP[R], 7, 7
SHP[1], 4
MIRP[m&gt;RBl], 30, 87
MIAP[R], 15, 11
SHP[1], 18
MIRP[m&gt;RBl], 23, 87
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="paragraph">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 18
MDRP[m&lt;RGr], 12
MIAP[R], 10, 2
MIRP[m&gt;RBl], 14, 114
SRP1[], 0
IP[], 2
MDAP[R], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="parenleft">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 18
MIAP[R], 6, 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="parenleft.case">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 130, 0, 56

    </glyphProgram>

    <glyphProgram name="parenright">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 18
MIAP[R], 6, 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="parenright.case">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 131, 0, 56

    </glyphProgram>

    <glyphProgram name="pe">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 6
MIRP[m&gt;RBl], 6, 85
MIAP[R], 4, 10
MIAP[R], 7, 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="pe.loclBGR">
OFFSET[R], 209, 0, 0

    </glyphProgram>

    <glyphProgram name="percent">
/* Composite glyph autohinted */

OFFSET[R], 81, 300, 0
OFFSET[R], 82, 426, 0
OFFSET[R], 82, 0, 408

SVTCA[Y]
MIAP[R],40,131
SHC[1],3
SHC[1],4

    </glyphProgram>

    <glyphProgram name="period">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 6, 117
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="periodcentered">
/* Composite glyph autohinted */

OFFSET[R], 4, -16, 229

    </glyphProgram>

    <glyphProgram name="periodcentered.case">
/* Composite glyph autohinted */

OFFSET[R], 4, -16, 300

    </glyphProgram>

    <glyphProgram name="periodcentered.loclCAT">
/* Composite glyph autohinted */

OFFSET[R], 4, -30, 309

    </glyphProgram>

    <glyphProgram name="periodcentered.loclCAT.cap">
/* Composite glyph autohinted */

OFFSET[R], 4, -265, 309

    </glyphProgram>

    <glyphProgram name="perthousand">
/* Composite glyph autohinted */

OFFSET[R], 81, 300, 0
OFFSET[R], 82, 426, 0
OFFSET[R], 82, 812, 0
OFFSET[R], 82, 0, 408

SVTCA[Y]
MIAP[R],68,131
SHC[1],5
SHC[1],6

    </glyphProgram>

    <glyphProgram name="plus">
/* VTT 6.01C compiler */
SVTCA[Y]
MDAP[R], 1
SDB[], 8
DLTP1[(1 @0 -8)]
DLTP1[(1 @3 8)]
DLTP1[(1 @13 -8)]
MDRP[m&gt;RBl], 0
DLTP1[(0 @2 3)]
DLTP1[(0 @3 1)]
MDRP[m&lt;RGr], 10
MIRP[M&gt;RBl], 4, 148
MDRP[m&gt;RBl], 5
DLTP1[(5 @2 -3)]
MDRP[m&lt;RGr], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="plusminus">
/* Composite glyph autohinted */

USEMYMETRICS[]
OFFSET[R], 99, 0, 11
OFFSET[R], 100, 0, -316

CALL[],1,0,14,90

SVTCA[Y]
MIAP[R],12,12
SHC[1],1

CALL[], 0, 13, 12, 2, 8, 80
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="punctuationspace">
/* VTT 6.01C compiler */

    </glyphProgram>

    <glyphProgram name="q">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 14
MIAP[R], 4, 11
SHP[1], 1
MIRP[m&gt;RBl], 23, 87
MIAP[R], 12, 7
SHP[1], 15
MIRP[m&gt;RBl], 31, 87
MIAP[R], 16, 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="question">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 29, 11
MIRP[M&gt;RGr], 17, 149
SHP[2], 14
MIRP[m&gt;RBl], 11, 116
SHP[2], 13
SRP0[], 29
MIRP[M&gt;RBl], 35, 117
MDRP[m&gt;RWh], 0
DLTP3[(0 @0 -8)]
SRP1[], 17
IP[], 5
SRP1[], 11
IP[], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="questiondown">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 6
MIRP[M&gt;RBl], 6, 117
MDRP[m&gt;RWh], 12
DLTP3[(12 @0 8)]
SRP0[], 0
MIRP[M&gt;RGr], 29, 149
SHP[2], 26
SRP1[], 12
IP[], 17
MIRP[m&gt;RBl], 23, 116
SHP[2], 25
SRP1[], 12
IP[], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="questiondown.case">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 3
MIRP[M&gt;RBl], 6, 117
MDRP[m&gt;RWh], 12
DLTP3[(12 @0 8)]
SRP0[], 0
MIRP[M&gt;RGr], 29, 149
SHP[2], 26
SRP1[], 12
IP[], 17
MIRP[m&gt;RBl], 23, 116
SHP[2], 25
SRP1[], 12
IP[], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="quotedbl">
/* Composite glyph autohinted */

OFFSET[R], 12, 0, 0
OFFSET[R], 12, 146, 0

    </glyphProgram>

    <glyphProgram name="quotedblbase">
/* Composite glyph autohinted */

OFFSET[R], 228, 0, -620
OFFSET[R], 228, 162, -620

SVTCA[Y]
MIAP[R],4,11
SHC[1],0
SHC[1],1

    </glyphProgram>

    <glyphProgram name="quotedblleft">
/* Composite glyph autohinted */

OFFSET[R], 227, 0, 0
OFFSET[R], 227, 162, 0

    </glyphProgram>

    <glyphProgram name="quotedblright">
/* Composite glyph autohinted */

OFFSET[R], 228, 0, 0
OFFSET[R], 228, 162, 0

    </glyphProgram>

    <glyphProgram name="quoteleft">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 17
MDRP[M&gt;RBl], 4
MIRP[m&gt;RBl], 10, 117
IP[], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="quoteright">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 10, 17
MIRP[M&gt;RBl], 4, 117
MDRP[m&gt;RBl], 0
SRP2[], 10
IP[], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="quotesinglbase">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 228, 0, -620

    </glyphProgram>

    <glyphProgram name="quotesingle">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 8, 17
SRP2[], 15
IP[], 0
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="r">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 6, 10
MIAP[R], 8, 6
MDRP[M&lt;RGr], 13
MIRP[m&gt;RBl], 2, 74
SHP[1], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="racute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 213, 0, 0
OFFSET[R], 300, 232, 0
CALL[],1,0,15,79
CALL[],64,16,14,7,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="rcaron">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 213, 0, 0
OFFSET[R], 390, 232, 0
CALL[],1,0,19,79
CALL[],11,14,18,7,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="registered">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 8, 128
MIRP[m&gt;RBl], 24, 152
SMD[], 128
MDRP[M&gt;RGr], 34
SMD[], 64
MIRP[M&gt;RBl], 33, 135
MDRP[m&lt;RGr], 42
SMD[], 128
MDRP[M&gt;RGr], 0
SMD[], 64
MIRP[m&gt;RBl], 16, 152
SRP0[], 34
MIRP[m&gt;RBl], 46, 153
SRP1[], 33
IP[], 44
MDAP[R], 44
SHP[1], 41
MIRP[m&gt;RBl], 48, 153
SRP1[], 46
IP[], 38
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ring">
/* Composite glyph autohinted */

OFFSET[R], 466, 296, 0

    </glyphProgram>

    <glyphProgram name="ringcomb">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 3, 160
MIRP[M&gt;RBl], 21, 145
SMD[], 128
MDRP[M&gt;RGr], 9
SMD[], 64
MIRP[m&gt;RBl], 15, 145
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ringcomb.cap">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 157
MIRP[M&gt;RBl], 12, 145
SMD[], 128
MDRP[M&gt;RGr], 6
SMD[], 64
MIRP[m&gt;RBl], 18, 145
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ruble">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 12
MIAP[R], 10, 4
MIRP[m&gt;RBl], 25, 148
SRP1[], 0
IP[], 19
MDAP[R], 19
SDB[], 8
DLTP1[(19 @0 8)(19 @1 8)]
MDRP[m&lt;RGr], 6
RDTG[]
MDRP[M&gt;RWh], 21
DLTP1[(21 @10 -8)]
RTG[]
MDRP[m&lt;RBl], 5
MIRP[M&gt;RBl], 2, 148
MDRP[m&lt;RGr], 24
SRP0[], 19
MIRP[M&gt;RBl], 27, 148
MDRP[m&lt;RGr], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="rupeeindian">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 12
MIAP[R], 15, 4
MIRP[M&gt;RBl], 13, 102
MDRP[m&lt;RGr], 18
RDTG[]
MDRP[M&gt;RWh], 10
DLTP1[(10 @8 -8)]
RTG[]
MDRP[m&lt;RBl], 20
MIRP[M&gt;RBl], 7, 102
MDRP[m&lt;RGr], 23
RDTG[]
MDRP[M&gt;RWh], 3
SDS[], 2
SDB[], 8
DLTP1[(3 @0 8)(3 @1 8)]
DLTP1[(3 @9 -4)]
RTG[]
MIRP[M&gt;RBl], 26, 102
MDRP[m&lt;RGr], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="s">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 17, 7
SHP[1], 20
MIRP[m&gt;RBl], 24, 87
SHP[2], 21
MIAP[R], 37, 11
SHP[1], 0
MIRP[m&gt;RBl], 4, 87
SHP[2], 1
SRP1[], 17
IP[], 30
SRP1[], 30
SRP2[], 24
IP[], 13
SRP1[], 37
IP[], 10
SRP1[], 4
SRP2[], 10
IP[], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="sacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 214, 0, 0
OFFSET[R], 300, 246, 0
CALL[],1,16,41,79
CALL[],57,42,40,0,32,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="scaron">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 214, 0, 0
OFFSET[R], 390, 246, 0
CALL[],1,16,45,79
CALL[],3,40,44,0,32,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="scedilla">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 214, 0, 0
OFFSET[R], 262, 249, 0
/* No vertical hints due to overlapping parts */
CALL[],-6,40,56,0,32,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="scommabelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 214, 0, 0
OFFSET[R], 265, 249, 0
/* No vertical hints due to overlapping parts */
CALL[],3,41,52,0,32,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="section">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 9, 18
SHP[1], 12
MIRP[m&gt;RBl], 16, 150
SHP[2], 13
MIAP[R], 34, 16
SHP[1], 37
MIRP[m&gt;RBl], 40, 150
SHP[2], 38
SRP1[], 9
IP[], 22
IP[], 52
SRP1[], 16
SRP2[], 22
IP[], 5
SRP1[], 52
SHP[1], 28
SHP[1], 53
SRP1[], 16
SRP2[], 34
IP[], 59
IP[], 46
SRP1[], 59
SHP[1], 3
SHP[1], 60
SRP2[], 52
IP[], 0
IP[], 25
SRP1[], 40
SRP2[], 46
IP[], 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="semicolon">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 6, 0, 0
OFFSET[R], 4, 0, 370
CALL[],1,8,15,79
CALL[],3,17,23,1,11,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="seven">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 2, 12
MIAP[R], 6, 4
MIRP[m&gt;RBl], 4, 101
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="seven.dnom">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 4, 126
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="seven.numr">
/* Composite glyph autohinted */

OFFSET[R], 48, 0, 304

SVTCA[Y]
MIAP[R],0,128
SHC[1],0

    </glyphProgram>

    <glyphProgram name="seveninferior">
/* Composite glyph autohinted */

OFFSET[R], 48, 0, -100

    </glyphProgram>

    <glyphProgram name="sevensuperior">
/* Composite glyph autohinted */

OFFSET[R], 48, 0, 404

    </glyphProgram>

    <glyphProgram name="sha">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MIRP[M&gt;RBl], 4, 85
MDRP[m&lt;RGr], 7
MIAP[R], 2, 6
MIAP[R], 5, 6
MIAP[R], 9, 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="sha.loclBGR">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 9, 87
SHP[1], 33
MIAP[R], 5, 6
MIAP[R], 16, 6
MIAP[R], 24, 6
MIAP[R], 27, 10
MIAP[R], 31, 11
MIRP[m&gt;RBl], 20, 87
SHP[1], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="shcha">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 2, 6
MIAP[R], 6, 6
MIAP[R], 9, 6
MIAP[R], 14, 165
MIAP[R], 15, 10
MIRP[M&gt;RBl], 11, 85
MDRP[m&lt;RGr], 4
MDRP[m&lt;RGr], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="shcha.loclBGR">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 9, 87
SHP[1], 40
MIAP[R], 5, 6
MIAP[R], 16, 6
MIAP[R], 24, 6
MIAP[R], 32, 165
MIAP[R], 33, 10
MIRP[m&gt;RBl], 30, 87
MIAP[R], 38, 11
MIRP[m&gt;RBl], 20, 87
SHP[1], 35
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="six">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 13
MIRP[m&gt;RBl], 22, 103
MIAP[R], 7, 4
IP[], 14
MDAP[R], 14
SHP[1], 11
MIRP[m&gt;RBl], 30, 103
SRP1[], 22
IP[], 18
IP[], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="six.dnom">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 130
MIRP[m&gt;RBl], 19, 136
MIAP[R], 6, 126
IP[], 11
MDAP[R], 11
SHP[1], 9
MIRP[m&gt;RBl], 25, 137
SRP1[], 19
IP[], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="six.numr">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 47, 0, 304

    </glyphProgram>

    <glyphProgram name="sixinferior">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 47, 0, -100

    </glyphProgram>

    <glyphProgram name="sixsuperior">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 47, 0, 404

    </glyphProgram>

    <glyphProgram name="sixthemspace">
/* VTT 6.01C compiler */

    </glyphProgram>

    <glyphProgram name="slash">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 8
MIAP[R], 2, 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="slash.case">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 132, 0, 0

    </glyphProgram>

    <glyphProgram name="soft">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MIRP[m&gt;RBl], 14, 85
MIAP[R], 1, 6
SRP2[], 0
IP[], 13
MDAP[R], 13
MIRP[m&gt;RBl], 4, 85
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="soft.loclBGR">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 17, 87
MIAP[R], 4, 6
SRP2[], 0
IP[], 9
MDAP[R], 9
SHP[1], 6
MIRP[m&gt;RBl], 23, 87
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="softhyphen">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 125, 0, 0

    </glyphProgram>

    <glyphProgram name="space">
/* VTT 6.01C compiler */

    </glyphProgram>

    <glyphProgram name="sterling">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 4, 12
MIRP[M&gt;RBl], 2, 101
MDRP[m&lt;RGr], 7
MIAP[R], 16, 5
SHP[1], 18
MIRP[m&gt;RBl], 22, 103
SHP[2], 19
SRP1[], 4
IP[], 0
MDAP[R], 0
DLTP3[(0 @13 8)]
SDB[], 66
DLTP1[(0 @0 8)]
MDRP[m&lt;RGr], 8
MIRP[M&gt;RBl], 26, 148
MDRP[m&lt;RGr], 11
SRP2[], 22
IP[], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="t">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MIRP[m&gt;RBl], 16, 85
MIAP[R], 7, 6
MDRP[m&gt;RBl], 8
MDRP[m&lt;RGr], 10
MIRP[M&gt;RBl], 13, 85
MDRP[m&lt;RGr], 4
SRP2[], 16
IP[], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tbar">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MIRP[m&gt;RBl], 24, 85
MIAP[R], 11, 6
MDRP[m&gt;RBl], 12
MDRP[m&lt;RGr], 14
MIRP[M&gt;RBl], 17, 85
MDRP[m&lt;RGr], 8
MDRP[M&gt;RBl], 7
DLTP1[(7 @6 -8)]
DLTP2[(7 @0 -8)]
MDRP[m&lt;RGr], 18
MIRP[M&gt;RBl], 21, 85
MDRP[m&lt;RGr], 4
SRP2[], 24
IP[], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tcaron">
/* Composite glyph autohinted */

OFFSET[R], 215, 0, 0
OFFSET[R], 394, 316, 0

CALL[],1,6,18,79

    </glyphProgram>

    <glyphProgram name="tcedilla">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 215, 0, 0
OFFSET[R], 262, 255, 0
/* No vertical hints due to overlapping parts */
CALL[],50,18,34,5,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="tcommabelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 215, 0, 0
OFFSET[R], 265, 255, 0
/* No vertical hints due to overlapping parts */
CALL[],60,19,30,5,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="te">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MIAP[R], 3, 6
MIRP[M&gt;RBl], 1, 85
MDRP[m&lt;RGr], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="te.loclBGR">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 208, 0, 0

    </glyphProgram>

    <glyphProgram name="thinspace">
/* VTT 6.01C compiler */

    </glyphProgram>

    <glyphProgram name="thirdemspace">
/* VTT 6.01C compiler */

    </glyphProgram>

    <glyphProgram name="thorn">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 14
MIAP[R], 2, 0
MIAP[R], 7, 7
SHP[1], 4
MIRP[m&gt;RBl], 30, 87
MIAP[R], 15, 11
SHP[1], 18
MIRP[m&gt;RBl], 23, 87
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="three">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 25, 5
SHP[1], 23
MIRP[m&gt;RBl], 20, 103
SHP[2], 22
MIAP[R], 39, 13
SHP[1], 0
MIRP[m&gt;RBl], 4, 103
SHP[2], 1
SRP1[], 25
IP[], 13
MDAP[R], 13
DLTP2[(13 @13 -8)(13 @15 -8)]
DLTP3[(13 @12 -8)]
SDB[], 71
DLTP1[(13 @0 -8)(13 @1 -8)]
MIRP[m&gt;RBl], 11, 101
IP[], 32
RTHG[]
MDAP[R], 32
SRP1[], 4
IP[], 35
SRP1[], 13
SRP2[], 20
IP[], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="three.dnom">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 24, 129
SHP[1], 21
MIRP[m&gt;RBl], 18, 136
SHP[2], 20
MIAP[R], 36, 130
SHP[1], 0
MIRP[m&gt;RBl], 3, 136
SHP[2], 1
SRP1[], 24
IP[], 11
MDAP[R], 11
DLTP1[(11 @14 -8)]
DLTP2[(11 @13 -8)(11 @14 -8)(11 @15 -8)]
SDB[], 70
DLTP1[(11 @0 -8)(11 @1 -8)(11 @2 -8)]
MIRP[m&gt;RBl], 9, 137
IP[], 30
RTHG[]
MDAP[R], 30
SRP1[], 3
IP[], 33
SRP1[], 11
SRP2[], 18
IP[], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="three.numr">
/* Composite glyph autohinted */

OFFSET[R], 44, 0, 304

SVTCA[Y]
MIAP[R],24,131
SHC[1],0

    </glyphProgram>

    <glyphProgram name="threeinferior">
/* Composite glyph autohinted */

OFFSET[R], 44, 0, -100

    </glyphProgram>

    <glyphProgram name="threequarters">
/* Composite glyph autohinted */

OFFSET[R], 81, 389, 0
OFFSET[R], 45, 548, 0
OFFSET[R], 44, 0, 304

SVTCA[Y]
MIAP[R],42,131
SHC[1],3

    </glyphProgram>

    <glyphProgram name="threesuperior">
/* Composite glyph autohinted */

OFFSET[R], 44, 0, 404

    </glyphProgram>

    <glyphProgram name="tilde">
/* Composite glyph autohinted */

OFFSET[R], 362, 304, 0

    </glyphProgram>

    <glyphProgram name="tildecomb">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 4, 147
MDRP[m&lt;RGr], 11
MIRP[m&gt;RBl], 21, 150
MDRP[M&gt;RGr], 9
MIRP[M&gt;RBl], 15, 150
MDRP[m&lt;RWh], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tildecomb.cap">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 4, 154
MDRP[m&lt;RGr], 13
MIRP[m&gt;RBl], 23, 150
MDRP[M&gt;RGr], 10
MIRP[M&gt;RBl], 17, 150
MDRP[m&lt;RGr], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tildecomb.narrow">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 4, 147
MDRP[m&lt;RGr], 11
MIRP[m&gt;RBl], 21, 150
MDRP[M&gt;RGr], 9
MIRP[M&gt;RBl], 15, 150
MDRP[m&lt;RWh], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="trademark">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 4, 128
MDRP[m&lt;RGr], 16
MIRP[M&gt;RBl], 2, 134
MDRP[m&lt;RGr], 7
SRP0[], 4
MDRP[m&lt;RGr], 13
SRP2[], 21
IP[], 0
MDAP[R], 0
MDRP[m&lt;RGr], 12
MDRP[m&lt;RGr], 18
MDRP[m&lt;RGr], 8
SRP1[], 13
IP[], 10
IP[], 15
SRP1[], 10
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="triangledown">
/* VTT 6.01C compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 0
MDRP[m&lt;RGr], 3
SHP[2], 4
SRP2[], 6
IP[], 5
MDAP[R], 5
SRP2[], 3
IP[], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="triangleleft">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 10
MIAP[R], 3, 6
SRP2[], 1
IP[], 2
SRP1[], 2
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="triangleright">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MIAP[R], 4, 6
IP[], 2
SRP1[], 2
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="triangleup">
/* VTT 6.01C compiler */
SVTCA[Y]
MDAP[R], 2
SRP2[], 6
IP[], 0
MDAP[R], 0
SHP[1], 1
MDRP[m&lt;RGr], 4
SHP[2], 3
SRP1[], 2
IP[], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tse">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 2, 6
MIAP[R], 5, 6
MIAP[R], 10, 165
MIAP[R], 11, 10
MIRP[M&gt;RBl], 7, 85
MDRP[m&lt;RGr], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tse.loclBGR">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 165
MIAP[R], 1, 10
MIRP[m&gt;RBl], 24, 87
MIAP[R], 6, 11
SHP[1], 3
MIRP[m&gt;RBl], 15, 87
MIAP[R], 11, 6
MIAP[R], 19, 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tshe">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 5, 0
MIAP[R], 14, 6
DLTP1[(14 @4 -8)]
SHP[1], 11
MIRP[m&gt;RBl], 23, 87
SRP2[], 5
IP[], 1
MDAP[R], 1
MDRP[m&lt;RGr], 10
MIRP[M&gt;RBl], 4, 102
MDRP[m&lt;RGr], 7
MIAP[R], 19, 10
MIAP[R], 27, 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="two">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 12
MIRP[m&gt;RBl], 25, 101
SHP[2], 2
MIAP[R], 16, 5
SHP[1], 14
IP[], 3
MIRP[m&gt;RBl], 10, 103
SHP[2], 13
SRP1[], 25
IP[], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="two.dnom">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 127
MIRP[m&gt;RBl], 23, 134
SHP[2], 2
MIAP[R], 16, 129
SHP[1], 13
IP[], 3
MIRP[m&gt;RBl], 9, 136
SHP[2], 12
SRP1[], 23
IP[], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="two.numr">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 43, 0, 304

    </glyphProgram>

    <glyphProgram name="twoinferior">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 43, 0, -100

    </glyphProgram>

    <glyphProgram name="twosuperior">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 43, 0, 404

    </glyphProgram>

    <glyphProgram name="u">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MIAP[R], 5, 11
SHP[1], 2
MIRP[m&gt;RBl], 14, 87
MIAP[R], 9, 6
MDRP[m&lt;RGr], 18
SRP2[], 14
IP[], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 216, 0, 0
OFFSET[R], 300, 286, 0
CALL[],1,9,21,79
CALL[],45,22,20,7,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="ubrevecyr">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 220, 0, 0
OFFSET[R], 709, 280, 0
CALL[],1,0,16,79
CALL[],2,19,27,13,1,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="ucircumflex">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 216, 0, 0
OFFSET[R], 358, 286, 0
CALL[],1,9,20,79
CALL[],-8,24,20,7,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="ucyr">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 220, 0, 0

    </glyphProgram>

    <glyphProgram name="udieresis">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 216, 0, 0
OFFSET[R], 425, 286, 0
CALL[],1,9,20,79
CALL[],2,9,32,79
CALL[],-7,34,28,7,0,80
SHC[2],1
SHC[2],2

    </glyphProgram>

    <glyphProgram name="udotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 216, 0, 0
OFFSET[R], 473, 286, 0
/* No vertical hints due to overlapping parts */
CALL[],-7,22,28,7,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="ugrave">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 216, 0, 0
OFFSET[R], 340, 286, 0
CALL[],1,9,20,79
CALL[],-60,21,23,7,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="uhookabove">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 216, 0, 0
OFFSET[R], 475, 286, 0
CALL[],1,9,20,79
CALL[],-5,28,32,7,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="uhorn">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 4, 11
MIRP[m&gt;RBl], 13, 87
MIAP[R], 9, 6
MIAP[R], 17, 6
MIRP[m&gt;RBl], 27, 85
MIAP[R], 22, 121
MIAP[R], 28, 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uhornacute">
/* Composite glyph autohinted */
/* By DMOTE */

OFFSET[R], 577, 0, 0
OFFSET[R], 300, 286, 0
/* No vertical hints due to overlapping parts */
CALL[],1,9,31,79
CALL[],-27,31,29,6,23,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="uhorndotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

OFFSET[R], 577, 0, 0
OFFSET[R], 473, 286, 0
/* No vertical hints due to overlapping parts */
CALL[],-80,31,37,6,23,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="uhorngrave">
/* Composite glyph autohinted */
/* By DMOTE */

OFFSET[R], 577, 0, 0
OFFSET[R], 340, 286, 0
/* No vertical hints due to overlapping parts */
CALL[],1,9,29,79
CALL[],-133,30,32,6,23,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="uhornhookabove">
/* Composite glyph autohinted */
/* By DMOTE */

OFFSET[R], 577, 0, 0
OFFSET[R], 475, 286, 0
/* No vertical hints due to overlapping parts */
CALL[],1,9,29,79
CALL[],-77,37,41,6,23,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="uhorntilde">
/* Composite glyph autohinted */
/* By DMOTE */

OFFSET[R], 577, 0, 0
OFFSET[R], 362, 286, 0
/* No vertical hints due to overlapping parts */
CALL[],1,9,33,79
CALL[],-80,41,30,6,23,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="uhungarumlaut">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 216, 0, 0
OFFSET[R], 305, 286, 0
CALL[],1,9,21,79
CALL[],2,9,25,79
CALL[],59,22,24,7,0,80
SHC[2],1
SHC[2],2

    </glyphProgram>

    <glyphProgram name="umacron">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 216, 0, 0
OFFSET[R], 395, 286, 0
CALL[],1,9,20,79
CALL[],-7,21,20,7,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="underscore">
/* VTT 6.01C compiler */
SVTCA[Y]
SRP0[], 4
MDRP[M&gt;RWh], 2
MIRP[m&gt;RBl], 0, 115
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uogonek">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 216, 0, 0
OFFSET[R], 269, 404, 0
/* No vertical hints due to overlapping parts */
CALL[],135,26,20,7,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="uring">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 216, 0, 0
OFFSET[R], 466, 286, 0
/* No vertical hints due to negative contours in the composite parts */
CALL[],-7,25,20,7,0,80
SHC[2],1
SHC[2],2

    </glyphProgram>

    <glyphProgram name="utilde">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 216, 0, 0
OFFSET[R], 362, 286, 0
CALL[],1,9,23,79
CALL[],-7,32,21,7,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="v">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MIAP[R], 2, 6
MDRP[m&lt;RGr], 5
SRP2[], 0
IP[], 4
RDTG[]
MDAP[R], 4
CALL[], 4, 32, 55, 58, 72
DLTP3[(4 @0 4)(4 @1 4)]
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ve">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MIRP[m&gt;RBl], 25, 85
MIAP[R], 1, 6
MIRP[m&gt;RBl], 16, 85
SRP1[], 0
IP[], 24
MDAP[R], 24
DLTP3[(24 @8 -8)(24 @12 -8)]
MIRP[m&gt;RBl], 17, 86
IP[], 7
RTDG[]
MDAP[R], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ve.loclBGR">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 11
MIRP[m&gt;RBl], 33, 87
MIAP[R], 8, 1
MIRP[m&gt;RBl], 22, 87
SRP1[], 0
IP[], 40
MDAP[R], 40
MIRP[m&gt;RBl], 26, 85
IP[], 15
RTDG[]
MDAP[R], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="w">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MDRP[m&lt;RGr], 3
MIAP[R], 5, 6
MDRP[m&lt;RGr], 11
MDRP[m&lt;RGr], 8
SRP1[], 0
IP[], 2
IP[], 10
RDTG[]
MDAP[R], 10
RUTG[]
MDAP[R], 2
SRP1[], 10
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="wacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 218, 0, 0
OFFSET[R], 300, 392, 0
CALL[],1,5,14,79
CALL[],53,15,13,5,12,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="wcircumflex">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 218, 0, 0
OFFSET[R], 358, 392, 0
CALL[],1,5,13,79
CALL[],0,17,13,5,12,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="wdieresis">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 218, 0, 0
OFFSET[R], 425, 392, 0
CALL[],1,5,13,79
CALL[],2,5,25,79
CALL[],1,27,21,5,12,80
SHC[2],1
SHC[2],2

    </glyphProgram>

    <glyphProgram name="wgrave">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 218, 0, 0
OFFSET[R], 340, 392, 0
CALL[],1,5,13,79
CALL[],-52,14,16,5,12,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="x">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MDRP[m&lt;RGr], 10
MIAP[R], 3, 6
MDRP[m&lt;RGr], 6
SRP2[], 0
IP[], 2
RTHG[]
MDAP[R], 2
SRP2[], 3
IP[], 5
SRP2[], 0
IP[], 11
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="y">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 5, 14
MIRP[m&gt;RBl], 7, 85
MIAP[R], 12, 10
IP[], 2
MIAP[R], 13, 6
MDRP[m&lt;RGr], 0
SRP2[], 12
IP[], 15
RDTG[]
MDAP[R], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ya">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 9, 6
MIRP[m&gt;RBl], 17, 85
MIAP[R], 11, 10
IP[], 13
MDAP[R], 13
SHP[1], 1
MIRP[m&gt;RBl], 16, 85
MIAP[R], 14, 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="yacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 220, 0, 0
OFFSET[R], 300, 280, 0
CALL[],1,0,17,79
CALL[],55,18,16,13,1,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="yat">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MIRP[m&gt;RBl], 22, 85
MIAP[R], 4, 6
MDRP[m&lt;RGr], 7
MIRP[M&gt;RBl], 1, 102
MDRP[m&lt;RGr], 10
SRP1[], 4
SRP2[], 0
IP[], 11
MDAP[R], 11
MIRP[m&gt;RBl], 21, 85
MIAP[R], 5, 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ycircumflex">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 220, 0, 0
OFFSET[R], 358, 280, 0
CALL[],1,0,16,79
CALL[],1,20,16,13,1,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="ydieresis">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 220, 0, 0
OFFSET[R], 425, 280, 0
CALL[],1,0,16,79
CALL[],2,0,28,79
CALL[],2,30,24,13,1,80
SHC[2],1
SHC[2],2

    </glyphProgram>

    <glyphProgram name="ydotbelow">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 220, 0, 0
OFFSET[R], 473, 425, 0
/* No vertical hints due to overlapping parts */
CALL[],147,18,24,13,1,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="yen">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 12
MIAP[R], 10, 4
MDRP[m&lt;RGr], 13
SRP2[], 0
IP[], 12
RDTG[]
MDAP[R], 12
DLTP1[(12 @1 8)]
RTG[]
MDRP[M&lt;RBl], 9
MDRP[m&lt;RGr], 15
MIRP[M&gt;RBl], 6, 102
MDRP[m&lt;RGr], 18
MDRP[M&gt;RWh], 2
SDB[], 8
DLTP1[(2 @0 8)(2 @1 8)(2 @8 8)(2 @9 8)]
MDRP[m&lt;RGr], 22
MIRP[M&gt;RBl], 19, 102
MDRP[m&lt;RGr], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="yeru">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MIRP[m&gt;RBl], 18, 85
MIAP[R], 2, 6
SRP2[], 0
IP[], 17
MDAP[R], 17
MIRP[m&gt;RBl], 3, 85
MIAP[R], 12, 10
MIAP[R], 13, 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ygrave">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 220, 0, 0
OFFSET[R], 340, 280, 0
CALL[],1,0,16,79
CALL[],-51,17,19,13,1,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="yhookabove">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 220, 0, 0
OFFSET[R], 475, 280, 0
CALL[],1,0,16,79
CALL[],4,24,28,13,1,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="yi">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 235, 0, 0
OFFSET[R], 427, 129, 0
CALL[],1,2,4,79
CALL[],2,2,16,79
CALL[],0,18,12,1,0,80
SHC[2],1
SHC[2],2

    </glyphProgram>

    <glyphProgram name="ytilde">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 220, 0, 0
OFFSET[R], 362, 280, 0
CALL[],1,0,19,79
CALL[],2,28,17,13,1,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="yu">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 6
MIAP[R], 7, 7
MIRP[m&gt;RBl], 28, 87
MIAP[R], 15, 11
MIRP[m&gt;RBl], 22, 87
MIAP[R], 21, 10
SRP2[], 1
IP[], 20
MDAP[R], 20
DLTP2[(20 @4 -8)(20 @5 -8)]
MIRP[m&gt;RBl], 4, 85
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="yu.loclBGR">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 1, 0
MIAP[R], 7, 7
MIRP[m&gt;RBl], 28, 87
MIAP[R], 15, 11
MIRP[m&gt;RBl], 22, 87
MIAP[R], 21, 10
SRP2[], 7
IP[], 20
MDAP[R], 20
DLTP1[(20 @6 8)(20 @7 8)]
MIRP[m&gt;RBl], 4, 85
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="z">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 10
MIRP[m&gt;RBl], 8, 85
SHP[2], 2
MIAP[R], 5, 6
MIRP[m&gt;RBl], 3, 85
SHP[2], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zacute">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 221, 0, 0
OFFSET[R], 300, 241, 0
CALL[],1,5,11,79
CALL[],52,12,10,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="zcaron">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 221, 0, 0
OFFSET[R], 390, 241, 0
CALL[],1,5,15,79
CALL[],-1,10,14,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="zdotaccent">
/* Composite glyph autohinted */
/* By DMOTE */

USEMYMETRICS[]
OFFSET[R], 221, 0, 0
OFFSET[R], 450, 241, 0
CALL[],1,5,10,79
CALL[],0,12,18,1,0,80
SHC[2],1

    </glyphProgram>

    <glyphProgram name="ze">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 2
MIRP[m&gt;RBl], 5, 87
SHP[2], 3
MIAP[R], 24, 7
SHP[1], 22
MIRP[m&gt;RBl], 19, 87
SHP[2], 21
SRP1[], 0
IP[], 11
MDAP[R], 11
DLTP3[(11 @14 -8)]
MIRP[m&gt;RBl], 12, 85
IP[], 30
RTDG[]
MDAP[R], 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ze.loclBGR">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 14
SHP[2], 2
MIRP[m&gt;RBl], 5, 87
SHP[2], 3
MIAP[R], 25, 7
SHP[1], 23
MIRP[m&gt;RBl], 20, 87
SHP[2], 22
SRP1[], 0
IP[], 12
MDAP[R], 12
MIRP[m&gt;RBl], 13, 85
IP[], 32
RTDG[]
MDAP[R], 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zero">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 13
MIRP[m&gt;RBl], 12, 103
MIAP[R], 6, 5
MIRP[m&gt;RBl], 18, 103
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zero.dnom">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 130
MIRP[m&gt;RBl], 12, 136
MIAP[R], 6, 129
MIRP[m&gt;RBl], 17, 136
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zero.numr">
/* Composite glyph autohinted */

OFFSET[R], 41, 0, 304

SVTCA[Y]
MIAP[R],6,131
SHC[1],0
SHC[1],1

    </glyphProgram>

    <glyphProgram name="zero.percent">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 0, 130
MIRP[m&gt;RBl], 16, 138
MDRP[M&gt;RGr], 8
MIRP[m&gt;RBl], 22, 138
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zeroinferior">
/* Composite glyph autohinted */

OFFSET[R], 41, 0, -100

    </glyphProgram>

    <glyphProgram name="zerosuperior">
/* Composite glyph autohinted */

OFFSET[R], 41, 0, 404

    </glyphProgram>

    <glyphProgram name="zerowidthnbspace">
/* VTT 6.01C compiler */

    </glyphProgram>

    <glyphProgram name="zerowidthspace">
/* VTT 6.01C compiler */

    </glyphProgram>

    <glyphProgram name="zhe">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 3, 6
MIAP[R], 5, 6
MIAP[R], 8, 6
MIAP[R], 12, 10
MIAP[R], 15, 10
SRP2[], 5
SLOOP[], 6
IP[], 4, 7, 10, 1, 13, 16
MIAP[R], 17, 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zhe.loclBGR">
/* VTT 6.01C compiler */
SVTCA[Y]
MIAP[R], 3, 6
MIAP[R], 5, 0
MIAP[R], 8, 6
MIAP[R], 12, 10
MIAP[R], 15, 10
SRP2[], 3
SLOOP[], 6
IP[], 4, 7, 10, 1, 13, 16
MIAP[R], 17, 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <extraProgram name="cvt">
/***** 2020-09-29  Hint Test  Michael Cunliffe *****/
/***** 2020-10-01  Hinting L1  Michael Cunliffe *****/
/***** 2021-02-19     Level 1 Cyrillic Hinting    Mark Ward********/

/**GROUP   LATN **/	/** this is a defaul Group LATN	Range:	Heights 0-39; Distances 65-199 **/
/**GROUP   GREK **/	/** this is a defaul Group LATN	Range:	Heights 0-39; Distances 65-199 **/
/**GROUP   CYRL **/	/** this is a defaul Group LATN	Range:	Heights 0-39; Distances 65-199 **/

GROUP SUPS " ^41^ ^46^ ^49^ "	 /** a sub Group for LATN	Range:	Heights 0-39; Distances 65-199 **/
GROUP Diacritics /** a sub Group for LATN	Range:	Heights 0-39; Distances 65-199 **/

GROUP   ARMNUpperCase	/**	Range:	400-499 **/
GROUP   ARMNLowerCase             /**	Range:	400-499 **/

GROUP   GEORUpperCase           /*	Range:	500-599 **/
GROUP   GEORLowerCase           /*	Range:	500-599 **/

GROUP   ETHI		/**	Range:	1300-1399 **/
GROUP   ARAB 		 /**	Range:	200-299 **/
GROUP   HEBR 		/**	Range:	300-399 **/
GROUP   DEVA 		/**	Range:	600-699 **/
GROUP   BENG	            	 /**	Range:	700-799 **/
GROUP   SINH	 	/**	Range:	800-899 **/
GROUP   KNDA     	/**	Range:	900-999 **/
GROUP   MLYM 		/**	Range:	1000-1099 **/
GROUP   TAML  		/**	Range:	1100-1199 **/
GROUP   TELU 		/**	Range:	1200-1299 **/
GROUP   THAI		/**	Range:	1400-1499 **/

GROUP   KHMR  		/**	Range:	1500-1599 **/
GROUP   KHMRDiacritics		/**	Range:	1500-1599 **/

/**GROUP   HANS **/	/**	Range:	1600-1699 **/
/**GROUP   HANT  **/	/**	Range:	1700-1799 **/
/**GROUP   HKSCS **/	/**	Range:	1800-1899 **/


InstructionsOn @8..1000
DropOutCtrlOff @144
CvtCutIn = 4, 2.5@29,  0@100

/*
Lets start with the heights: This is GROUP LATN
*/

UpperCase
  Grey
  Y
  SquareHeight
     2:     715 /* replace the 0 with the actual cap height */
     8:     0           /* the base "height" remains 0 */
     163:   -174
  RoundHeight 
     3:     16 ~  2 @50  /* replace the 0 with the actual cap height overshoot */
     9:    -16 ~  8 @50  /* replace the 0 with the base height undershoot */


LowerCase 
  SquareHeight
     0:     720 Delta(1@8..9) /* replace the 0 with flat ascender height */
     6:     497 Delta(1@8..9, 1@11, 1@13, 1@15, 1@17, 1@19, 1@21, 1@23, 1@25, 1@27, 1@29, 1@31, 1@33, 1@35, 1@37, 1@39, 1@41)/*replace the 0 with x-height*/
    10:     0           /* the base "height" remains 0 */
    14:    -194 Delta(-1@18) /* replace the 0 with flat descender */
   165:    -132
    
  RoundHeight
     1:     11 ~  0 @50  /* replace the 0 with round ascender height overshoot */
     7:     16 ~  6 @50  /* replace the 0 with the x-height overshoot */
    11:    -16 ~ 10 @50  /* replace the 0 with baseline overshoot */
    15:    -16 ~ 14 @50  /* replace the 0 with round descender overshoot*/

  Figure
  SquareHeight
     4:     715 /* replace the 0 figure flat height */
    12:     0            /* the base "height" remains 0 */
  RoundHeight
     5:     16 ~  4 @50    /* replace the 0 figure round overshoot */
    13:    -16 ~ 12 @50  /* replace the 0 with baseline overshoot */

  Other
  SquareHeight
    16:     731 /* usually used for Brackets, Braces or Parens height top */
    18:     -129 Delta(-1@19) /*usually used for Brackets, Braces or Parens height bottom, could be negative*/
  RoundHeight
    17:     10 ~ 16@50 /*quotes top*/
    19:     -10 /* usually used for Braces if different from Brackets height bottom */

  SUPS
   SquareHeight
    126: 408 Delta(1@11) /*flat inferior height*/ 
    127: 0 /* flat inferior baseline */
    128: 715 /*fract top*/
   RoundHeight
    129: 8 ~ 126 @54 /* inferior round top */
    130: -8~ 127 @54 /* inferior round baseline */
    131: 8~128 @54 /*fract os*/

Diacritics  
 SquareHeight
   120: 610 Delta(1@8..9,-1@14;16;24,1@27,-1@32,1@35,-1@47;49;55;57;65;67) /*lc dieresis bottom*/
   147: 587 Delta(-1@18;20;30;32;47;49,-1@59;69) /*acute grave base*/
   154: 784 Delta(-1@16;20;23..25;30;34;44,1@50;54,-1@62,1@68)/*flat Cap*/
   155: 799 Delta(-1@16..17;27;30..32;37;41..42,1@50;53..54,-1@62;65..67;72)/*round Cap*/
   156: 818 Delta(-1@13;24;30;34..35;41,1@47,-1@51..52;62..63;72)/*mac Cap*/
   157: 746 Delta(-1@37;41;45,1@50;54;56,-1@72)/*ring Cap*/
   158: 578 Delta(-1@20;22;24;32;34;36;43,-1@50..52;54;56,-1@65;67;69)/*com-abv*/
   159: 614 Delta(-1@14;16,1@17,-1@22;24;32;34;40;45;47;49,1@51..52;54;56,-1@63;71)/*mac*/
   160: 562 Delta(-1@26;28;30;42;49,1@50;52;54;56,-1@67;69;71)/*ring*/
   161: 809 Delta(1@8,-1@13;17..18;27..28;31;34;38..39;49;52;59..60;63..65;70)/*lacute*/

LowerCase
  SquareHeight
   121: 609 = 120@42 Delta(1@48;50;58) /*i, j dot bottom*/


/*
Now we do the weights. We start with the grand parent cvt. Since the attributes
remain in effect for all the following cvts, and since the grand parent cvt does
not belong to a particular group etc., we reset the attributes as follows:
*/

AnyGroup
  AnyColor
  AnyDirection
  AnyCategory
    65: 0 /* replace the 0 with the actual weight of the grand parent cvt */
  X
    66: 97 Delta(1@8..15) /* replace the 0 with weight of parent x distances */
  Y
    67: 83 Delta(-1@18) /* replace the 0 with weight of parent y distances */


UpperCase
  Grey
  X
  ItalicRun
    20: 0
  Y
  ItalicRise
    21: 0

UpperCase
  Black
  X
  StraightStroke
    68: 103 = 66 @ 42
    69: 100 = 66 @ 42
  RoundStroke
    70: 0 = 68 @100
    71: 0
  Y
  StraightStroke
    72: 90 = 67@28 Delta(-1@28;39..40;50..53)
    73: 87 = 72@54
  RoundStroke
    74: 93 = 72 @100
    75: 0
  /***Diag  **** used in Stroke command DaMa doesn't use it any more ***
  StraightStroke
    76: 0 = 68 @ 41
    77: 0  ***/
  White
  X
  SerifExt
    78: 0
    79: 0
  Black
  Y
  SerifHeight
    80: 0


LowerCase
  Grey
  X
  ItalicRun
    22: 0
  Y
  ItalicRise
    23: 0
  Black
  X
  StraightStroke
    81: 100 = 66 @ 42
    82: 0
  RoundStroke
    83: 0 = 81 @100
    84: 0

  Y
  StraightStroke
    85: 83 = 67@28 Delta(1@29..30;41..42)
    86: 72 = 85@35
  RoundStroke
    87: 86 = 85@100
    88: 0

  /*****Diag
  StraightStroke
    89: 0 = 81 @ 41
    90: 0****************/

  White
  X
  SerifExt
    91: 0
    92: 0
  Black
  Y
  SerifHeight
    93: 0
  X
  Distance
    94: 0
  Y
    95: 0
  White
    96: 0

/*
Same pattern for the Figures...
*/

Figure
  Grey
  X
  ItalicRun
    24: 0
  Y
  ItalicRise
    25: 0
  Black
  X
  StraightStroke
    97: 0 = 66 @ 27
    98: 0
  RoundStroke
    99: 0 = 97 @ 100
    100: 0
  Y
  StraightStroke
    101: 86 = 67@28 Delta(-1@53)
    102: 77 Delta(1@19;32) /*currency strike #*/
    148: 82 = 85@55
  RoundStroke
    103: 86 = 101@100
    104: 0
  /***Diag
  StraightStroke
    105: 0 = 97 @ 41
    106: 0 */
  White
  X
  SerifExt
    107: 0
    108: 0
  Black
  Y
  SerifHeight
    109: 0


SUPS
X
Black
StraightStroke
132: 0 = 66@27
RoundStroke
133: 0 = 132@100

Y
StraightStroke
134: 67
135: 220 Delta(-1@8..9)/*®*/
153: 39  /*®*/
RoundStroke
136: 67 = 134@100
137: 62 /*8*/ 
138: 75 /*% °*/ 
152: 58 /*®*/ 

/*
...and all the other glyphs.
*/
Other
  X
  StraightStroke
    110: 0 = 66 @ 27
    111: 0
  RoundStroke
    112: 0 = 110 @ 100
    113: 0
  Y
  StraightStroke
    114: 88 = 101@53  /*rules*/
    115: 81 = 85@41 /*brack brace*/
  RoundStroke
    116: 87 = 114@100
    117: 138 Delta(-1@11;48,1@54;61;68) /*period*/
 Grey
    149: 715 Delta(2@50..100)
 Black
    150: 74 = 67@21 Delta(1@33)/*@*/
    151: 71 Delta(1@21;35;49) /*©*/
  /**Diag
  StraightStroke
    118: 0 = 110 @ 41
    119: 0**/


Diacritics 
X
  StraightStroke
   139: 0
   140: 0
  RoundStroke
   141: 0
   142: 0
   122: 0/* dieresis dot */
LowerCase
X
   123: 0 = 122 @50 /* i, j dot */


Diacritics 
Y
  StraightStroke
   143: 75 Delta(1@19)/*mac*/ 
   144: 0 /**/
   RoundStroke
   145: 64 /*ced*/
   146: 108 /*com*/
   124: 127 /*dieresis dots*/
   162: 71 Delta(1@19..21;35;49)/*breve*/

LowerCase
Y
   125: 129 = 124@42 /*i, j dot*/

/************************** End of GROUP LATN Range Heights 0-39; Distances 65-199              used 0-125 ************/


/******************************************************************************************************************************/
/******************* NON - LATIN GROUPS ARE BELOW HERE ***********************************************************/
/******************************************************************************************************************************/

/***************************************************   commented out Non Latin section ******************************************************

/***************** GROUP ARAB  Range:200-299******************************/
ARAB
  Grey
  Y
  SquareHeight
   200: 0 /* arabic baseline */
   201: 0 /* middle tooth of 0xFEB3 aSin.init */
   202: 0 /* high intial tooth of 0xFEB3 aSin.init */
   203: 0 = 201 @50  /* left most tooth of 0xFEB3 aSin.init */

   205: 0  /* 0xfe8d alef top  */
   206: 0  /* 0xfea1 top  */
   207: 0  /* 0xfeaf top  */
   208: 0  /* 0xfea9 top  */
   209: 0  /* 0xfeb9 top  */
   210: 0   /* 0xfec9 top  */
   211: 0  /* 0xfed7 top  */
   212: 0  /* 0x066f top  */
   213: 0  /* 0xfeed top  */
   214: 0 
   215: 0

  /* descenders */
   216: -0 /* 0xfeb1 descender */
   217: -0   /* 0xfea1 descender */
   218: -0  /* 0xfeaf descender */
   219: -0  /* 0xfec9 descender */
   220: -0 /* 0xfedd descender */

/* ARAB figures */

  235: 0 /* ARAB figure flat height */
 
 RoundHeight
   204: -0 ~ 200 @50 /* ARAB baseline overshoot */
   236: 0 ~ 235 @50 /* ARAB figure top overshoot */
   237: -0 ~ 200 @50 /* ARAB figure baseline overshoot */

   221: 0 /* top diacritics */
   222:  0 /* top diacritics */
   223: -0 /* bottom diacritics */
   224: -0 /* bottom diacritics */

Black
X
  StraightStroke
    225: 0 = 66 @ 27
    226: 0
  RoundStroke
    227: 0 = 225 @ 100
    228: 0
  Y
  StraightStroke
    229: 0 = 67 @ 41
    230: 0
  RoundStroke
    231: 0 = 229 @ 100
    232: 0
  /****Diag
  StraightStroke
    233: 0 = 225 @ 41
    234: 0*/

/************** End of GROUP ARAB  Range:200-299    USED CVTS 200 - 234 ****************************************/


/*****************GROUP   HEBR  Range:300-399   **************************/

HEBR
  Grey
  Y
SquareHeight
300: 0 /* HEBR top flat height */
301: 0 /* HEBR baseline */
304: 0 /*HEBR ascender */
305: -0 /*HEBR descender */
 
RoundHeight
302: 0 ~ 300 @50 /* HEBR top overshoot */
303: -0 ~ 301 @50 /* HEBR baseline overshoot */ 

Black
X
  StraightStroke
    306: 0 = 66 @ 27
    307: 0
  RoundStroke
    308: 0 = 306 @ 100
    309: 0
  Y
  StraightStroke
    310: 0 = 67 @ 41
    311: 0
  RoundStroke
    312: 0 = 310 @ 100
    313: 0

/*****************End of the GROUP   HEBR  Range:300-399     USED CVTs 300 - 313 **************************/

/*****************GROUP   ARMN  Range:400-499**************************/

ARMNUpperCase
  Grey
  Y
  SquareHeight
     400:     0           /* replace the 0 with the actual cap height */
     401:     0           /* the base "height" remains 0 */
  RoundHeight
     402:     0 ~  2 @50  /* replace the 0 with the actual cap height overshoot */
     403:    -0 ~  8 @50  /* replace the 0 with the base height undershoot */


ARMNLowerCase
  SquareHeight
    404:     0           /* replace the 0 with flat ascender height */
    405:     0           /* replace the 0 with x-height */
    406:     0           /* the base "height" remains 0 */
    407:    -0           /* replace the 0 with flat descender */
    
  RoundHeight
    408:     0 ~  0 @50  /* replace the 0 with round ascender height overshoot */
    409:     0 ~  6 @50  /* replace the 0 with the x-height overshoot */
    410:    -0 ~ 10 @50  /* replace the 0 with baseline overshoot */
    411:    -0 ~ 14 @50  /* replace the 0 with round descender overshoot*/


ARMNUpperCase
  Black
  X
  StraightStroke
    412: 0 = 66 @27
    413: 0
  RoundStroke
    414: 0 = 68 @100
    415: 0
  Y
  StraightStroke
    416: 0 = 67 @ 41
    417: 0
  RoundStroke
    418: 0 = 72 @100
    419: 0

ARMNLowerCase
  Black
  X
  StraightStroke
    420: 0 = 66 @ 27
    421: 0
  RoundStroke
    422: 0 = 81 @100
    423: 0

  Y
  StraightStroke
    424: 0 = 67 @ 41
    425: 0
  RoundStroke
    426: 0 = 85 @ 100
    427: 0

/*****************End of GROUP   ARMN  Range:400-499 USED 400-427 **************************/

/*****************GROUP   ARMN  Range:500-599  **************************/

GEORUpperCase
  Grey
  Y
  SquareHeight
     500:     0           /* replace the 0 with the actual cap height */
     501:     0           /* the base "height" remains 0 */
  RoundHeight
     502:     0 ~  2 @50  /* replace the 0 with the actual cap height overshoot */
     503:    -0 ~  8 @50  /* replace the 0 with the base height undershoot */


GEORLowerCase
  SquareHeight
    504:     0           /* replace the 0 with flat ascender height */
    505:     0           /* replace the 0 with x-height */
    506:     0           /* the base "height" remains 0 */
    507:    -0           /* replace the 0 with flat descender */
    
  RoundHeight
    508:     0 ~  0 @50  /* replace the 0 with round ascender height overshoot */
    509:     0 ~  6 @50  /* replace the 0 with the x-height overshoot */
    510:    -0 ~ 10 @50  /* replace the 0 with baseline overshoot */
    511:    -0 ~ 14 @50  /* replace the 0 with round descender overshoot*/


GEORUpperCase
  Black
  X
  StraightStroke
    512: 0 = 66 @27
    513: 0
  RoundStroke
    514: 0 = 68 @100
    515: 0
  Y
  StraightStroke
    516: 0 = 67 @ 41
    517: 0
  RoundStroke
    518: 0 = 72 @100
    519: 0

GEORLowerCase
  Black
  X
  StraightStroke
    520: 0 = 66 @ 27
    521: 0
  RoundStroke
    522: 0 = 81 @100
    523: 0

  Y
  StraightStroke
    524: 0 = 67 @ 41
    525: 0
  RoundStroke
    526: 0 = 85 @ 100
    527: 0

/*****************End of GROUP   GEOR  Range:500-599 USED 500-527 **************************/

/****************** GROUP ETHI Range 	Range:	1300-1399 **********************************/

ETHI
  Grey
  Y
  SquareHeight
    1300:  0 /* top height flat */
    1301:  0 /* baseline */
  RoundHeight
    1302:  0 = 1300 @50 /* top height round */
    1303:  -0 = 1301 @ 42 /* replace the -0 with the base height undershoot */

 Black
 X
 StraightStroke
   1304: 0 = 68 @ 100
    1305: 0
 RoundStroke
   1306: 0 = 68 @ 100
    1307: 0
 Y
 StraightStroke
    1308: 0
    1309: 0 
 RoundStroke
    1310: 0
    1311: 0

X
RoundStroke
   1312: 0  /* 0x135f..0x1368 dot */
Y
RoundStroke
   1313: 0   /* 0x135f..0x1368 dot */


/****************** End of GROUP ETHI Range:1300-1399  used 1300..1313 **********************************/

/****************** GROUP DEVA  Range:600-699  **********************************/

DEVA
   SquareHeight

/* above the baseline */
   600: 0 /* x height*/
    601: 0 /* baseline*/
    602: 0
    603: 0
    604: 0
    605: 0

 /* below the baseline */
    606: -0
    607: -0
    608: -0
    609: -0
    610: -0
    611: -0
    612: -0
    613: -0
    614: -0
    615: -0
    616: -0
    617: -0

/* round values above or below */ 
    RoundHeight
    618: 0 ~  600 @50 /* x-height overshoot */
    619: 0 ~  601 @50  /* replace the 0 with the base height undershoot */
    620: -0
    621: -0 
    622: -0
    623: -0
    624:  0

/****************** end of GROUP DEVA  Range:600-699   used 600-624 **********************************/

/****************** GROUP BENG  Range:700-799  **********************************/

BENG
  Grey
  Y
 SquareHeight
     700:     0
     701:     0  /* bengali base*/
     702: 0 /* above headline single strokes  */
     703: 0 /* long base S stroke */
     704: 0 /* above headline single strokes l*/

  RoundHeight
     705:     0 ~  700 @50  
     706:    -0 ~  701 @50  /* round undershoot */

     707:    0 /*vowel i top */
     708:   -0   /*vowels - below base bottoms*/
     709:    0 /*bengali numeral top*/
     710:   -0   /*vowels - below base bottoms*/
     711:    0

BENG
  Black
  X
  StraightStroke
    712: 0 = 81 @41
    713: 0 = 81 @41
  RoundStroke
    714: 0 = 81 @41
    715: 0  /*use for marks only*/
    716: 0 /* minor X round stroke, free from Delta, */

    717: 0 Delta (-1@17) /* huge circle-ball */
    718: 0 
 
  Y
  StraightStroke
    719: 72 = 85 @ 49
    720: 69 = 85 @ 49
   
  RoundStroke
    721: 0 = 85 @49
    722: 0 /*use for marks only*/
    723: 0 /* minor Y round stroke, free from Delta */
    724: 0  /*nukta dot*/

/****************** End of GROUP BENG  Range:700-799  Used 700-724 **********************************/


/***********************  GROUP   SINH  Range:800-899 ***************************************/

SINH  
  Grey
  Y
  SquareHeight
     800:     0  /*top of glyph 0x0d9c */
     801:     0           /* the baseline "height" remains 0 */
     802:     0  /*top of glyph 0x0d9e */
     803:     -0  /*bottom of glyph 0xd8b*/

     804: 	 -0 /* glyph 'sGDhU' */
     805:	0 /* glyph 'sRCa' */
     806:	0 ~800 @50 /* glyph 0x0DAF */
     807:	0 /* glyph 'sKh' */
     808:	0 /* glyph 'sGI' */
     809:	-0 /* glyph 'sKRa' */

    RoundHeight 
     810:   -0 ~801 @50 /* glyph 'sGDhU' */
     811:	-0 = 804 @50  /* glyph 0x0DA4 */

Black
  X
  StraightStroke
    812:  0 =81@85
    813:  0 = 65@41 
    814:  0  /* stem glyph 0x0DCA */
  RoundStroke
    815: 0 = 81@85
    816: 0 = 81@46
    817: 0 = 65@41
    818: 0  /* top X of glyph 643 */

  Y
  StraightStroke
    819: 0 =85@100
    820: 0
  RoundStroke
    821: 0 = 85 @100
    822: 0 = 85 @50
    823: 0 = 85 @50
/***********************  End of GROUP   SINH  Range:800-899  used 800-823 ***************************************/


/********************** GROUP  KNDA  Range 900-999 **************************/

KNDA
 Grey
 Y
  SquareHeight
   900: 0 /* main flat height ie: glyph 'knArka' */
   901: 0    /* baseline */

   902: -0 /* flat bottom of subscripts  'knKa.sub..knKa.subSsa.sub'*/

  RoundHeight
   903: 604 = 900 @50 /* main overshoot ie: glyph 0x0C85 */

   904: -0 ~ 901 @50 /* baseline overshoot '0xknKa.sub..knKa.subSsa.sub'*/
   905: -0 = 902 @50  /* round bottom of subscripts 'knKa.sub..knKa.subSsa.sub'*/

 Black
 X
  StraightStroke
    906: 82 = 66 @ 27 /* major X straight distance */
    907: 68  /* subscripts  'knKa.sub..knKa.subSsa.sub'*/

  RoundStroke
    908: 82 = 66 @ 27 /* major X round distance */

    909: 68 /* subscripts  'knKa.sub..knKa.subSsa.sub'*/

Y
  StraightStroke
    910: 77 = 67@41
    911: 0 ~ 909@23  /* subscripts  'knKa.sub..knKa.subSsa.sub' */

  RoundStroke
    912: 0 ~ 908 @50
    913: 0 ~ 909 @50  /* subscripts  'knKa.sub..knKa.subSsa.sub' */

/********************** End of GROUP  KNDA  Range 900-999   used 900-913 **************************/

/*********************** GROUP MLYM  Range 1000-1099 ******************************************/

MLYM
 Grey
 Y
 SquareHeight
  1000: 0 /* 0xd7b */
  1001:  0    /*main flat height  */
  1002: 0 /* 0xd1b */
  1003: 0 /* glyph 'mBBa' */
  1004:  0 /* baseline */
  1005:  -175 /* descender 0xd07 */
  1006:  -205 /* desender  0xd06 */
  1007: -260 /* descender 0xd0e*/
  1008: -285 

 RoundHeight
   1009:   13 ~ 1001 @50  /*main flat height  */
   1010: -13 ~ 1004 @50
   1011:  -13 ~ 1003 @50 /* glyph 'mBBa' */
   1012: -8 /* descender 0xd0b */
   1013: -10~ 1008 @50 

X
  StraightStroke
    1014: 0 = 66 @ 27
    1015: 0  /* glyph 'mLla.alt' and glyph 'mLa.Below' */
  RoundStroke
    1016: 0 = 1014 @ 100
    1017:  0  /* glyph 'mLla.alt' and glyph 'mLa.Below' */
  Y
  StraightStroke
    1018: 0 = 67 @ 41
    1019: 0  /*glyph 'mLla.alt' and glyph 'mLa.Below'  */
  RoundStroke
    1020: 0 = 1018 @ 100
    1021: 0 = 1018 @ 100

/*********************** End of GROUP MLYM  Range 1000-1099  used 1000-1021 ******************************************/

/****************************************** GROUP TAML Range 1100-1199 **************************************************/
TAML
  Grey
  Y
  SquareHeight
    1100: 0 /* common square height as latin x-height */
    1101: 0 /* common square baseline */
    1102: -0
    1103: -0
    1104: -0
    1105: -0
    1106: -0
    1107: 0
  RoundHeight
    1108: 0 ~ 1100 @50 /* nominal overshoot */
    1109: -0 ~ 1101 @50 /* baseline undershoot */
    1110: 0 /* hi rounds */
    1111: 0 
    1112: -0
    1113: -0
    1114: -0
    1115: -0 /*lo rounds */
    1116: 0 /* punct base above */
    1117: 0 /* punct top */

  Black
  X
  StraightStroke
    1118: 0 = 81@41  Delta (1@41..44)
    1119: 0 
  RoundStroke
    1120: 0 = 83@101
    1121: 0 
    1122: 0 /* smalll ring */
    1123: 0 /* large ring */
    1124: 0 /* spot */
    
  Y
  StraightStroke
    1125: 0 = 85 @50
    1126: 0 
  RoundStroke
    1127: 0 = 87@101
    1128: 0 
    1129: 0 /* small ring */
    1130: 0 /* large ring */
    1131: 0 /* spot */

/****************************************** End of GROUP TAML Range 1100-1199 used 1100-1131  **************************************************/

/****************************************** GROUP TELU Range 1200-1299  **************************************************/


TELU 
 Grey
 Y
 SquareHeight
  1200: 0 /* glyph uni0C280C4A*/
  1201: 0
  1202: 0 
  1203: 0 /* glyph uni0C15.half*/
  1204: 0 /*************** flat height of 0x0c39 **************/
  1205: 0 
  1206: -0
  1207: -0
  1208: -0 /* _C56short */
  1209: 0 /* zero baseline */ 
  1210: 0 
  1211: -0
  1212: -0
  1213: 0 
  1214: 0
  1215: 0
  1216:  0
  1217: -0 /* deeply below baseline accents */

RoundHeight
  1218: 15 ~ 1204 @50
  1219: -15 ~ 1209 @50

TELU 
 Black
 X
   StraightStroke
  1220: 0 = 66 @ 27
  1221: 0 

  RoundStroke
   1222: 0 = 1212 @ 100
   1223: 0 

Y
   StraightStroke
    1224: 0 = 67 @ 41 

   RoundStroke
    1225: 0 = 1224 @ 100


/****************************************** End of GROUP TELU Range 1200-1299  used 1200-1225  **************************************************/

/****************************************** GROUP THAI   Range: 1400-1499 **************************************************************************/

 THAI
 Grey
  Y
  SquareHeight
     1400:     468            /* Thai flat height */
     1401:     0           /* the base "height" remains 0 */
     1402:    718 /* Thai flat ascender*/ 

  RoundHeight
     1403:     8~  1400 @50  /* top round height*/
     1404:    -8 ~ 1401 @50  /* replace the 0 with the base height undershoot */

Black
X
  StraightStroke
    1405: 0 = 66 @ 27
  RoundStroke
    1406: 0 = 1405 @ 100

  Y
  StraightStroke
    1407: 0
  RoundStroke
    1408: 0 = 1407 @ 100
    1409: 0

/****************************************** End of GROUP THAI   Range: 1400-1499  used 1400-1409 **************************************************************************/


/******************************************* GROUP KHMR Range 1500-1599 **********************************************************************/

KHMR  
 Grey
 Y
 SquareHeight
  1500: 0 /* flat short ascender above xheight */
  1501: 0 /* glyph uni178817C5.sub1sechalf , uni178817C5.sub2sechalf */
  1502: 0 /* baseline*/
  1503: -0 

 RoundHeight
  1504: -0 ~ 1502 @50 /* baseline overshoot */ 
  1505: 0 /* glyph uni17C0.sechalf1.alt , uni17C0.sechalf2.alt */
  1506: 0 = 1505 @50 /* glyph uni17BF.sechalf1.alt , uni17BF.sechalf2.alt*/
  1507: 0 /* glyph  uni17BF.sechalf1 - uni17C0.sechalf2 */

  1508: 0
  1509: 0 ~ 1508 @50 
  1510: 0 ~ 1508 @50 
  1511: 0 ~ 1508 @50 
  1512: 0 /* short  glyph 640  */
  1513: -0 ~ 1503 @50 /* descenders including mark hinted bottom up */

KHMRDiacritics
 Y
 SquareHeight
  1514: -0 ~ 1503 @50
  1515: -0 /* alt baseline */
  1516: 0 /* mark baseline glyph 0x17b7..0x17ba*/


KHMR 
 Black 
 X
  StraightStroke
    1517: 0 = 66 @ 33 
    1518: 0= 1517 @ 38
  RoundStroke
    1519: 0= 66 @ 56 

 Y
   StraightStroke
    1520: 0

  RoundStroke
    1521: 0
 /*** Diag
  StraightStroke
    1522: 0 = 68 @ 100*/

KHMRDiacritics
X
  StraightStroke
    1523:  0 =1517@50
  RoundStroke
   1524: 0 =1517@50
   1525: 0 =1517@50  /*complicated ones no forced bolding*/

Y
   StraightStroke
    1526:  0 = 66 @ 38
  RoundStroke
    1527: 0 = 66 @ 38
    1528: 0 = 66 @ 38   /*complicated ones no forced bolding  */

/******************************************* End of GROUP KHMR Range 1500-1599 used 1500-1528  **********************************************************************/

**************************************End of commented out Non Latin section ********************************************************************************************/
/*
Here, you would add your own groups and individual cvts, as they are needed to
control a feature that several glyphs have in common.

Notice: To find out which is the next cvt number you can use, consult the
title bar of the control program. It indicates the number of entries in the cvt.
Since we start counting at 0, this is the same as giving you the next available
number.

CAUTION: Do not use cvt numbers in range 40 through 64. This range is used by
VTT internally.
*/

    </extraProgram>

    <extraProgram name="fpgm">
/* Function 0 takes 4 args */ 
FDEF[], 0
#BEGIN
#PUSHOFF
RCVT[]
SWAP[]
GC[N]
ADD[]
DUP[]
#PUSH, 38
ADD[]
#PUSH, 4
MINDEX[]
SWAP[]
SCFS[]
SCFS[]
#END
ENDF[]
#PUSHON
/* Function 1 takes 4 args */ 
FDEF[], 1
#BEGIN
#PUSHOFF
RCVT[]
SWAP[]
GC[N]
SWAP[]
SUB[]
DUP[]
#PUSH, 38
SUB[]
#PUSH, 4
MINDEX[]
SWAP[]
SCFS[]
SCFS[]
#END
ENDF[]
#PUSHON
/* Function 2 takes 4 args */ 
FDEF[], 2
#BEGIN
#PUSHOFF
RCVT[]
SWAP[]
GC[N]
ADD[]
#PUSH, 32
SUB[]
DUP[]
#PUSH, 70
ADD[]
#PUSH, 4
MINDEX[]
SWAP[]
SCFS[]
SCFS[]
#END
ENDF[]
#PUSHON
/* Function 3 takes 4 args */ 
FDEF[], 3
#BEGIN
#PUSHOFF
RCVT[]
SWAP[]
GC[N]
SWAP[]
SUB[]
#PUSH, 32
ADD[]
DUP[]
#PUSH, 38
SUB[]
#PUSH, 32
SUB[]
#PUSH, 4
MINDEX[]
SWAP[]
SCFS[]
SCFS[]
#END
ENDF[]
#PUSHON
/* Function 4 takes 4 args */ 
FDEF[], 4
#BEGIN
#PUSHOFF
RCVT[]
SWAP[]
GC[N]
ADD[]
#PUSH, 64
SUB[]
DUP[]
#PUSH, 102
ADD[]
#PUSH, 4
MINDEX[]
SWAP[]
SCFS[]
SCFS[]
#END
ENDF[]
#PUSHON
/* Function 5 takes 4 args */ 
FDEF[], 5
#BEGIN
#PUSHOFF
RCVT[]
SWAP[]
GC[N]
SWAP[]
SUB[]
#PUSH, 64
ADD[]
DUP[]
#PUSH, 38
SUB[]
#PUSH, 64
SUB[]
#PUSH, 4
MINDEX[]
SWAP[]
SCFS[]
SCFS[]
#END
ENDF[]
#PUSHON
/* Function 6 takes 2 args */ 
FDEF[], 6
#BEGIN
#PUSHOFF
SVTCA[X]
SRP0[]
DUP[]
ALIGNRP[]
SVTCA[Y]
ALIGNRP[]
#END
#PUSHON
ENDF[]
/* Function 7 takes 2 arguments */ 
FDEF[], 7
#BEGIN
#PUSHOFF
DUP[]
RCVT[]
SWAP[]
DUP[]
#PUSH, 205
WCVTP[]
SWAP[]
DUP[]
#PUSH, 346
LTEQ[]
IF[]
SWAP[]
DUP[]
#PUSH, 141
WCVTP[]
SWAP[]
EIF[]
DUP[]
#PUSH, 237
LTEQ[]
IF[]
SWAP[]
DUP[]
#PUSH, 77
WCVTP[]
SWAP[]
EIF[]
DUP[]
#PUSH, 4
MINDEX[]
LTEQ[]
IF[]
SWAP[]
DUP[]
#PUSH, 13
WCVTP[]
SWAP[]
EIF[]
POP[]
POP[]
#END
#PUSHON
ENDF[]
/* Function 8 takes 1 argument */ 
FDEF[], 8
#BEGIN
#PUSHOFF
DUP[]
DUP[]
RCVT[]
RTG[]
ROUND[Gr]
WCVTP[]
DUP[]
#PUSH, 1
ADD[]
DUP[]
RCVT[]
#PUSH, 70
SROUND[]
ROUND[Gr]
ROLL[]
RCVT[]
ADD[]
WCVTP[]
#END
#PUSHON
ENDF[]
/* Function 9 takes 0 arguments */ 
FDEF[], 9
#BEGIN
#PUSHOFF
SVTCA[X]
#PUSH, 11, 10
RS[]
SWAP[]
RS[]
NEG[]
SPVFS[]
#END
#PUSHON
ENDF[]
/* Function 10 takes 0 arguments */ 
FDEF[], 10
#BEGIN
#PUSHOFF
SVTCA[Y]
#PUSH, 10, 11
RS[]
SWAP[]
RS[]
SFVFS[]
#END
#PUSHON
ENDF[]
/* Function 11 takes 2 args */ 
FDEF[], 11
#BEGIN
#PUSHOFF
SVTCA[Y]
#PUSH, 40
SWAP[]
WCVTF[]
#PUSH, 1, 40
MIAP[r]
SVTCA[X]
#PUSH, 40
SWAP[]
WCVTF[]
#PUSH, 2, 40
RCVT[]
MSIRP[m]
#PUSH, 2, 0
SFVTL[r]
GFV[]
#END
ENDF[]
#PUSHON
/* Function 13 */ 
FDEF[], 13
#BEGIN
#PUSHOFF
DUP[]
RCVT[]
#PUSH, 3
CINDEX[]
RCVT[]
SUB[]
ABS[]
#PUSH, 80
LTEQ[]
IF[]
RCVT[]
WCVTP[]
ELSE[]
POP[]
POP[]
EIF[]
#END
#PUSHON
ENDF[]
/* Function 15 takes 1 arg */ 
FDEF[], 15
#BEGIN
#PUSHOFF
DUP[]
RCVT[]
#PUSH, 0
RS[]
ADD[]
WCVTP[]
#END
ENDF[]
#PUSHON
/* Function 16 takes 0 arguments */
FDEF[], 16
#BEGIN
#PUSHOFF
SVTCA[X]
#PUSH, 6
RS[]
#PUSH, 7
RS[]
NEG[]
SPVFS[]
#END
#PUSHON
ENDF[]
/* Function 17 takes 1 arg */ 
FDEF[], 17
#BEGIN
#PUSHOFF
DUP[]
ROUND[Bl]
#PUSH, 64
SUB[]
#PUSH, 0
MAX[]
DUP[]
#PUSH, 44, 192
ROLL[]
MIN[]
#PUSH, 4096
DIV[]
ADD[]
CALL[]
GPV[]
ABS[]
SWAP[]
ABS[]
SUB[]
NOT[]
IF[]
#PUSH, 3
SUB[]
EIF[]
#END
ENDF[]
#PUSHON
/* Function 20 takes 4 arguments */ 
FDEF[], 20
#BEGIN
#PUSHOFF
ROLL[]
SPVTCA[X]
RCVT[]
ROLL[]
ROLL[]
SDPVTL[R]
#PUSH, 17
CALL[]
#PUSH, 41
SWAP[]
WCVTP[]
#PUSH, 41
ROFF[]
MIRP[m&lt;RGr]
RTG[]
#END
#PUSHON
ENDF[]
/* Function 24 takes 2 args */ 
FDEF[], 24
#BEGIN
#PUSHOFF
RCVT[]
NEG[]
#PUSH, 44
SWAP[]
WCVTP[]
RCVT[]
#PUSH, 43
SWAP[]
WCVTP[]
#END
#PUSHON
ENDF[]
/* Function 31 takes 3 arguments */ 
FDEF[], 31
#BEGIN
#PUSHOFF
MPPEM[]
GT[]
IF[]
RCVT[]
WCVTP[]
ELSE[]
POP[]
POP[]
EIF[]
#END
#PUSHON
ENDF[]
/* Function 34 takes 5 arguments*/ 
FDEF[], 34
#BEGIN
#PUSHOFF
SVTCA[X]
#PUSH, 5
CINDEX[]
SRP0[]
SWAP[]
DUP[]
ROLL[]
MIRP[M&lt;RBl]
SVTCA[Y]
#PUSH, 1
ADD[]
SWAP[]
MIRP[m&gt;RBl]
MIRP[m&gt;RGr]
#END
#PUSHON
ENDF[]
/* Function 35 takes 5 arguments */ 
FDEF[], 35
#BEGIN
#PUSHOFF
SVTCA[X]
#PUSH, 5
CINDEX[]
SRP0[]
SWAP[]
DUP[]
ROLL[]
MIRP[M&lt;RBl]
SVTCA[Y]
#PUSH, 1
SUB[]
SWAP[]
MIRP[m&gt;RBl]
MIRP[m&gt;RGr]
#END
#PUSHON
ENDF[]
/* Function 36 takes 6 arguments */ 
FDEF[], 36
#BEGIN
#PUSHOFF
SVTCA[X]
#PUSH, 6
CINDEX[]
SRP0[]
MIRP[M&lt;RBl]
SVTCA[Y]
MIRP[m&gt;RBl]
MIRP[m&gt;RGr]
#END
#PUSHON
ENDF[]
/* Function 37 takes 1 args */ 
FDEF[], 37
#BEGIN
#PUSHOFF
DUP[]
#PUSH, 1
ADD[]
SVTCA[X]
SRP0[]
DUP[]
ALIGNRP[]
SVTCA[Y]
ALIGNRP[]
#END
#PUSHON
ENDF[]
/* Function 38 takes 1 args */ 
FDEF[], 38
#BEGIN
#PUSHOFF
DUP[]
#PUSH, 1
SUB[]
SVTCA[X]
SRP0[]
DUP[]
ALIGNRP[]
SVTCA[Y]
ALIGNRP[]
#END
#PUSHON
ENDF[]
/* Function 40 takes 0 arguments */
FDEF[], 40
#BEGIN
#PUSHOFF
SVTCA[Y]
#PUSH, 7
RS[]
#PUSH, 6
RS[]
SFVFS[]
#END
#PUSHON
ENDF[]
/* Function 44 takes 2 arguments */
FDEF[], 44
#BEGIN
#PUSHOFF
POP[]
POP[]
GPV[]
ABS[]
SWAP[]
ABS[]
MAX[]
#PUSH, 16384
DIV[]
#END
#PUSHON
ENDF[]
/* Function 45 takes 2 arguments */
FDEF[], 45
#BEGIN
#PUSHOFF
POP[]
#PUSH, 128
LTEQ[]
IF[]
GPV[]
ABS[]
SWAP[]
ABS[]
MAX[]
#PUSH, 8192
DIV[]
ELSE[]
#PUSH, 0, 64, 47
CALL[]
EIF[]
#PUSH, 2
ADD[]
#END
#PUSHON
ENDF[]
/* Function 46 takes 2 arguments */
FDEF[], 46
#BEGIN
#PUSHOFF
POP[]
#PUSH, 192
LTEQ[]
IF[]
GPV[]
ABS[]
SWAP[]
ABS[]
MAX[]
#PUSH, 5461
DIV[]
ELSE[]
#PUSH, 0, 128, 47
CALL[]
EIF[]
#PUSH, 2
ADD[]
#END
#PUSHON
ENDF[]
/* Function 47 takes 2 arguments */
FDEF[], 47
#BEGIN
#PUSHOFF
GPV[]
ABS[]
SWAP[]
ABS[]
MAX[]
#PUSH, 16384
DIV[]
ADD[]
SWAP[]
POP[]
#END
#PUSHON
ENDF[]
/* Function 53:                */
/*   IN SR_ARG, l1, r1, l2, r2 */
/*   OUT sum/2, sum/2          */
FDEF[], 53
#BEGIN
#PUSHOFF
RCVT[]
SWAP[]
RCVT[]
ADD[]
SWAP[]
RCVT[]
ADD[]
SWAP[]
RCVT[]
ADD[]
SWAP[]
SROUND[]
ROUND[Gr]
RTG[]
#PUSH, 128
DIV[]
DUP[]
#END
#PUSHON
ENDF[]
/* Function 54:                */
/*   STACK: sum/2, sum/2       */
/*   IN li, rj                 */
/*   OUT - - - -               */
FDEF[], 54
#BEGIN
#PUSHOFF
#PUSH, 4
MINDEX[]
#PUSH, 4
MINDEX[]
#PUSH, 4
CINDEX[]
#PUSH, 4
CINDEX[]
RCVT[]
SWAP[]
RCVT[]
DUP[]
#PUSH, 3
MINDEX[]
ADD[]
DIV[]
MUL[]
ROUND[Gr]
DUP[]
#PUSH, 3
MINDEX[]
SUB[]
NEG[]
ROLL[]
SWAP[]
WCVTP[]
/* cvt[rj] = sum/2 - sum/2 * ratio */
WCVTP[]
/* cvt[li] = sum/2 * ratio         */
#END
#PUSHON
ENDF[]
/* Function 55:                */
/*   IN l1, r2                 */
/*   OUT - -                   */
FDEF[], 55
#BEGIN
#PUSHOFF
DUP[]
RCVT[]
#PUSH, 0
EQ[]
IF[]
  #PUSH, 64
  WCVTP[]
  /* cvt[r2] = 1 */
  DUP[]
  RCVT[]
  #PUSH, 64
  SUB[]
  WCVTP[]
  /* cvt[l1] = cvt[l1] - 1 */
ELSE[]
  POP[]
  POP[]
EIF[]
#END
#PUSHON
ENDF[]
/* Function 56:                                            */
/*   IN i = index, pi = parent-&gt;index,                     */
/*   GLOBALS: Uses CVT[47] representative-&gt;distance, and   */
/*            CVT[48] parent-&gt;distance (both unhinted)     */
FDEF[], 56
#BEGIN
#PUSHOFF
RCVT[]
#PUSH, 48, 47
RCVT[]
SWAP[]
RCVT[]
SUB[]
ADD[]
#PUSH, 1
ADD[]
ROUND[Bl]
WCVTP[]
#END
#PUSHON
ENDF[]
/* Function 57:                                       */
/*   IN ratio = reprDist/parentDist (F26.6)           */
/*   IN rd = representative-&gt;distance, p = pt-&gt;ppem   */
/*   GLOBALS: S[20] = ratio, cvt[47] = repr           */
FDEF[], 57
#BEGIN
#PUSHOFF
MPPEM[]
LTEQ[]
IF[]
  #PUSH, 47
  SWAP[]
  WCVTF[]
  #PUSH, 20
  SWAP[]
  WS[]
ELSE[]
  POP[]
  POP[]
EIF[]
#END
#PUSHON
ENDF[]
/* Function 58:                                        */
/*   IN i = index, v = value, p = ppem                 */
/*   cvt[i] = max (v, cvt[i])  for ppem &gt;= p           */
FDEF[], 58
#BEGIN
#PUSHOFF
MPPEM[]
LTEQ[]
IF[]
  DUP[]
  #PUSH, 3
  CINDEX[]
  RCVT[]
  ROUND[Bl]
  GTEQ[]
  IF[]
    WCVTP[]
  ELSE[]
    POP[]
    POP[]
  EIF[]
ELSE[]
  POP[]
  POP[]
EIF[]
#END
#PUSHON
ENDF[]
/* Function 59:                                            */
/*   IN i = index, pi = parent-&gt;index,                     */
/*   GLOBALS: Uses CVT[47] representative-&gt;distance, and   */
/*            CVT[48] parent-&gt;distance (both unhinted)     */
FDEF[], 59
#BEGIN
#PUSHOFF
RCVT[]
#PUSH, 20
RS[]
#PUSH, 0
ADD[]
MUL[]
#PUSH, 1
ADD[]
ROUND[Bl]
WCVTP[]
#END
#PUSHON
ENDF[]
/* Function 60:                                            */
/*   IN                                                    */
/*   GLOBALS: Uses CVT[50] (min sidebearing sum)           */
FDEF[], 60
#BEGIN
#PUSHOFF
#PUSH, 47
RCVT[]
WCVTP[]
#END
#PUSHON
ENDF[]
/* Function 61:                                    */
/*   IN i = index, k = keyIndex                    */
/*   cvt[i] = cvt[i] + cvt[keyIndex]               */
FDEF[], 61
#BEGIN
#PUSHOFF
RCVT[]
SWAP[]
DUP[]
RCVT[]
ROLL[]
ADD[]
WCVTP[]
#END
#PUSHON
ENDF[]
/* Function 62:                                        */
/*   IN i = index, ki = keyIndex, ci = ctrlIndex       */
/*   cvt[i] = cvt[ki] + cvt[ci]                        */
FDEF[], 62
#BEGIN
#PUSHOFF
RCVT[]
SWAP[]
RCVT[]
ADD[]
WCVTP[]
#END
#PUSHON
ENDF[]
/* Function 63:                                        */
/*   IN ThresholdPpem                                  */
/*   if (MPPEM &gt; ThresholdPpem) borrow .5 pixel        */
FDEF[], 63
#BEGIN
#PUSHOFF
MPPEM[]
SWAP[]
LTEQ[]
IF[]
  #PUSH, 51, -32, 52, 32
ELSE[]
  #PUSH, 51, 0, 52, 0
EIF[]
WCVTP[]
WCVTP[]
#END
#PUSHON
ENDF[]
/* Function 64 takes 5 arguments */ 
FDEF[], 64
#BEGIN
#PUSHOFF
#PUSH, 22
RS[]
IF[]
  #PUSH,3
  MINDEX[]
  RCVT[]
  ROLL[]
  IF[]
    ABS[]
    FLOOR[]
    #PUSH,31
    ADD[]
  ELSE[]
    ABS[]
    #PUSH,32
    ADD[]
    FLOOR[]
    DUP[]
    IF[]
    ELSE[]
      POP[]
      #PUSH,64
    EIF[]
    #PUSH,1
    SUB[]
  EIF[]
  SWAP[]
  IF[]
    NEG[]
  EIF[]
  #PUSH,41
  SWAP[]
  WCVTP[]
  SWAP[]
  SRP0[]
  #PUSH,41
  MIRP[m&lt;rGr]
ELSE[]
  POP[]
  POP[]
  POP[]
  POP[]
  POP[]
EIF[]
#END
#PUSHON
ENDF[]
/* Function 65 takes 8 arguments */ 
FDEF[], 65
#BEGIN
#PUSHOFF
#PUSH, 22
RS[]
IF[]
#PUSH,4
CINDEX[]
RCVT[]
ABS[]
#PUSH,32
ADD[]
FLOOR[]
DUP[]
IF[]
ELSE[]
POP[]
#PUSH,64
EIF[]
#PUSH,1
SUB[]
SWAP[]
IF[]
NEG[]
EIF[]
#PUSH,41
SWAP[]
WCVTP[]
#PUSH,4
CINDEX[]
#PUSH,7
CINDEX[]
SFVTL[r]
DUP[]
IF[]
  SPVTCA[Y]
ELSE[]
  SPVTCA[X]
EIF[]
#PUSH,5
CINDEX[]
SRP0[]
#PUSH,4
CINDEX[]
DUP[]
GC[N]
#PUSH,4
CINDEX[]
SWAP[]
WS[]
ALIGNRP[]
#PUSH,7
CINDEX[]
SRP0[]
#PUSH,6
CINDEX[]
DUP[]
GC[N]
#PUSH,4
CINDEX[]
#PUSH,1
ADD[]
SWAP[]
WS[]
ALIGNRP[]
DUP[]
IF[]
  SVTCA[X]
ELSE[]
  SVTCA[Y]
EIF[]
#PUSH,5
CINDEX[]
SRP0[]
#PUSH,4
CINDEX[]
#PUSH,41
MIRP[m&lt;rGr]
#PUSH,7
CINDEX[]
SRP0[]
#PUSH,6
CINDEX[]
#PUSH,41
MIRP[m&lt;rGr]
#PUSH,4
CINDEX[]
#PUSH,7
CINDEX[]
SFVTL[r]
DUP[]
IF[]
  SPVTCA[Y]
ELSE[]
  SPVTCA[X]
EIF[]
#PUSH,4
CINDEX[]
#PUSH,3
CINDEX[]
RS[]
SCFS[]
#PUSH,6
CINDEX[]
#PUSH,3
CINDEX[]
#PUSH,1
ADD[]
RS[]
SCFS[]
ELSE[]
POP[]
EIF[]
POP[]
POP[]
POP[]
POP[]
POP[]
POP[]
POP[]
#END
#PUSHON
ENDF[]
/* Function 66 takes 8 arguments */ 
FDEF[], 66
#BEGIN
#PUSHOFF
#PUSH, 22
RS[]
IF[]
#PUSH,4
CINDEX[]
RCVT[]
ABS[]
#PUSH,32
ADD[]
FLOOR[]
DUP[]
IF[]
ELSE[]
POP[]
#PUSH,64
EIF[]
#PUSH,1
SUB[]
SWAP[]
IF[]
ELSE[]
NEG[]
EIF[]
#PUSH,41
SWAP[]
WCVTP[]
#PUSH,5
CINDEX[]
#PUSH,8
CINDEX[]
SFVTL[r]
DUP[]
IF[]
  SPVTCA[Y]
ELSE[]
  SPVTCA[X]
EIF[]
#PUSH,4
CINDEX[]
SRP0[]
#PUSH,5
CINDEX[]
DUP[]
GC[N]
#PUSH,4
CINDEX[]
SWAP[]
WS[]
ALIGNRP[]
#PUSH,4
CINDEX[]
#PUSH,7
CINDEX[]
SFVTL[r]
#PUSH,7
CINDEX[]
SRP0[]
#PUSH,6
CINDEX[]
DUP[]
GC[N]
#PUSH,4
CINDEX[]
#PUSH,1
ADD[]
SWAP[]
WS[]
ALIGNRP[]
DUP[]
IF[]
  SVTCA[X]
ELSE[]
  SVTCA[Y]
EIF[]
#PUSH,4
CINDEX[]
SRP0[]
#PUSH,5
CINDEX[]
#PUSH,41
MIRP[m&lt;rGr]
#PUSH,41
DUP[]
RCVT[]
NEG[]
WCVTP[]
#PUSH,7
CINDEX[]
SRP0[]
#PUSH,6
CINDEX[]
#PUSH,41
MIRP[m&lt;rGr]
#PUSH,5
CINDEX[]
#PUSH,8
CINDEX[]
SFVTL[r]
DUP[]
IF[]
  SPVTCA[Y]
ELSE[]
  SPVTCA[X]
EIF[]
#PUSH,5
CINDEX[]
#PUSH,3
CINDEX[]
RS[]
SCFS[]
#PUSH,4
CINDEX[]
#PUSH,7
CINDEX[]
SFVTL[r]
#PUSH,6
CINDEX[]
#PUSH,3
CINDEX[]
#PUSH,1
ADD[]
RS[]
SCFS[]
ELSE[]
POP[]
EIF[]
POP[]
POP[]
POP[]
POP[]
POP[]
POP[]
POP[]
#END
#PUSHON
ENDF[]
/* Function 67 takes 4 arguments */ 
FDEF[], 67
#BEGIN
#PUSHOFF
SPVTCA[Y]
#PUSH,4
CINDEX[]
DUP[]
DUP[]
GC[N]
#PUSH,4
CINDEX[]
SWAP[]
WS[]
#PUSH,5
CINDEX[]
SFVTL[r]
#PUSH,3
CINDEX[]
RCVT[]
SCFS[]
POP[]
POP[]
POP[]
POP[]
#END
#PUSHON
ENDF[]
/* Function 68 takes 3 arguments */ 
FDEF[], 68
#BEGIN
#PUSHOFF
SPVTCA[Y]
#PUSH,3
CINDEX[]
DUP[]
#PUSH,4
CINDEX[]
SFVTL[r]
#PUSH,2
CINDEX[]
RS[]
SCFS[]
POP[]
POP[]
POP[]
#END
#PUSHON
ENDF[]
/* Function 69 takes 2 arguments */ 
FDEF[], 69
#BEGIN
#PUSHOFF
RCVT[]
SWAP[]
DUP[]
RCVT[]
RTG[]
DUP[]
#PUSH,0
LT[]
DUP[]
IF[]
  SWAP[]
  NEG[]
  SWAP[]
EIF[]
SWAP[]
ROUND[Gr]
DUP[]
#PUSH,64
LT[]
IF[]
  POP[]
  #PUSH,64
EIF[]
SWAP[]
IF[]
  NEG[]
EIF[]
ROLL[]
ADD[]
WCVTP[]
#END
#PUSHON
ENDF[]

/***** functions to implement ranges of deltas and deltas with odd amounts *****/

/* Function 70 takes 5 arguments */
/* This function changes a CVT within a range of PPEM sizes */
/* CALL[],&lt;amount&gt;,&lt;CVT&gt;,&lt;low PPEM&gt;,&lt;high PPEM&gt;,70 */

/* &lt;high PPEM&gt; Highest PPEM in range to be modified (inclusive */
/* &lt;low PPEM&gt;  Lowest PPEM in range to be modified (inclusive) */
/* &lt;CVT&gt;       CVT to be modified */
/* &lt;amount&gt;    Amount to change CVT, in +/- 64ths */

FDEF[],70
#BEGIN
#PUSHOFF
MPPEM[]
GTEQ[]
SWAP[]
MPPEM[]
LTEQ[]
AND[]
IF[]
DUP[]
RCVT[]
ROLL[]
ADD[]
WCVTP[]
ELSE[]
POP[]
POP[]
EIF[]
#END
#PUSHON
ENDF[]

/* Function 71 takes 4 arguments */
/* This function changes a CVT at a specific PPEM */
/* CALL[],&lt;amount&gt;,&lt;CVT&gt;,&lt;ppem size&gt;,71 */

/* &lt;ppem size&gt; PPEM to be modified */
/* &lt;CVT&gt;       CVT to be modified */
/* &lt;amount&gt;    Amount to change CVT, in +/- 64ths */

FDEF[],71
#BEGIN
#PUSHOFF
MPPEM[]
EQ[]
IF[]
DUP[]
RCVT[]
ROLL[]
ADD[]
WCVTP[]
ELSE[]
POP[]
POP[]
EIF[]
#END
#PUSHON
ENDF[]

/* Function 72 takes 5 arguments */
/* This function moves a point within a range of PPEM sizes */
/* CALL[],&lt;point&gt;,&lt;amount&gt;,&lt;low PPEM&gt;,&lt;high PPEM&gt;,72 */

/* &lt;high ppem&gt; Highest PPEM in range to be modified (inclusive */
/* &lt;low ppem&gt;  Lowest PPEM in range to be modified (inclusive) */
/* &lt;amount&gt;    Amount to move point, in +/- 64ths */
/* &lt;Point&gt;     point to be modified */

FDEF[],72
#BEGIN
#PUSHOFF
MPPEM[]
GTEQ[]
SWAP[]
MPPEM[]
LTEQ[]
AND[]
IF[]
SHPIX[]
ELSE[]
POP[]
POP[]
EIF[]
#END
#PUSHON
ENDF[]

/* Function 73 takes 4 arguments */
/* This function moves a point at a specific PPEM */
/* CALL[],&lt;point&gt;,&lt;amount&gt;,&lt;ppem size&gt;,73 */

/* &lt;ppem size&gt; PPEM to be modified */
/* &lt;amount&gt; Amount to move point, in +/- 64ths */
/* &lt;point&gt; point to be moved */

FDEF[],73
#BEGIN
#PUSHOFF
MPPEM[]
EQ[]
IF[]
SHPIX[]
ELSE[]
POP[]
POP[]
EIF[]
#END
#PUSHON
ENDF[]

/***** The following 4 functions essentially repeat the above 4
	however, they accept an extra flag to indicate whether the
	delta applies to grey scaling (1) or black-and-white (0) only. *****/

/* CALL[],&lt;amount&gt;,&lt;CVT&gt;,&lt;low PPEM&gt;,&lt;high PPEM&gt;,&lt;flag&gt;,74 */
FDEF[],74
#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]         /* if storage #2 and flag match */
#PUSH, 70
CALL[]       /* forward to "standard" function */
ELSE[]
POP[]        /* else cleanup stack and bail out */
POP[]
POP[]
POP[]
EIF[]
#PUSHON
#END
ENDF[]

/* CALL[],&lt;amount&gt;,&lt;CVT&gt;,&lt;ppem size&gt;,&lt;flag&gt;,75 */
FDEF[],75
#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]         /* if storage #2 and flag match */
#PUSH, 71
CALL[]       /* forward to "standard" function */
ELSE[]
POP[]        /* else cleanup stack and bail out */
POP[]
POP[]
EIF[]
#PUSHON
#END
ENDF[]

/* CALL[],&lt;point&gt;,&lt;amount&gt;,&lt;low PPEM&gt;,&lt;high PPEM&gt;,&lt;flag&gt;,76 */
FDEF[],76
#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]         /* if storage #2 and flag match */
#PUSH, 72
CALL[]       /* forward to "standard" function */
ELSE[]
POP[]        /* else cleanup stack and bail out */
POP[]
POP[]
POP[]
EIF[]
#PUSHON
#END
ENDF[]

/* CALL[],&lt;point&gt;,&lt;amount&gt;,&lt;ppem size&gt;,&lt;flag&gt;,77 */
FDEF[],77
#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]         /* if storage #2 and flag match */
#PUSH, 73
CALL[]       /* forward to "standard" function */
ELSE[]
POP[]        /* else cleanup stack and bail out */
POP[]
POP[]
EIF[]
#PUSHON
#END
ENDF[]

/************* New glyph hinting functions  ***************/
/* Function 78 takes 5 arguments */
/* Moves a point along the angle of two pts. VincentC 5-15-95 */
/* The point being moved should also be one of the pts for the anlge &lt;pt2&gt; */
/* CALL[], &lt;amount&gt;, &lt;low cutoff&gt;, &lt;high cutoff&gt;, &lt;pt1&gt;, &lt;pt2&gt;, &lt;fn&gt; */
/* &lt;amount&gt; in 64ths */
/* &lt;low cutoff&gt; ppem size to cutoff the function (inclusive) */
/* &lt;high cutoff&gt; ppem size to cutoff the function (inclusive) */
/* &lt;fn&gt; function number, here should be 1 */
FDEF[],78
#BEGIN
#PUSHOFF
DUP[]
ROLL[]
SFVTL[r]
SWAP[]
MPPEM[]
GTEQ[]
ROLL[]
MPPEM[]
LTEQ[]
AND[]
IF[]
SWAP[]
SHPIX[]
ELSE[]
POP[]
POP[]
EIF[]
#END
#PUSHON 
ENDF[]  
/* Function 79 takes 3 arguments , used for Y positioning of accents */ 
/*   Example:    CALL[], 1, 10, 14,  79   call,outline#,a1,b1,funct#  */
FDEF[], 79
#BEGIN
SVTCA[Y]
#PUSHOFF
DUP[]
ROLL[]
MD[N]
#PUSH, 0
LTEQ[]
IF[]
#PUSH, 64
SWAP[]
DUP[]
ROLL[]
SHPIX[]
SRP2[]
SHC[2]
ELSE[]
POP[]
POP[]
EIF[]
#END
#PUSHON
ENDF[]

/* fn 80 centers accents on base glyph in x direction
   CALL[], &lt;offset&gt;, &lt;left point on accent&gt;, &lt;right point on accent&gt;,
           &lt;left point on base glyph&gt;, &lt;right point on base glyph&gt;, 80
   - offset denotes accent's offset in fUnits (e.g. for grave, acute)
   - offset may be 0 (e.g. perfectly centered circumflex)
   - left and right point may be the same (e.g. center of circumflex)
   fn call must be followed by
   SHC[2], &lt;contour number&gt;
   for each contour that is part of the accent */

FDEF[], 80
#BEGIN
#PUSHOFF
SVTCA[X]
GC[N]        /* rightBase.x */
SWAP[]
GC[N]        /* leftBase.x */
ADD[]        /* rightBase.x + leftBase.x */
SWAP[]
GC[N]        /* rightAccent.x */
SUB[]        /* rightBase.x + leftBase.x - rightAccent.x */
SWAP[]
DUP[]        /* save leftAccent for MSIRP below */
SRP0[]
DUP[]
GC[N]        /* leftAccent.x */
ROLL[]
SUB[]        /* rightBase.x + leftBase.x - (rightAccent.x + leftAccent .x) */
#PUSH, -128
DIV[]        /* (leftAccent .x + rightAccent.x)/2 - (leftBase.x + rightBase.x)/2 */
ROLL[]       /* fetch offset */
#PUSH, 64, 64
ROLL[]       /* fetch offset again... */
WCVTF[]      /* scale... */
RCVT[]       /* fetch scaled offset */
ADD[]
ROUND[Gr]    /* add and round */
MSIRP[m]
#PUSHON
#END
ENDF[]

/* Function 81 TAKES 3 ARGUMENTS, aligns a point until a specific distance is reached.
	Used for flares. First link p1 to p2, then call the function. VC Dec 11,1995*/
/* CALL[], amt, p1, p2, 81 ... amt is in 64ths, p1 is start pt, p2 is point moved, 81 is function# */
FDEF[], 81
#BEGIN
#PUSHOFF
DUP[]
ROLL[]
SWAP[]
MD[N]
ABS[]
ROLL[]
SWAP[]
GTEQ[]
IF[]
ALIGNRP[]
ELSE[]
POP[]
EIF[]
#END
#PUSHON
ENDF[]

/* Function 82 takes 1 argument (ppemLimit), used in Diagonal, DAlign, and Intersect
   if current ppem size &lt; ppemLimit then RDTG[] else ROFF[] end. B.St. 23-Jun-98 */

FDEF[],82
#BEGIN
#PUSHOFF
  MPPEM[]
  GT[]
  IF[]
  #BEGIN
    RDTG[]
  #END
  ELSE[]
  #BEGIN
    ROFF[]
  #END
  EIF[]
#PUSHON
#END
ENDF[]


/***** functions for control program *****/

/* fn 83 determines whether or not the aspect
   ratio of the resolutions in x and y is the
   same, recording the result in s[18] */

FDEF[],83
#BEGIN
#PUSHOFF
#PUSH, 18
SVTCA[Y]
MPPEM[]
SVTCA[X]
MPPEM[]
EQ[]
WS[] /* s[18] = square (1:1) aspect ratio */
#PUSHON
#END
ENDF[]

/* fn 84 determines whether or not we are cur-
   rently rasterizing with grey scales, recor-
   ding the result in s[2], used in functions
   74 through 77 */

FDEF[],84
#BEGIN
#PUSHOFF
#PUSH,2,0
WS[]            /* s[2] = grey scaling: off (by default) */
#PUSH,35,1      /* 35 = MS Rasterizer version 1.7 */
GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
LTEQ[]          /* 35 &lt;= version ? */
#PUSH,64,1      /* 64 = highest rasterizer version assigned to MS */
GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
GTEQ[]          /* 64 &gt;= version ? */
AND[]           /* 35 &lt;= version &amp;&amp; version &lt;= 64 ? */
IF[]            /* if so, we're running MS rasterizer version 1.7 or higher */
  #PUSH,4096,32 /* 4096 = flag returned by GETINFO if grey scaling bit is on */
  GETINFO[]     /* 32 = tell GETINFO to give us the grey scaling bit */
  EQ[]          /* 4096 == flag ? */
  IF[]          /* if so, we're running under grey scaling */
    #PUSH,2,1
    WS[]        /* s[2] = grey scaling: on (by now) */
  EIF[]
EIF[]
#PUSHON
#END
ENDF[]

/* fn 85 equalizes double specified heights
   below a given ppem size
   CALL[], &lt;rel height cvt&gt;, &lt;ppem size&gt;, &lt;abs height cvt&gt;, 85 */

FDEF[], 85
#BEGIN
#PUSHOFF
RCVT[] /* pick absolute (square) height */
RTG[]
ROUND[Gr]
SWAP[]
MPPEM[]
LTEQ[] /* specified ppem size &lt;= actual ppem size ? */
IF[]
  SWAP[]
  DUP[]
  RCVT[] /* pick relative height (overshoot) */
  DUP[]
  ABS[]
  #PUSH,64
  LT[] /* Abs(overshoot) &lt; 1 pixel ? */
  IF[]
    RUTG[] /* force overshoot */
  EIF[]
  ROUND[Gr]
  ROLL[]
  ADD[] /* add overshoot to square height */
EIF[]
WCVTP[] /* make this the round height */
#END
#PUSHON
ENDF[]

/* fn 86, 87 reserved for "inheritence by pixel size" */

/* fn 88 sets up 4 storage locations with the 
   x and y components of the italic and adjusted
   italic angle as follows:
   
     s[10] = italic angle y
     s[11] = italic angle x
     s[ 6] = adjusted italic angle y
     s[ 7] = adjusted italic angle x
  
   CALL[], &lt;italic rise cvt&gt;, &lt;italic run cvt&gt;, 88 */

FDEF[], 88
#BEGIN
#PUSHOFF

#PUSH, 0 /* Use twilight points to calculate stroke angles */
SZPS[]

#PUSH, 2 /* Dup the two parameters, we need them twice */
CINDEX[]
#PUSH, 2
CINDEX[]

SVTCA[X] /* Set twilight point 1 with italic run cvt in x */
#PUSH, 1
SWAP[]
MIAP[r]

SVTCA[Y] /* Set twilight point 2 with italic rise cvt in y */
#PUSH, 2
SWAP[]
MIAP[r]

#PUSH, 1, 2 /* and let the rasterizer do the math */
SPVTL[r]
GPV[]

#PUSH, 10 /* store the x and y components of the italic angle */
SWAP[]    
NEG[]     /* notice that since we're essentially setting the pv to a line  */
WS[]      /* from (runCvt,0) to (0,riseCvt), the calculcated pv will be    */
#PUSH, 11 /* proportional to (runCvt,0) - (0,riseCvt) = (runCvt,-riseCvt). */
SWAP[]    /* Hence we have to mirror the result at the base line, which is */
WS[]      /* done by flipping (negating) the sign of the y component here. */

SVTCA[X] /* same for the adjusted italic angle */
#PUSH, 1
SWAP[]
MIAP[R]  /* except to round the twilight point in x... */

SVTCA[Y]
#PUSH, 2
SWAP[]
MIAP[R]  /* ...and in y */

#PUSH, 1, 2
SPVTL[r]
GPV[]

#PUSH, 6
SWAP[]
NEG[]    /* same neg as above */
WS[]
#PUSH, 7
SWAP[]
WS[]

#PUSH, 1 /* restore graphics state */
SZPS[]
SVTCA[X]
#PUSHON
#END
ENDF[]


/* shifting diacritics one pixel below a glyph 22-11-2013 Vincent Connare */
FDEF[], 90
#BEGIN
SVTCA[Y]
#PUSHOFF
DUP[]
ROLL[]
MD[N]
#PUSH, 0
GTEQ[]
IF[]
#PUSH, -64
SWAP[]
DUP[]
ROLL[]
SHPIX[]
SRP2[]
SHC[2]
ELSE[]
POP[]
POP[]
EIF[]
#END
#PUSHON
ENDF[]

/* Function 91 takes 3 arguments , used for X positioning of accents that are on the right of the base glyph*/ 
/*   Example:    CALL[], 1, 10, 14,  91    call,outline#,a1,b1,funct#  */
FDEF[], 91
#BEGIN
SVTCA[X]
#PUSHOFF
DUP[]
ROLL[]
MD[N]
#PUSH, 0
LTEQ[]
IF[]
#PUSH, 64
SWAP[]
DUP[]
ROLL[]
SHPIX[]
SRP2[]
SHC[2]
ELSE[]
POP[]
POP[]
EIF[]
#END
#PUSHON
ENDF[]

/* shifting diacritics one pixel when it's on the left of a glyph 22-11-2013 Vincent Connare */
FDEF[], 92
#BEGIN
SVTCA[X]
#PUSHOFF
DUP[]
ROLL[]
MD[N]
#PUSH, 0
GTEQ[]
IF[]
#PUSH, -64
SWAP[]
DUP[]
ROLL[]
SHPIX[]
SRP2[]
SHC[2]
ELSE[]
POP[]
POP[]
EIF[]
#END
#PUSHON
ENDF[]

/* Function 93  takes 3 arguments , used for Y positioning of accents in CLEARTYPE when the first point is off the grid.  */ 
/*   Example:    CALL[], 1, 10, 14,  93   call,outline#,a1,b1,funct#  */
FDEF[], 93
#BEGIN
SVTCA[Y]
#PUSHOFF
DUP[]
ROLL[]
MD[N]
#PUSH, 64
LTEQ[]
IF[]
#PUSH, 64
SWAP[]
DUP[]
ROLL[]
SHPIX[]
SRP2[]
SHC[2]
ELSE[]
POP[]
POP[]
EIF[]
#END
#PUSHON
ENDF[]

/* Function 94  takes 3 arguments , made from function 79 but adds the pixel distance of the diacritic to the shift amount if it is LTEQ to 0 */ 
/*   Example:    CALL[], 1, 10, 14,  94   call,outline#,a1,b1,funct#  */

FDEF[], 94
#BEGIN
SVTCA[Y]
#PUSHOFF
DUP[]
ROLL[]
MD[N]
DUP[]
#PUSH, 32
LTEQ[]
IF[]
ABS[]
#PUSH, 64
ADD[]
SWAP[]
DUP[]
ROLL[]
SHPIX[]
SRP2[]
SHC[2]
ELSE[]
POP[]
POP[]
POP[]
EIF[]
#END
#PUSHON
ENDF[]

/* Function 95  takes 3 arguments , made from function 79 (and 94) but adds the pixel distance of the diacritic to the shift amount if it is greater than or equal to (GTEQ) to -64, meaning closer to the base glyph (-32 is greater than -64)  */ 
/*   Example:    CALL[], 1, 10, 14,  95   call,outline#,a1,b1,funct#  */

FDEF[], 95
#BEGIN
SVTCA[Y]
#PUSHOFF
DUP[]
ROLL[]
MD[N]
DUP[]
#PUSH, -64
GTEQ[]
IF[]
NEG[]
#PUSH, -64
ADD[]
SWAP[]
DUP[]
ROLL[]
SHPIX[]
SRP2[]
SHC[2]
ELSE[]
POP[]
POP[]
POP[]
EIF[]
#END
#PUSHON
ENDF[]

/*  Function 96 takes 4 arguments,  This is the same as Function 94 except the user can specify how close the accent needs to be before it is moved. 
the value is in pixels, good amounts are 0, which will only move accents that are crashing or under the top of a glyph. 32, is a good value for not over shifting accents and just shifts ones that are 1/2 a pixel or less near the top of the base glyph. 
Finally 64 can be used but it tends to shift accents that are almost a full pixel but not and then they seem often too high when they are shifted.  */
/* Example:   CALL[], 1, 10, 14,  32, 96  ( Outline#, pt1, pt2,  AMT in 64ths from base (0, 32, or 64) , Function 96 ) */

FDEF[], 96
#BEGIN
SVTCA[Y]
#PUSHOFF
ROLL[] 
ROLL[]
DUP[] 
ROLL[] 
MD[N] 
ROLL[] 
SWAP[] 
DUP[] 
ROLL[] 
LTEQ[] 
IF[] 
#PUSH, 64 
ADD[] 
SWAP[] 
DUP[] 
ROLL[] 
SHPIX[] 
SRP2[]
SHC[2]
ELSE[]
POP[]
POP[]
POP[]
POP[]
EIF[]
#END
#PUSHON
ENDF[]

    </extraProgram>

    <extraProgram name="ppgm">
/* auto-generated pre-program */
/* VTT 6.01C compiler */
/* Grey scaling? */
CALL[], 84

/* InstructionsOn */
#PUSHOFF
MPPEM[]
#PUSH, 1000
GT[]
MPPEM[]
#PUSH, 8
LT[]
OR[]
#PUSH, 1
GETINFO[]
#PUSH, 37
GTEQ[]
#PUSH, 1
GETINFO[]
#PUSH, 64
LTEQ[]
AND[]
#PUSH, 6
GETINFO[]
#PUSH, 0
NEQ[]
AND[]
OR[]
IF[]
    #PUSH, 1, 1
    INSTCTRL[]
EIF[]
#PUSHON

/* DropOutCtrlOff */
SCANCTRL[], 400

SCANTYPE[], 1
SCANTYPE[], 5

/* CvtCutIn */
SVTCA[Y]
SCVTCI[], 256
WS[], 3, 256
#PUSHOFF
MPPEM[]
#PUSH, 29
GTEQ[]
IF[]
#PUSH, 3, 160, 160
SCVTCI[]
WS[]
EIF[]
MPPEM[]
#PUSH, 100
GTEQ[]
IF[]
#PUSH, 3, 0, 0
SCVTCI[]
WS[]
EIF[]
#PUSHON

CALL[], 3, 50, 2, 85
CALL[], 9, 50, 8, 85
SDB[], 8
DLTC1[(0 @0 8)(0 @1 8)]
DLTC1[(6 @0 8)(6 @1 8)]
DLTC1[(6 @3 8)]
DLTC1[(6 @5 8)]
DLTC1[(6 @7 8)]
DLTC1[(6 @9 8)]
DLTC1[(6 @11 8)]
DLTC1[(6 @13 8)]
DLTC1[(6 @15 8)]
DLTC2[(6 @1 8)]
DLTC2[(6 @3 8)]
DLTC2[(6 @5 8)]
DLTC2[(6 @7 8)]
DLTC2[(6 @9 8)]
DLTC2[(6 @11 8)]
DLTC2[(6 @13 8)]
DLTC2[(6 @15 8)]
DLTC3[(6 @1 8)]
DLTC1[(14 @10 -8)]
CALL[], 1, 50, 0, 85
CALL[], 7, 50, 6, 85
CALL[], 11, 50, 10, 85
CALL[], 15, 50, 14, 85
CALL[], 5, 50, 4, 85
CALL[], 13, 50, 12, 85
DLTC1[(18 @11 -8)]
CALL[], 17, 50, 16, 85
DLTC1[(126 @3 8)]
CALL[], 129, 54, 126, 85
CALL[], 130, 54, 127, 85
CALL[], 131, 54, 128, 85
DLTC1[(120 @0 8)(120 @1 8)]
DLTC1[(120 @6 -8)(120 @8 -8)]
DLTC2[(120 @0 -8)]
DLTC2[(120 @3 8)]
DLTC2[(120 @8 -8)]
DLTC2[(120 @11 8)]
DLTC3[(120 @7 -8)(120 @9 -8)(120 @15 -8)]
SDB[], 57
DLTC1[(120 @0 -8)(120 @8 -8)(120 @10 -8)]
SDB[], 18
DLTC1[(147 @0 -8)(147 @2 -8)(147 @12 -8)(147 @14 -8)]
DLTC2[(147 @13 -8)(147 @15 -8)]
DLTC3[(147 @9 -8)]
SDB[], 69
DLTC1[(147 @0 -8)]
SDB[], 16
DLTC1[(154 @0 -8)(154 @4 -8)(154 @7 -8)(154 @8 -8)
      (154 @9 -8)(154 @14 -8)]
DLTC2[(154 @2 -8)(154 @12 -8)]
DLTC3[(154 @2 8)(154 @6 8)]
DLTC3[(154 @14 -8)]
SDB[], 68
DLTC1[(154 @0 8)]
SDB[], 16
DLTC1[(155 @0 -8)(155 @1 -8)(155 @11 -8)(155 @14 -8)
      (155 @15 -8)]
DLTC2[(155 @0 -8)(155 @5 -8)(155 @9 -8)(155 @10 -8)]
DLTC3[(155 @2 8)(155 @5 8)(155 @6 8)]
DLTC3[(155 @14 -8)]
SDB[], 65
DLTC1[(155 @0 -8)(155 @1 -8)(155 @2 -8)(155 @7 -8)]
SDB[], 13
DLTC1[(156 @0 -8)(156 @11 -8)]
DLTC2[(156 @1 -8)(156 @5 -8)(156 @6 -8)(156 @12 -8)]
DLTC3[(156 @2 8)]
DLTC3[(156 @6 -8)(156 @7 -8)]
SDB[], 62
DLTC1[(156 @0 -8)(156 @1 -8)(156 @10 -8)]
SDB[], 37
DLTC1[(157 @0 -8)(157 @4 -8)(157 @8 -8)]
DLTC1[(157 @13 8)]
DLTC2[(157 @1 8)(157 @3 8)]
DLTC3[(157 @3 -8)]
SDB[], 20
DLTC1[(158 @0 -8)(158 @2 -8)(158 @4 -8)(158 @12 -8)
      (158 @14 -8)]
DLTC2[(158 @0 -8)(158 @7 -8)]
DLTC2[(158 @14 -8)(158 @15 -8)]
DLTC3[(158 @0 -8)(158 @2 -8)(158 @4 -8)]
DLTC3[(158 @13 -8)(158 @15 -8)]
SDB[], 69
DLTC1[(158 @0 -8)]
SDB[], 14
DLTC1[(159 @0 -8)(159 @2 -8)]
DLTC1[(159 @3 8)]
DLTC1[(159 @8 -8)(159 @10 -8)]
DLTC2[(159 @2 -8)(159 @4 -8)(159 @10 -8)(159 @15 -8)]
DLTC3[(159 @1 -8)(159 @3 -8)]
DLTC3[(159 @5 8)(159 @6 8)(159 @8 8)(159 @10 8)]
SDB[], 63
DLTC1[(159 @0 -8)(159 @8 -8)]
SDB[], 26
DLTC1[(160 @0 -8)(160 @2 -8)(160 @4 -8)]
DLTC2[(160 @0 -8)(160 @7 -8)]
DLTC2[(160 @8 8)(160 @10 8)(160 @12 8)(160 @14 8)]
DLTC3[(160 @9 -8)(160 @11 -8)(160 @13 -8)]
SDB[], 8
DLTC1[(161 @0 8)]
DLTC1[(161 @5 -8)(161 @9 -8)(161 @10 -8)]
DLTC2[(161 @3 -8)(161 @4 -8)(161 @7 -8)(161 @10 -8)
      (161 @14 -8)(161 @15 -8)]
DLTC3[(161 @9 -8)(161 @12 -8)]
SDB[], 59
DLTC1[(161 @0 -8)(161 @1 -8)(161 @4 -8)(161 @5 -8)
      (161 @6 -8)(161 @11 -8)]
CALL[], 121, 120, 42, 31
SDB[], 48
DLTC1[(121 @0 8)(121 @2 8)(121 @10 8)]
SVTCA[X]
CALL[], 64, 66, 8, 15, 70
SVTCA[Y]
SDB[], 18
DLTC1[(67 @0 -8)]
SVTCA[X]
CALL[], 68, 66, 42, 31
CALL[], 69, 66, 42, 31
CALL[], 70, 68, 100, 31
SVTCA[Y]
CALL[], 72, 67, 28, 31
CALL[], -64, 72, 50, 53, 70
DLTC1[(72 @10 -8)]
DLTC2[(72 @5 -8)(72 @6 -8)]
CALL[], 73, 72, 54, 31
CALL[], 74, 72, 100, 31
SVTCA[X]
CALL[], 81, 66, 42, 31
CALL[], 83, 81, 100, 31
SVTCA[Y]
CALL[], 85, 67, 28, 31
DLTC1[(85 @11 8)(85 @12 8)]
DLTC2[(85 @7 8)(85 @8 8)]
CALL[], 86, 85, 35, 31
CALL[], 87, 85, 100, 31
SVTCA[X]
CALL[], 97, 66, 27, 31
CALL[], 99, 97, 100, 31
SVTCA[Y]
CALL[], 101, 67, 28, 31
DLTC3[(101 @3 -8)]
DLTC1[(102 @1 8)(102 @14 8)]
CALL[], 148, 85, 55, 31
CALL[], 103, 101, 100, 31
SVTCA[X]
CALL[], 132, 66, 27, 31
CALL[], 133, 132, 100, 31
SVTCA[Y]
SDB[], 8
DLTC1[(135 @0 -8)(135 @1 -8)]
CALL[], 136, 134, 100, 31
SVTCA[X]
CALL[], 110, 66, 27, 31
CALL[], 112, 110, 100, 31
SVTCA[Y]
CALL[], 114, 101, 53, 31
CALL[], 115, 85, 41, 31
CALL[], 116, 114, 100, 31
DLTC1[(117 @3 -8)]
DLTC3[(117 @8 -8)]
DLTC3[(117 @14 8)]
SDB[], 61
DLTC1[(117 @0 8)(117 @7 8)]
CALL[], 128, 149, 50, 100, 70
CALL[], 150, 67, 21, 31
SDB[], 33
DLTC1[(150 @0 8)]
SDB[], 21
DLTC1[(151 @0 8)(151 @14 8)]
DLTC2[(151 @12 8)]
SVTCA[X]
CALL[], 123, 122, 50, 31
SVTCA[Y]
SDB[], 19
DLTC1[(143 @0 8)]
DLTC1[(162 @0 8)(162 @1 8)(162 @2 8)]
DLTC2[(162 @0 8)(162 @14 8)]
CALL[], 125, 124, 42, 31
RTG[]
SDB[], 9

    </extraProgram>

  </TSI1>

</ttFont>
